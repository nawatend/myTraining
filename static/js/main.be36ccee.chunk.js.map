{"version":3,"sources":["logo.svg","components/Nav.jsx","utils/getPageName.js","api/api.js","api/auth.js","api/user.js","api/exerciseFull.js","api/workoutSession.js","api/sporter.js","api/feedback.js","api/rate.js","api/progress.js","components/Header.jsx","utils/jwt.js","layouts/base.jsx","components/Button.jsx","components/WorkoutCard.jsx","components/ExerciseCard.jsx","components/HorizontalContainer.jsx","utils/msToTime.js","components/Timer.jsx","components/Bars.jsx","components/texts/Title.jsx","components/texts/SubTitle.jsx","components/texts/Paragraph.jsx","components/texts/TextAndLabel.jsx","pages/index.jsx","components/ExerciseMainInfo.jsx","components/exercise/Done.jsx","pages/ExerciseDetailPage.jsx","pages/ProfilePage.jsx","utils/labels.jsx","components/Chart.jsx","components/Tabs.jsx","utils/getDayNumber.js","pages/ProgressPage.jsx","components/Feedback.jsx","pages/TodayExercisesPage.jsx","pages/WorkoutsPage.jsx","utils/checkRole.js","pages/Login.jsx","pages/Register.jsx","pages/EditProfile.jsx","components/RouteWithLayout/RouteWithLayout.js","router/index.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Nav","makeStyles","root","width","console","log","useLocation","pathname","React","useState","value","setValue","BottomNavigation","onChange","event","newValue","showLabels","className","BottomNavigationAction","component","Link","to","label","icon","path","split","axiosInstance","axios","create","baseURL","Auth","body","post","data","this","setToken","localStorage","removeItem","token","undefined","jwtDecode","getToken","Date","getDecodedToken","exp","expiresAt","getItem","setItem","User","get","res","id","delete","ExerciseFull","WorkoutSessionService","put","SporterService","Feedback","Rate","Progress","useStyles","theme","flexGrow","menuButton","marginRight","spacing","title","textTransform","withRouter","location","match","history","classes","AppBar","position","Toolbar","length","IconButton","onClick","window","back","edge","color","aria-label","Typography","variant","getPageName","AuthService","logout","Button","isJWTValid","isValid","decodedToken","jwt","complete","dateNow","getTime","getUserIdFromJWT","userId","BaseLayout","props","children","isAuth","setIsAuth","useEffect","text","fullWidth","WorkoutCard","Card","workoutSession","CardActionArea","CardMedia","image","imageName","CardContent","gutterBottom","type","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","duration","shortest","expandOpen","avatar","backgroundColor","red","ExerciseCard","progress","setProgress","timer","setInterval","performance","oldProgress","clearInterval","exerciseBase","CardHeader","subheader","time","reps","kg","sets","done","CircularProgress","HorizontalContainer","msToTime","ms","parseInt","seconds","Math","floor","minutes","hours","msToMinutes","Timer","startTimer","setState","state","start","now","isOn","displayTime","handleTimer","stopTimer","resetTimer","stop","reset","resume","Component","Bars","maxBar","coveredBar","bars","i","push","key","Title","SubTitle","Paragraph","TextAndLabel","useHistory","values","workoutSessions","setWorkoutSessions","workoutProgramId","setWorkoutProgramId","finishedWSs","setFinishedWSs","unfinishedWSs","setUnfinishedWSs","setReset","getSporterByUserId","then","workoutProgram","catch","e","getWorkoutSessionsByWorkoutProgram","unfinished","filter","ws","finished","forEach","setDone","workoutSessionId","map","ExerciseMainInfo","mainInfo","cardioLevel","muscleLevel","ExerciseDone","imagePath","videoPath","description","results","FormControl","Slider","defaultValue","elapseTime","handleChange","aria-labelledby","step","min","max","name","valueLabelDisplay","Grid","container","item","xs","handleBack","handleFinished","useParams","exerciseFullId","exerciseInfo","setExerciseInfo","isDone","setIsDone","setFinished","setElapseTime","sporter","setSporter","setResults","ExerciseFullService","getExerciseFullById","btnFinish","document","getElementById","header","scrollIntoView","behavior","controls","src","videoName","aspectratio","prop","sporterId","ProgressService","createProgress","display","margin","small","large","user","trainer","goal","weight","daysTrained","daysTrainedStreak","setValues","Avatar","alt","fullName","Divider","acceptTrainer","preventDefault","acceptInvite","trainerId","cancelInvite","focus","getLabels","days","d","getMonth","day","getDay","week","month","year","getFullYear","Chart","labelType","averageName","labels","setLabels","end","mainScope","chartData","setChartData","getStepSize","stepSize","slice","data2","datasets","borderColor","options","curvature","legend","scales","yAxes","ticks","TabsMenu","setType","types","Paper","Tabs","indicatorColor","textColor","centered","Tab","getDayNumber","date","diff","getTimezoneOffset","formControl","minWidth","selectEmpty","marginTop","setExerciseBase","exerciseBaseId","setExerciseBaseId","chartType","setChartType","exerciseBases","setExerciseBases","progresses","setProgresses","setLoading","currentProgresses","setCurrentProgresses","Array","fill","dayData","setDayData","getWeekNumber","weekData","setWeekData","monthData","setMonthData","yearData","setYearData","getProgressesBySporter","EBs","find","eb","exerciseFull","updateDays","cp","createdAt","updateWeek","w","weekTot","n","goodWeek","updateMonth","m","monthTot","updateYear","yearTot","InputLabel","Select","labelId","target","MenuItem","rateValue","setRateValue","isRated","setIsRated","feedbackValue","setFeedbackValue","isFeedbackSkipped","setIsFeedbackSkipped","rateId","setRateId","rate","RateService","createRate","acceptFeedback","skipFeedback","Rating","noValidate","autoComplete","TextField","autoFocus","multiline","rowsMax","message","FeedbackService","createFeedback","sendFeedback","workoutsessionId","almostDone","setAlmostDone","exercises","setExercises","unfinishedExercises","setUnfinishedExercises","finishedExercises","setFinishedExercises","getExerciseFullsByWorkoutSession","exercise","freeWorkoutSessions","setFreeWorkoutSessions","getWorkoutSessionsByFree","checkRole","withoutLabel","textField","LoginPage","email","amount","password","weightRange","showPassword","error","accessDenied","process","srcSet","helperText","clsx","htmlFor","Input","endAdornment","InputAdornment","onMouseDown","justify","alignItems","sm","button","login","response","role","Error","showError","paper","actionsContainer","marginBottom","resetContainer","padding","marks","heights","weights","RegisterPage","activeStep","setActiveStep","steps","gender","age","userInfo","setUserInfo","handleClickShowPassword","handleMouseDownPassword","handleTextFieldChange","handleNext","prevActiveStep","registerUser","UserService","createUser","Stepper","orientation","index","Step","StepLabel","StepContent","RadioGroup","FormControlLabel","control","Radio","getStepContent","disabled","EditProfilePage","updateUser","RouteWithLayout","Layout","layout","rest","render","matchProps","router","basename","exact","HomePage","ExerciseDetailPage","TodayExercisesPage","WorkoutsPage","ProgressPage","ProfilePage","App","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2JAAAA,EAAOC,QAAU,IAA0B,kC,4LCmC5BC,GA3BGC,YAAW,CACzBC,KAAM,CACFC,MAAO,UAIL,WAENC,QAAQC,IAAIC,cAAcC,UAFd,MAGcC,IAAMC,SAAS,GAH7B,mBAGLC,EAHK,KAGEC,EAHF,KAKZ,OACI,kBAACC,EAAA,EAAD,CACIF,MAAOA,EACPG,SAAU,SAACC,EAAOC,GACdJ,EAASI,IAEbC,YAAU,EACVC,UAAU,eACV,kBAACC,EAAA,EAAD,CAAwBC,UAAWC,IAAMC,GAAG,IAAIC,MAAM,OAAOC,KAAM,kBAAC,IAAD,QACnE,kBAACL,EAAA,EAAD,CAAwBC,UAAWC,IAAMC,GAAG,YAAYC,MAAM,UAAUC,KAAM,kBAAC,IAAD,QAC9E,kBAACL,EAAA,EAAD,CAAwBC,UAAWC,IAAMC,GAAG,YAAYC,MAAM,WAAWC,KAAM,kBAAC,IAAD,QAC/E,kBAACL,EAAA,EAAD,CAAwBC,UAAWC,IAAMC,GAAG,WAAWC,MAAM,UAAUC,KAAM,kBAAC,IAAD,W,4CC9B1E,WAACC,GACZ,OAAOA,EAAKC,MAAM,KAAK,I,iECGdC,E,OAAgBC,EAAMC,OAAO,CACxCC,QAAS,0CC4CIC,E,4IAvCKC,G,yFAGRL,EAAcM,KAAd,cAAkCD,G,gBAD3CE,E,EAAAA,KAEDC,KAAKC,SAASF,G,sIAIdG,aAAaC,WAZM,oB,sCAeGC,GACtB,GAAIA,GAAmB,OAAVA,QAA4BC,IAAVD,EAE9B,OADqBE,IAAUF,K,wCAMhC,YAA2BC,IAApBL,KAAKO,YAAgD,OAApBP,KAAKO,a,kCAI7C,OAAO,IAAIC,KAAiD,IAA5CR,KAAKS,gBAAgBT,KAAKO,YAAYG,O,kCAItD,OAAO,IAAIF,KAASR,KAAKW,c,iCAIzB,OAAOT,aAAaU,QAnCD,oB,+BAsCJR,GACfF,aAAaW,QAvCM,iBAuCgBT,O,KCdtBU,E,0OAzBOtB,EAAcuB,IAAI,U,cAA9BC,E,gBACaA,EAAIjB,K,cAAjBA,E,yBACCA,G,4KAGgBkB,G,yFACLzB,EAAcuB,IAAd,iBAA4BE,I,cAAxCD,E,gBACaA,EAAIjB,K,cAAjBA,E,yBACCA,G,4KAGeF,G,wEACtB3B,QAAQC,IAAI0B,G,kBACLL,EAAcM,KAAd,SAA6BD,I,4KAOdoB,G,0FACfzB,EAAc0B,OAAd,iBAA+BD,K,yGCa3BE,E,kPAlCO3B,EAAcuB,IAAI,kB,cAA9BC,E,gBACaA,EAAIjB,K,cAAjBA,E,yBACCA,G,oLAGwBkB,G,yFACbzB,EAAcuB,IAAd,yBAAoCE,I,cAAhDD,E,gBACaA,EAAIjB,K,cAAjBA,E,yBACCA,G,kMAGqCkB,G,yFAC1BzB,EAAcuB,IAAd,wCAAmDE,I,cAA/DD,E,gBACaA,EAAIjB,K,cAAjBA,E,yBACCA,G,oLAGuBF,G,0FACvBL,EAAcM,KAAd,iBAAqCD,I,yKAGzBA,G,0FACZL,EAAcM,KAAd,sBAA0CD,I,oLAOnBoB,G,0FACvBzB,EAAc0B,OAAd,yBAAuCD,K,yGCgCnCG,E,oPA9DK5B,EAAcuB,IAAI,oB,cAA9BC,E,gBACaA,EAAIjB,K,cAAjBA,E,yBACCA,G,sLAG2BkB,G,yFAChBzB,EAAcuB,IAAd,2BAAsCE,I,cAAlDD,E,gBACaA,EAAIjB,K,cAAjBA,E,yBACCA,G,6LAIiCkB,G,yFACtBzB,EAAcuB,IAAd,mCAA8CE,I,cAA1DD,E,gBACaA,EAAIjB,K,cAAjBA,E,yBACCA,G,qRAIWP,EAAcuB,IAAd,6B,cAAZC,E,gBACaA,EAAIjB,K,cAAjBA,E,yBACCA,G,mMAIwCkB,G,yFAC7BzB,EAAcuB,IAAd,0CAAqDE,I,cAAjED,E,gBACaA,EAAIjB,K,cAAjBA,E,yBACCA,G,0RAKWP,EAAcuB,IAAd,8B,cAAZC,E,gBACaA,EAAIjB,K,cAAjBA,E,yBACCA,G,wKAGaF,G,0FACXL,EAAcM,KAAd,wBAA4CD,I,sLAKpBA,G,wEACjC3B,QAAQC,IAAI0B,G,kBACLL,EAAcM,KAAd,mBAAuCD,I,sLAEbA,G,wEACjC3B,QAAQC,IAAI0B,G,kBACLL,EAAc6B,IAAd,0BAA6CxB,I,sLAOnBoB,G,0FAC1BzB,EAAc0B,OAAd,2BAAyCD,K,yGCgBnCK,E,6OA1EK9B,EAAcuB,IAAI,a,cAA9BC,E,gBACaA,EAAIjB,K,cAAjBA,E,yBACCA,G,qLAG0BF,G,yFACfL,EAAcM,KAAK,oBAAqBD,G,cAApDmB,E,gBACaA,EAAIjB,K,cAAjBA,E,yBACCA,G,gLAGoBkB,G,yFACTzB,EAAcuB,IAAd,oBAA+BE,I,cAA3CD,E,gBACaA,EAAIjB,K,cAAjBA,E,yBACCA,G,oLAGwBkB,G,yFACbzB,EAAcuB,IAAd,yBAAoCE,I,cAAhDD,E,gBACaA,EAAIjB,K,cAAjBA,E,yBACCA,G,2LAK+BF,G,0FAE/BL,EAAcM,KAAd,2BAA+CD,I,iLAG1BA,G,0FAErBL,EAAcM,KAAd,mBAAuCD,I,+KAGpBA,G,0FAEnBL,EAAcM,KAAd,YAAgCD,I,+KAGbA,G,0FAEnBL,EAAcM,KAAd,gBAAoCD,I,sLAGVA,G,0FAE1BL,EAAcM,KAAd,kCAAsDD,I,mLAG/BA,G,0FAEvBL,EAAcM,KAAd,mBAAuCD,I,8KAGrBA,G,0FAElBL,EAAcM,KAAd,0BAA8CD,I,8KAI5BA,G,0FAElBL,EAAcM,KAAd,0BAA8CD,I,+KAM3BoB,G,0FACnBzB,EAAc0B,OAAd,oBAAkCD,K,yGCvC5BM,E,8OA/BO/B,EAAcuB,IAAI,c,cAA9BC,E,gBACaA,EAAIjB,K,cAAjBA,E,yBACCA,G,gLAGoBkB,G,yFACTzB,EAAcuB,IAAd,qBAAgCE,I,cAA5CD,E,gBACaA,EAAIjB,K,cAAjBA,E,yBACCA,G,uLAG0BkB,G,yFACfzB,EAAcuB,IAAd,6BAAwCE,I,cAApDD,E,gBACaA,EAAIjB,K,cAAjBA,E,yBACCA,G,gLAGmBF,G,wEAC1B3B,QAAQC,IAAI0B,G,kBACLL,EAAcM,KAAd,aAAiCD,I,gLAOdoB,G,0FACnBzB,EAAc0B,OAAd,qBAAmCD,K,yGCI/BO,E,0OA/BOhC,EAAcuB,IAAI,U,cAA9BC,E,gBACaA,EAAIjB,K,cAAjBA,E,yBACCA,G,4KAGgBkB,G,yFACLzB,EAAcuB,IAAd,iBAA4BE,I,cAAxCD,E,gBACaA,EAAIjB,K,cAAjBA,E,yBACCA,G,mLAGsBkB,G,yFACXzB,EAAcuB,IAAd,yBAAoCE,I,cAAhDD,E,gBACaA,EAAIjB,K,cAAjBA,E,yBACCA,G,4KAGeF,G,wEACtB3B,QAAQC,IAAI0B,G,kBACLL,EAAcM,KAAd,SAA6BD,I,4KAOdoB,G,0FACfzB,EAAc0B,OAAd,iBAA+BD,K,yGCI3BQ,E,+OA/BOjC,EAAcuB,IAAI,e,cAA9BC,E,gBACaA,EAAIjB,K,cAAjBA,E,yBACCA,G,gLAGoBkB,G,yFACTzB,EAAcuB,IAAd,sBAAiCE,I,cAA7CD,E,gBACaA,EAAIjB,K,cAAjBA,E,yBACCA,G,gLAGmBF,G,wEAC1B3B,QAAQC,IAAI0B,G,kBACLL,EAAcM,KAAd,cAAkCD,I,wLAGPoB,G,yFAChBzB,EAAcuB,IAAd,8BAAyCE,I,cAArDD,E,gBACaA,EAAIjB,K,cAAjBA,E,yBACCA,G,gLAOmBkB,G,0FACnBzB,EAAc0B,OAAd,sBAAoCD,K,yGCbzCS,EAAY3D,aAAW,SAAA4D,GAAK,MAAK,CACnC3D,KAAM,CACF4D,SAAU,GAEdC,WAAY,CACRC,YAAaH,EAAMI,QAAQ,IAE/BC,MAAO,CACHJ,SAAU,EACVK,cAAe,kBAsCRC,eAlCF,SAAC,GAAiC,EAA/BC,SAAgC,IAAtBC,EAAqB,EAArBA,MAAqB,KAAdC,QAEb9D,mBAAS2B,aAAaU,QAAQ,sBAFH,uBAGnBrC,mBAAS,WAHU,mBAIrC+D,GAJqC,UAI3BZ,KAQhB,OACI,yBAAK3C,UAAWuD,EAAQtE,MACpB,kBAACuE,EAAA,EAAD,CAAQxD,UAAU,SAASkC,GAAG,eAAeuB,SAAS,UAClD,kBAACC,EAAA,EAAD,KACML,EAAM9C,KAAKC,MAAM,KAAKmD,QAAU,GAC9B,kBAACC,EAAA,EAAD,CAAYC,QAAS,kBAAMC,OAAOR,QAAQS,QAAQC,KAAK,QAAQhE,UAAWuD,EAAQT,WAAYmB,MAAM,UAAUC,aAAW,QACrH,kBAAC,IAAD,OAGR,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKpE,UAAWuD,EAAQN,OACV,KAA5BoB,EAAYhB,EAAM9C,MAAgB,cAAgB8D,EAAYhB,EAAM9C,OAG1E,kBAAC,IAAD,CAAMH,GAAG,cAAcyD,QAlB1B,WACTS,EAAYC,WAkBI,kBAACC,EAAA,EAAD,CAAQP,MAAM,WAAd,kBCrDpBQ,EAAa,WAEhB,IAAIC,GAAU,EACRrD,EAAQF,aAAaU,QAJP,kBAMpB,GAAc,cAAVR,GAAmC,OAAVA,EAAgB,CAC5C,IAAIsD,EAAeC,EAAIvD,EAAO,CAC7BwD,UAAU,IAEPC,EAAU,IAAIrD,KAKjBiD,EADGC,EAAahD,IAAMmD,EAAQC,UAAY,IAO5C,OADA5F,QAAQC,IAAIsF,GACLA,GAGJM,EAAmB,WAEtB,IAAM3D,EAAQF,aAAaU,QA1BP,kBA4BhBoD,EAAS,EACC,cAAV5D,GAAmC,OAAVA,IAI5B4D,EAHmBL,EAAIvD,EAAO,CAC7BwD,UAAU,IAEWI,QAKvB,OAAOA,GCFOC,EA/BI,SAAAC,GAAU,IAEjBC,EAAaD,EAAbC,SAFgB,EAGI5F,oBAAS,GAHb,mBAGjB6F,EAHiB,KAGTC,EAHS,KAUxB,OALAC,qBAAU,WACND,EAAUb,OACX,CAACY,IAGCA,EAMG,yBAAKrF,UAAU,iBACX,kBAAC,EAAD,MACA,0BAAMA,UAAU,iBACXoF,GAEL,kBAAC,EAAD,OATJ,kBAAC,IAAD,CAAUhF,GAAG,iBCnBV,SAASoE,EAAOW,EAAhB,GAA8I,IAAD,IAApHf,eAAoH,MAA1G,YAA0G,MAA7FoB,YAA6F,MAAtF,gBAAsF,MAArEvB,aAAqE,MAA7D,UAA6D,IAAlDJ,QACtG,OACI,kBAAC,IAAD,CAAU4B,WAAS,EAAC5B,QAASsB,EAAMtB,QAASO,QAASe,EAAMf,SAAWA,EAASH,MAAOkB,EAAMlB,OAASA,GAChGkB,EAAMK,MAAQA,G,wCCKZ,SAASE,EAAYP,GAChC,OACI,kBAACQ,EAAA,EAAD,CAAMzF,UAAWC,IAAMC,GAAE,iBAAY+E,EAAMS,eAAe1D,IAAMlC,UAAU,iBACtE,kBAAC6F,EAAA,EAAD,CAAgB7F,UAAU,6BACtB,kBAAC8F,EAAA,EAAD,CACI9F,UAAU,uBACV+F,MAAK,kFAA6EZ,EAAMS,eAAeI,WACvG/C,MAAM,cAEV,kBAACgD,EAAA,EAAD,CAAajG,UAAU,0BACnB,kBAACmE,EAAA,EAAD,CAAY+B,cAAY,EAAC9B,QAAQ,KAAKlE,UAAU,MAC3CiF,EAAMS,eAAe3C,OAE1B,kBAACkB,EAAA,EAAD,CAAYC,QAAQ,QAAQlE,UAAU,KACjCiF,EAAMS,eAAeO,S,qCCT5BnH,aAAW,SAAA4D,GAAK,MAAK,CACnC3D,KAAM,CACFmH,SAAU,KAEdC,MAAO,CACHC,OAAQ,EACRC,WAAY,UAEhBC,OAAQ,CACJC,UAAW,eACXC,WAAY,OACZC,WAAY/D,EAAMgE,YAAYjG,OAAO,YAAa,CAC9CkG,SAAUjE,EAAMgE,YAAYC,SAASC,YAG7CC,WAAY,CACRN,UAAW,kBAEfO,OAAQ,CACJC,gBAAiBC,IAAI,UAId,SAASC,GAAahC,GAAQ,IAAD,EAGN5F,IAAMC,SAAS,GAHT,gCAmBRA,mBAAS,IAnBD,mBAmBjC4H,EAnBiC,KAmBvBC,EAnBuB,KAoCxC,OAfA9B,qBAAU,WACN,IAOM+B,EAAQC,aAPD,WAELH,IAAajC,EAAMnE,KAAKwG,aACxBH,GAAY,SAACI,GAAD,OAAkBA,GAAetC,EAAMnE,KAAKwG,YAAcrC,EAAMnE,KAAKwG,YAAcC,EAAc,OAIrF,IAChC,OAAO,WACHC,cAAcJ,MAEnB,CAACF,EAAUjC,EAAMnE,KAAKwG,cAIrB,kBAAC7B,EAAA,EAAD,CAAM3F,UAAU,kBACZ,kBAAC,IAAD,CAAMI,GAAE,0BAAqB+E,EAAMnE,KAAK4E,eAAe1D,GAA/C,YAAqDiD,EAAMnE,KAAKkB,IAAMlC,UAAU,wBACpF,kBAAC8F,EAAA,EAAD,CACI9F,UAAU,wBACV+F,MAAK,kFAA6EZ,EAAMnE,KAAK2G,aAAa3B,WAC1G/C,MAAOkC,EAAMnE,KAAKiC,QAEtB,kBAAC2E,EAAA,EAAD,CACI5H,UAAU,wBACViD,MAAOkC,EAAMnE,KAAK2G,aAAa1E,MAC/B4E,UAA6C,SAAjC1C,EAAMnE,KAAK2G,aAAaxB,KAAzB,UAA+ChB,EAAMnE,KAAK8G,KAA1D,QACN,6BACG,yBAAK9H,UAAU,aAAf,UAA+BmF,EAAMnE,KAAK+G,KAA1C,UACA,yBAAK/H,UAAU,aAAf,UAA+BmF,EAAMnE,KAAKgH,GAA1C,QACA,yBAAKhI,UAAU,aAAf,UAA+BmF,EAAMnE,KAAKiH,KAA1C,cAMhB,yBAAKjI,UAAU,0BACVmF,EAAMnE,KAAKkH,MACR,kBAACC,EAAA,EAAD,CAAkBnI,UAAU,qBAAqBoE,QAAQ,SAAS3E,MAAO2H,KAgB3EjC,EAAMnE,KAAKkH,MACT,kBAAC,IAAD,CAAM9H,GAAE,0BAAqB+E,EAAMnE,KAAK4E,eAAe1D,GAA/C,YAAqDiD,EAAMnE,KAAKkB,IAAMlC,UAAU,wBACpF,kBAAC,EAAD,CAAQwF,KAAK,aCjHtB,SAAS4C,GAAoBjD,GACxC,OACI,yBAAKnF,UAAU,qBACVmF,EAAMC,U,kCCNfiD,GAAW,SAACC,GAGOC,SAAUD,EAAK,IAAQ,KAA1C,IACIE,EAAUC,KAAKC,MAAOJ,EAAK,IAAQ,IACnCK,EAAUF,KAAKC,MAAOJ,EAAE,IAAkB,IAC1CM,EAAQH,KAAKC,MAAOJ,EAAE,KAAuB,IAMjD,OAJAM,EAASA,EAAQ,GAAM,IAAMA,EAAQA,GAItB,KAHfD,EAAWA,EAAU,GAAM,IAAMA,EAAUA,GAGZ,KAF/BH,EAAWA,EAAU,GAAM,IAAMA,EAAUA,IAM3CK,GAAc,SAACP,GACIC,SAAUD,EAAK,IAAQ,KAA1C,IACIE,EAAUC,KAAKC,MAAOJ,EAAK,IAAQ,IACnCK,EAAUF,KAAKC,MAAOJ,EAAE,IAAkB,IAK9C,OAFAE,EAA2BA,EAD3BG,EAA2BA,GCwChBG,G,YAxDX,WAAY3D,GAAQ,IAAD,8BACf,8CAAMA,KASV4D,WAAa,WACT,EAAKC,SAAS,CACVlB,KAAM,EAAKmB,MAAMnB,KACjBoB,MAAOzH,KAAK0H,MAAQ,EAAKF,MAAMnB,KAC/BsB,MAAM,IAEV,EAAK9B,MAAQC,aAAY,WACrB,EAAKyB,SAAS,CACVlB,KAAMrG,KAAK0H,MAAQ,EAAKF,MAAMC,MAC9BG,YAAahB,GAAS5G,KAAK0H,MAAQ,EAAKF,MAAMC,SAGlD,EAAK/D,MAAMmE,YAAY,EAAKL,MAAMnB,QACnC,IAvBY,EAyBnByB,UAAY,WACR,EAAKP,SAAS,CAAEI,MAAM,IACtB1B,cAAc,EAAKJ,QA3BJ,EA6BnBkC,WAAa,WACT,EAAKR,SAAS,CAAElB,KAAM,EAAGuB,YAAa,cA5BtC,EAAKJ,MAAQ,CACTnB,KAAM,EACNoB,MAAO,EACPG,YAAa,WACbD,MAAM,GANK,E,uEAiCf,IAAIF,EAA6B,IAApBjI,KAAKgI,MAAMnB,KACpB,kBAACtD,EAAA,EAAD,CAAQJ,QAAQ,WAAWpE,UAAU,6BAA6B6D,QAAS5C,KAAK8H,YAAhF,SACA,KACAU,EAAQxI,KAAKgI,MAAMG,KACnB,kBAAC5E,EAAA,EAAD,CAAQJ,QAAQ,WAAWpE,UAAU,4BAA4B6D,QAAS5C,KAAKsI,WAA/E,QACA,KACAG,EAA6B,IAApBzI,KAAKgI,MAAMnB,MAAe7G,KAAKgI,MAAMG,KAE9C,KADA,kBAAC5E,EAAA,EAAD,CAAQJ,QAAQ,WAAWpE,UAAU,6BAA6B6D,QAAS5C,KAAKuI,YAAhF,SAEAG,EAA8B,IAApB1I,KAAKgI,MAAMnB,MAAe7G,KAAKgI,MAAMG,KAE/C,KADA,kBAAC5E,EAAA,EAAD,CAAQJ,QAAQ,WAAWpE,UAAU,8BAA8B6D,QAAS5C,KAAK8H,YAAjF,UAEJ,OACI,yBAAK/I,UAAU,SACX,4BAAKiB,KAAKgI,MAAMI,aACfH,EACAS,EACAF,EACAC,O,GArDGnK,IAAMqK,WCDX,SAASC,GAAT,GAIX,IAJ2E,IAAD,IAA/CC,cAA+C,MAAtC,EAAsC,MAAnCC,kBAAmC,MAAtB,EAAsB,MAAnB1J,aAAmB,MAAX,QAAW,EAEtE2J,EAAO,GAEFC,EAAI,EAAGA,EAAIH,EAAQG,IACpBA,GAAK,GAAKA,EAAIF,EACdC,EAAKE,KAAK,yBAAKC,IAAKF,EAAGjK,UAAU,sBAEjCgK,EAAKE,KAAK,yBAAKC,IAAKF,EAAGjK,UAAU,SAGzC,OACI,yBAAKA,UAAU,QACX,yBAAKA,UAAU,eACVK,GAEL,yBAAKL,UAAU,cACVgK,ICjBF,SAASI,GAAT,GAAoC,IAAD,IAAlB5E,YAAkB,MAAX,QAAW,EAC9C,OACI,yBAAKxF,UAAU,SACVwF,GCHE,SAAS6E,GAAT,GAA2C,IAAD,IAAtB7E,YAAsB,MAAf,YAAe,EACrD,OACI,yBAAKxF,UAAU,cACVwF,GCHE,SAAS8E,GAAT,GAA4C,IAAD,IAAtB9E,YAAsB,MAAf,YAAe,EACtD,OACI,yBAAKxF,UAAU,aACVwF,GCHE,SAAS+E,GAAT,GAA+D,IAAD,IAAtC/E,YAAsC,MAA/B,OAA+B,MAAvBnF,aAAuB,MAAf,YAAe,EAC3E,OACE,yBAAKL,UAAU,gBACb,yBAAKA,UAAU,uBAAuBK,GACtC,yBAAKL,UAAU,sBAAsBwF,ICW3C,IA0GerC,gBA1GA,SAACgC,GAEIqF,cAAhB,IAFsB,EAGQhL,qBAHR,gCAIMA,mBAAS,KAJf,mBAIfiL,EAJe,aAKwBjL,mBAAS,KALjC,mBAKfkL,EALe,KAKEC,EALF,OAM0BnL,qBAN1B,mBAMfoL,EANe,KAMGC,EANH,OAOgBrL,mBAAS,IAPzB,mBAOfsL,EAPe,KAOFC,EAPE,OAQoBvL,mBAAS,IAR7B,mBAQfwL,EARe,KAQAC,EARA,OASIzL,oBAAS,GATb,mBASfkK,EATe,KASRwB,EATQ,KAWtB3F,qBAAU,WACNhD,EAAe4I,mBAAmBnG,KAC7BoG,MAAK,SAACnJ,GACH9C,QAAQC,IAAI6C,GACe,OAAvBA,EAAIoJ,eAEJR,EAAoB5I,EAAIoJ,eAAenJ,IAEvC2I,EAAoB,SAEzBS,OAAM,SAACC,GAAD,OAAOpM,QAAQC,IAAI,0BACjC,CAACqL,IAEJlF,qBAAU,WACNlD,EAAsBmJ,mCAAmCZ,GACpDQ,MAAK,SAACnJ,GACH9C,QAAQC,IAAI6C,GACZ0I,EAAmB,YAAI1I,OACxBqJ,OAAM,SAACC,GAAD,OAAOpM,QAAQC,IAAI,2BAEjC,CAACwL,EAAkBlB,IAGtBnE,qBAAU,WAEN,IAAIkG,EAAaf,EAAgBgB,QAAO,SAACC,GACrC,OAAmB,IAAZA,EAAGzD,QAGV0D,EAAWlB,EAAgBgB,QAAO,SAACC,GACnC,OAAmB,IAAZA,EAAGzD,QAEd/I,QAAQC,IAAIqM,GACZR,EAAiBQ,GACjBV,EAAea,KAChB,CAAClB,IAeJ,OAAyB,OAArBE,EAEO,kBAAC,IAAD,CAAUxK,GAAG,cAKhB,yBAAKJ,UAAU,QAEX,kBAACqK,GAAD,CAAU7E,KAAK,2BAEY,IAAzBwF,EAAcrH,QAAqC,OAArBiH,EAE5B,yBAAK5K,UAAU,SACX,yBAAKA,UAAU,eAAf,oCAEA,kBAAC,EAAD,CAAQ6D,QAAS,WA3BjC6G,EAAgBmB,SAAQ,SAAAF,GAEpBtJ,EAAsByJ,QAAQ,CAAEC,iBAAkBJ,EAAGzJ,GAAIgG,MAAM,IAC1DkD,MAAK,SAACnJ,GACHiJ,GAAS,UAuBkC1F,KAAK,WAK5C,kBAAC4C,GAAD,KACK4C,EAAcgB,KAAI,SAACpG,EAAgB1D,GAChC,OAAO,kBAACwD,EAAD,CAAayE,IAAKjI,EAAI0D,eAAgBA,QAS7D,kBAACyE,GAAD,CAAU7E,KAAK,uBACf,kBAAC4C,GAAD,KACK0C,EAAYkB,KAAI,SAACpG,EAAgB1D,GAC9B,OAAO,kBAACwD,EAAD,CAAayE,IAAKjI,EAAI0D,eAAgBA,Y,kBC9GtD,SAASqG,GAAT,GAAyC,IAAbC,EAAY,EAAZA,SACvC,OACI,6BACI,yBAAKlM,UAAU,wBAEsB,SAA/BkM,EAASvE,aAAaxB,KACpB,yBAAKnG,UAAU,cAEX,6BACI,yBAAKA,UAAU,qBAAf,gBACA,wBAAIA,UAAU,aAAd,UAA8BkM,EAASnE,KAAO,EAA9C,cAAqDmE,EAASnE,KAA9D,UACA,wBAAI/H,UAAU,aAAd,UAA8BkM,EAASlE,GAAK,EAA5C,cAAmDkE,EAASlE,GAA5D,QACA,wBAAIhI,UAAU,aAAd,UAA8BkM,EAASjE,KAAO,EAA9C,cAAqDiE,EAASjE,KAA9D,YAEJ,6BACA,kBAAC4B,GAAD,CAAMxJ,MAAM,SAASyJ,OAAQ,EAAGC,WAAYmC,EAASvE,aAAawE,cAClE,kBAACtC,GAAD,CAAMxJ,MAAM,SAASyJ,OAAQ,EAAGC,WAAYmC,EAASvE,aAAayE,eAIlE,yBAAKpM,UAAU,cACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,qCAAf,QACA,yBAAKA,UAAU,qCAAqCkM,EAASpE,KAA7D,aAEJ,kBAAC+B,GAAD,CAAMxJ,MAAM,SAASyJ,OAAQ,EAAGC,WAAYmC,EAASC,cACrD,kBAACtC,GAAD,CAAMxJ,MAAM,SAASyJ,OAAQ,EAAGC,WAAYmC,EAASE,iB,kCCwBlE,SAASC,GAAalH,GACnC,IAD0C,EA6BF3F,mBAlBpC,CACFyD,MAAO,UACPqJ,UAAW,mBACXC,UAAW,mBACXJ,YAAa,IACbC,YAAa,IACbjG,KAAM,OACN+F,SAAU,CAAEpE,KAAM,IAClB0E,YAAa,oFAnB2B,gCA8BZhN,mBAAS,CACrCsI,KAAM3C,EAAM+G,SAASpE,KACnBG,KAAM9C,EAAM+G,SAASjE,KACrBF,KAAM5C,EAAM+G,SAASnE,KACrBC,GAAI7C,EAAM+G,SAASlE,MAlCmB,mBA8BnCyE,EA9BmC,UAsC1C,OACE,yBAAKzM,UAAU,kBAEb,yBAAKA,UAAU,yBAAf,aACA,6DAGsC,SAArCmF,EAAM+G,SAASvE,aAAaxB,KAE3B,yBAAKnG,UAAU,4BAAf,SAAiDyM,EAAQ3E,KACvD,kBAAC4E,GAAA,EAAD,CAAaxM,UAAU,YACrB,kBAACyM,GAAA,EAAD,CACEC,aAAczH,EAAM0H,WAEpBjN,SAAUuF,EAAM2H,aAAa,QAE7BC,kBAAgB,OAChBC,KAAM,EAENC,IAAK,EACLC,IAAK,GACLC,KAAK,OACLC,kBAAkB,SAMtB,6BAEE,yBAAKpN,UAAU,4BAAf,SAAiDyM,EAAQxE,KACvD,kBAACyE,GAAA,EAAD,CAAaxM,UAAU,YACrB,kBAACyM,GAAA,EAAD,CACEC,aAAczH,EAAM+G,SAASjE,KAE7BrI,SAAUuF,EAAM2H,aAAa,QAE7BC,kBAAgB,OAChBC,KAAM,EAENC,IAAK,EACLC,IAAK,GACLC,KAAK,OACLC,kBAAkB,SAKxB,yBAAKpN,UAAU,4BAAf,gBAAwDyM,EAAQ1E,KAC9D,kBAAC2E,GAAA,EAAD,CAAaxM,UAAU,YAErB,kBAACyM,GAAA,EAAD,CACEC,aAAczH,EAAM+G,SAASnE,KAE7BnI,SAAUuF,EAAM2H,aAAa,QAE7BC,kBAAgB,OAChBC,KAAM,EAENC,IAAK,EACLC,IAAK,GACLC,KAAK,OACLC,kBAAkB,SAIxB,yBAAKpN,UAAU,4BAAf,aAAqDyM,EAAQzE,GAC3D,kBAAC0E,GAAA,EAAD,CAAaxM,UAAU,YACrB,kBAACyM,GAAA,EAAD,CACEC,aAAczH,EAAM+G,SAASlE,GAE7BpI,SAAUuF,EAAM2H,aAAa,MAE7BC,kBAAgB,KAChBC,KAAM,EAENC,IAAK,EACLC,IAAK,IACLC,KAAK,KACLC,kBAAkB,UAM9B,yBAAKpN,UAAU,2BACb,kBAACqN,GAAA,EAAD,CAAMC,WAAS,EAACtK,QAAS,GACvB,kBAACqK,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAAC,EAAD,CAAQ3J,QAASsB,EAAMsI,WAAYrJ,QAAQ,WAAWoB,KAAK,UAE7D,kBAAC6H,GAAA,EAAD,CAAMnL,GAAG,mBAAmBqL,MAAI,EAACC,GAAI,GACnC,kBAAC,EAAD,CAAQ3J,QAASsB,EAAMuI,eAAgBlI,KAAK,eCxKxD,IAwLerC,gBAxLU,WAGrB,IA6BMG,EAAUkH,cAhCW,EAiCkBmD,cAArC5B,EAjCmB,EAiCnBA,iBAAkB6B,EAjCC,EAiCDA,eAjCC,EAmCapO,mBAAS,CAAEoG,eAAgB,GAAI+B,aAAc,KAnC1D,mBAmCpBkG,EAnCoB,KAmCNC,EAnCM,OAqCCtO,oBAAS,GArCV,mBAqCpBuO,EArCoB,KAqCZC,EArCY,OAsCKxO,oBAAS,GAtCd,mBAsCVyO,GAtCU,aAuCSzO,mBAAS,GAvClB,mBAuCpBqN,EAvCoB,KAuCRqB,EAvCQ,OAwCG1O,qBAxCH,mBAwCpB2O,EAxCoB,KAwCXC,EAxCW,OAyCG5O,mBAAS,CAAEsI,KAAM,EAAGG,KAAM,EAAGF,KAAM,EAAGC,GAAI,IAzC7C,mBAyCpByE,EAzCoB,KAyCX4B,EAzCW,KA+C3B9I,qBAAU,WACNhD,EAAe4I,mBAAmBnG,KAC7BoG,MAAK,SAACnJ,GACHmM,EAAWnM,MACZqJ,OAAM,SAACC,GAAD,OAAOpM,QAAQC,IAAI,0BACjC,IAGHmG,qBAAU,WACN8I,EAAW,CAAEvG,KAAM+F,EAAa/F,KAAMG,KAAM4F,EAAa5F,KAAMF,KAAM8F,EAAa9F,KAAMC,GAAI6F,EAAa7F,OAC1G,CAAC6F,EAAa7F,GAAI6F,EAAa9F,KAAM8F,EAAa5F,KAAM4F,EAAa/F,OAyFxE,OAxBAvC,qBAAU,WAENpG,QAAQC,IAAIwO,GACZU,EAAoBC,oBAAoBX,GACnCxC,MAAK,SAACnJ,GACH9C,QAAQC,IAAI6C,GACZ6L,EAAgB,gBAAK7L,OAExBqJ,OAAM,SAACC,GAAD,OAAOpM,QAAQC,IAAImM,QAE/B,CAACqC,IAGJrI,qBAAU,WACN,IAAIiJ,EAAYC,SAASC,eAAe,oBACpCC,EAASF,SAASC,eAAe,gBACjCF,GACAA,EAAUI,eAAe,CAAEC,SAAU,WACrC1P,QAAQC,IAAI,aAEZuP,EAAOC,eAAe,CAAEC,SAAU,aAEvC,CAACd,IAIA,yBAAK/N,UAAU,oBACX,yBAAKA,UAAU,0BAA0BkC,GAAG,mBACxC,kBAAC4D,EAAA,EAAD,CACI5F,UAAU,QACV4O,UAAQ,EACR9O,UAAU,iCACV+O,IAAG,oEAA+DlB,EAAalG,aAAaqH,WAC5F/L,MAAM,iBACNgM,YAAY,UAInBlB,EAAS,kBAAC1B,GAAD,CAAcS,aArHX,SAACoC,GAAD,OAAU,SAACrP,EAAOJ,GACnC4O,EAAW,gBAAK5B,EAAN,gBAAgByC,EAAOzP,OAoHuByM,SAAU2B,EAAcJ,WA9FjE,WACftO,QAAQC,IAAI,mBACZ4O,GAAU,IA4F8FN,eAzFrF,WACnBvO,QAAQC,IAAI,uBAGZ,IAAIoI,EAAc,EAGdA,EADmC,SAAnCqG,EAAalG,aAAaxB,KACZsG,EAAQ3E,KAAO+F,EAAa/F,MAI1B2E,EAAQ1E,KAAO8F,EAAa9F,KACrC0E,EAAQxE,KAAO4F,EAAa5F,KAC5BwE,EAAQzE,GAAK6F,EAAa7F,IAAO,EAI5C,IAAIlH,EAAO,CACPqO,UAAWhB,EAAQjM,GACnB0L,eAAgBC,EAAa3L,GAC7B+F,KAAMwE,EAAQxE,KACdF,KAAM0E,EAAQ1E,KACdC,GAAIyE,EAAQzE,GACZF,KAAM2E,EAAQ3E,KACdN,YAA4B,IAAdA,GAAqB,IAAO,IAAoB,IAAdA,GAIpD4H,EAAgBC,eAAevO,GAC1BsK,MAAK,SAACnJ,GACH9C,QAAQC,IAAI6C,MAEfqJ,OAAM,SAACC,GAAD,OAAOpM,QAAQC,IAAImM,MAG9BpM,QAAQC,IAAIoI,GAEZ8G,EAAoBxC,QAAQ,CAAE8B,eAAgBA,EAAgB1F,MAAM,EAAMV,YAA4B,IAAdA,GAAqB,IAAO,IAAoB,IAAdA,IACrH4D,MAAK,SAACnJ,GACH9C,QAAQC,IAAI6C,GACZgM,GAAY,GACZ3K,EAAQ4G,KAAK,UAAY6B,OAgDuGc,WAAYhE,GAAYgE,KACvJ,yBAAK7M,UAAU,0BACZ,yBAAKA,UAAU,kCACX,yBAAKA,UAAU,yCAAyC6N,EAAalG,aAAa1E,OAClF,yBAAKjD,UAAU,0CACX,kBAAC,EAAD,CAAQ6D,QA1Gb,WACf1E,QAAQC,IAAI,mBAGZ4O,GAAU,IAsGuCxI,KAAK,WAGN,SAAnCqI,EAAalG,aAAaxB,MACvB,yBAAKnG,UAAU,iBACX,kBAAC,GAAD,CAAOsJ,YApDX,SAAC7J,GACjByO,EAAczO,OAuDF,kBAACwM,GAAD,CAAkBC,SAAU2B,IAC5B,yBAAK7N,UAAU,uCACV6N,EAAalG,aAAa6E,kB,oBCnL7C7J,GAAY3D,aAAW,SAAC4D,GAAD,MAAY,CACrC3D,KAAM,CACFqQ,QAAS,OACT,QAAS,CACLC,OAAQ3M,EAAMI,QAAQ,IAE1B9D,MAAO,QAEXsQ,MAAO,CACHtQ,MAAO0D,EAAMI,QAAQ,GACrBsD,OAAQ1D,EAAMI,QAAQ,IAE1ByM,MAAO,CACHvQ,MAAO0D,EAAMI,QAAQ,IACrBsD,OAAQ1D,EAAMI,QAAQ,SA2HfG,gBAvHG,WACd,IAAMI,EAAUZ,KAEVW,EAAUkH,cAHI,EAIQhL,mBAAS,CACjCkQ,KAAM,GACNC,QAAS,CAAED,KAAM,IACjBE,KAAM,GACNtJ,OAAQ,GACRuJ,OAAQ,GACRC,YAAa,EACXC,kBAAmB,IAXL,mBAIbtF,EAJa,KAILuF,EAJK,OAccxQ,mBAAS,MAdvB,6BAgBpB+F,qBAAU,WACNhD,EAAe4I,mBAAmBnG,KAC7BoG,MAAK,SAACnJ,GACH+N,EAAU,gBAAKvF,EAAN,GAAiBxI,OAC3BqJ,OAAM,SAACC,GAAD,OAAOpM,QAAQC,IAAI,0BACjC,CAACqL,IAuBJ,OACI,yBAAKzK,UAAU,WACX,yBAAKA,UAAU,gBACX,kBAAC,EAAD,CAAQwF,KAAK,OAAOpB,QAAQ,OAAOP,QAAS,kBAAMP,EAAQ4G,KAAK,qBAEnE,yBAAKlK,UAAU,2BACX,kBAACiQ,GAAA,EAAD,CAAQC,IAAKzF,EAAOiF,KAAKS,SAAUpB,IAAG,kFAA6EtE,EAAOiF,KAAK1J,WAAahG,UAAWuD,EAAQkM,QAC/J,kBAACrF,GAAD,CAAO5E,KAAMiF,EAAOiF,KAAKS,YAE7B,kBAACC,GAAA,EAAD,CAAShM,QAAQ,WACjB,yBAAKpE,UAAU,oBAEe,IAAzByK,EAAO4F,eAA6C,OAAnB5F,EAAOkF,SACrC,yBAAK3P,UAAU,4BACX,yBAAKA,UAAU,qCACX,kBAACuK,GAAD,CAAclK,MAAM,UAAUmF,KAAM,gBAAkBiF,EAAOkF,QAAQD,KAAKS,WAC1E,kBAACF,GAAA,EAAD,CAAQC,IAAKzF,EAAOkF,QAAQD,KAAKS,SAAUpB,IAAG,kFAA6EtE,EAAOkF,QAAQD,KAAK1J,WAAahG,UAAWuD,EAAQiM,SAEnL,yBAAKxP,UAAU,oCACX,kBAAC,EAAD,CAAQwF,KAAK,SAASpB,QAAQ,YAAYP,QAAS,SAAC0H,GAAD,OA9BtD,SAACA,GAClBA,EAAE+E,iBAEF/N,EAAegO,aAAa,CAAEpB,UAAW1E,EAAOvI,GAAIsO,UAAW/F,EAAOkF,QAAQzN,GAAImO,eAAe,IAC5FjF,MAAK,SAAAnJ,GACF+N,EAAU,gBAAKvF,EAAN,CAAc8F,cAAc,QAExCjF,OAAM,SAACC,GAAD,OAAOpM,QAAQC,IAAImM,MAuBgDgF,CAAahF,MAD3E,IACkF,kBAAC,EAAD,CAAQ/F,KAAK,SAASpB,QAAQ,OAAOP,QAxCtH,SAAC0H,GAClBA,EAAE+E,iBACFnR,QAAQC,IAAI,QACZmD,EAAekO,aAAa,CAAEtB,UAAW1E,EAAOvI,GAAIsO,UAAW/F,EAAOkF,QAAQzN,GAAImO,eAAe,IAC5FjF,MAAK,SAAAnJ,GACF+N,EAAU,gBAAKvF,EAAN,CAAc8F,cAAc,EAAOZ,QAAS,WAExDrE,OAAM,SAACC,GAAD,OAAOpM,QAAQC,IAAImM,YAuCI,IAAzBd,EAAO4F,eAA6C,OAAnB5F,EAAOkF,SACrC,yBAAK3P,UAAU,4BACX,yBAAKA,UAAU,qCACX,kBAACuK,GAAD,CAAclK,MAAM,UAAUmF,KAAMiF,EAAOkF,QAAQD,KAAKS,SAAW,KAAO1F,EAAOkF,QAAQe,QACzF,kBAACT,GAAA,EAAD,CAAQC,IAAKzF,EAAOkF,QAAQD,KAAKS,SAAUpB,IAAG,kFAA6EtE,EAAOkF,QAAQD,KAAK1J,WAAahG,UAAWuD,EAAQiM,UAKvK,OAAnB/E,EAAOkF,SACJ,yBAAK3P,UAAU,4BACX,yBAAKA,UAAU,qCACX,kBAACuK,GAAD,CAAclK,MAAM,UAAUmF,KAAM,kBAMhD,kBAAC4K,GAAA,EAAD,CAAShM,QAAQ,WAEjB,kBAACiJ,GAAA,EAAD,CAAMC,WAAS,EAACtK,QAAS,GACrB,kBAACqK,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAACjD,GAAD,CAAclK,MAAM,OAAOmF,KAAMiF,EAAOmF,QAE5C,kBAACvC,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACX,kBAACjD,GAAD,CAAclK,MAAM,SAASmF,KAAMiF,EAAOnE,OAAS,SAGvD,kBAAC+G,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACX,kBAACjD,GAAD,CAAclK,MAAM,SAASmF,KAAMiF,EAAOoF,OAAS,SAEvD,kBAACxC,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACX,kBAACjD,GAAD,CAAclK,MAAM,eAAemF,KAAMiF,EAAOqF,eAGpD,kBAACzC,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAACjD,GAAD,CAAclK,MAAM,sBAAsBmF,KAAMiF,EAAOsF,2B,wCC/FhEY,GArCC,WAGZ,IAAIC,EAAO,CAAC,MAAO,MAAO,OAAQ,MAAO,OAAQ,MAAO,OAEpDC,EAAI,IAAIpP,KACOoP,EAAEC,WAErB,MAAO,CACHC,IAAK,CAEAH,EAAKC,EAAEG,SAAW,GAAMJ,EAAKC,EAAEG,SAAW,GAAKJ,EAAKA,EAAKjN,QAAU,EAAIkN,EAAEG,WACzEJ,EAAKC,EAAEG,SAAW,GAAMJ,EAAKC,EAAEG,SAAW,GAAKJ,EAAKA,EAAKjN,QAAU,EAAIkN,EAAEG,WACzEJ,EAAKC,EAAEG,SAAW,GAAMJ,EAAKC,EAAEG,SAAW,GAAKJ,EAAKA,EAAKjN,QAAU,EAAIkN,EAAEG,WACzEJ,EAAKC,EAAEG,SAAW,GAAMJ,EAAKC,EAAEG,SAAW,GAAKJ,EAAKA,EAAKjN,QAAU,EAAIkN,EAAEG,WACzEJ,EAAKC,EAAEG,SAAW,GAAMJ,EAAKC,EAAEG,SAAW,GAAKJ,EAAKA,EAAKjN,QAAU,EAAIkN,EAAEG,WACzEJ,EAAKC,EAAEG,SAAW,GAAMJ,EAAKC,EAAEG,SAAW,GAAKJ,EAAKA,EAAKjN,QAAU,EAAIkN,EAAEG,WAC1EJ,EAAKC,EAAEG,WAEXC,KAAM,CAAC,SAAU,SAAU,SAAU,UAcrCC,MAAO,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACrFC,KAAM,CAACN,EAAEO,cAAgB,EAAGP,EAAEO,cAAgB,EAAGP,EAAEO,cAAgB,EAAGP,EAAEO,cAAgB,EAAGP,EAAEO,iBC9BtF,SAASC,GAAT,GAAkI,IAAD,IAAhHC,iBAAgH,MAApG,MAAoG,MAA7FtQ,YAA6F,MAAtF,GAAsF,MAAlFmM,YAAkF,MAA3E,QAA2E,MAAlEoE,mBAAkE,MAApD,eAAoD,OAApCpL,KAAoC,EAArBlC,cAAqB,MAAb,UAAa,IAmBhHzE,mBAASmR,KAAYW,IAnB2F,mBAmBrIE,EAnBqI,KAmB7HC,EAnB6H,OAqB1GjS,mBAAS,CACvCuR,IAAK,CACD7H,MAAOlI,EAAK+P,IAAIpN,OAChB+N,IAAK1Q,EAAK+P,IAAIpN,OAAS,GAE3BsN,KAAM,CACF/H,MAAOlI,EAAKiQ,KAAKtN,OACjB+N,IAAK1Q,EAAKiQ,KAAKtN,OAAS,GAE5BuN,MAAO,CACHhI,MAAOlI,EAAKkQ,MAAMvN,OAClB+N,IAAK,GAETP,KAAM,CACFjI,MAAOlI,EAAK+P,IAAIpN,OAChB+N,IAAK1Q,EAAK+P,IAAIpN,OAAS,KApC6G,mBAqBrIgO,EArBqI,aAuC1GnS,mBAAS,KAvCiG,mBAuCrIoS,EAvCqI,KAuC1HC,EAvC0H,OAwC5GrS,mBAvCd,SAACiL,GAEf,IAAMyC,EAAMzE,KAAKyE,IAAL,MAAAzE,KAAI,YAAQgC,IACZhC,KAAKwE,IAAL,MAAAxE,KAAI,YAAQgC,IAExB,OAAOlC,SAAS2E,EAAM,GAAK,GAkCU4E,CAAY9Q,EAAK+P,MAxCkF,mBAwCrIgB,EAxCqI,UA2C5IxM,qBAAU,WACY,QAAd+L,GAEAO,EAAa7Q,EAAK+P,IAAIiB,MAAML,EAAUZ,IAAIW,IAAKC,EAAUZ,IAAI7H,QAG/C,SAAdoI,GAEAO,EAAa7Q,EAAKiQ,KAAKe,MAAML,EAAUV,KAAKS,IAAKC,EAAUV,KAAK/H,QAElD,UAAdoI,GAEAO,EAAa7Q,EAAKkQ,MAAMc,MAAML,EAAUT,MAAMQ,IAAKC,EAAUT,MAAMhI,QAGvE/J,QAAQC,IAAIuR,MACM,SAAdW,GAEAO,EAAa7Q,EAAKmQ,QAEvB,CAACnQ,IAGJuE,qBAAU,WACNkM,EAAUd,KAAYW,MACvB,CAACA,IAEJ,IAAIW,EAAQ,CACRT,OAAQA,EACRU,SAAU,CAAC,CACP7R,MAAOkR,EACPtK,gBAAiBhD,EACjBkO,YAAalO,EACbjD,KAAM4Q,IAEVQ,QAAS,CACLC,UAAW,EACXpP,MAAO,CACHqM,SAAS,EACT9J,KAAM2H,GAGVmF,OAAQ,CACJhD,SAAS,EACT7L,SAAU,UAEd8O,OAAQ,CACJC,MAAO,CAAC,CACJC,MAAO,CACHV,SAAUA,QAQ9B,OACI,kBAAE,KAAF,CACI/Q,KAAMiR,EACNG,QAASH,EAAMG,QACf9L,OAAQ,IACRpH,MAAO,M,kCCvGJ,SAASwT,GAASvN,GAAQ,IAAD,EAEV3F,mBAAS,GAFC,mBAE7BC,EAF6B,KAEtBC,EAFsB,OAGZF,mBAAS,OAHG,mBAGvBmT,GAHuB,WAK9BC,EAAQ,CAAC,MAAO,OAAQ,QAAS,QAYvC,OACI,kBAACC,GAAA,EAAD,CAAO7S,UAAU,QACb,kBAAC8S,GAAA,EAAD,CACIrT,MAAOA,EACPG,SAAU,SAACC,EAAOC,IAdT,SAACD,EAAOC,GACzB6S,EAAQC,EAAM9S,IACdJ,EAASI,GAaGgN,CAAajN,EAAOC,GACpBqF,EAAMvF,SAASgT,EAAM9S,KAEzBiT,eAAe,YACfC,UAAU,UACVC,UAAQ,GAGR,kBAACC,GAAA,EAAD,CAAK7S,MAAM,SACX,kBAAC6S,GAAA,EAAD,CAAK7S,MAAM,UACX,kBAAC6S,GAAA,EAAD,CAAK7S,MAAM,WCxC3B,IAAI8S,GAAe,SAACC,GAClB,IAAIjK,EAAM,IAAI1H,KAAK2R,GACflK,EAAQ,IAAIzH,KAAK0H,EAAIiI,cAAe,EAAG,GACvCiC,EAAQlK,EAAMD,EAAkE,IAAvDA,EAAMoK,oBAAsBnK,EAAImK,qBAA4B,IAKzF,OAHU7K,KAAKC,MAAM2K,EADR,QCeT1Q,GAAY3D,aAAW,SAAA4D,GAAK,MAAK,CACnC2Q,YAAa,CACThE,OAAQ3M,EAAMI,QAAQ,GACtBwQ,SAAU,KAEdC,YAAa,CACTC,UAAW9Q,EAAMI,QAAQ,QAkMlBG,gBA9LI,WAEf,IAAMI,EAAUZ,KAFK,EAImBnD,mBAAS,IAJ5B,mBAIdmI,EAJc,KAIAgM,EAJA,OAKuBnU,mBAAS,GALhC,mBAKdoU,EALc,KAKEC,EALF,OAMarU,mBAAS,OANtB,mBAMdsU,EANc,KAMHC,EANG,OAQqBvU,mBAAS,IAR9B,mBAQdwU,EARc,KAQCC,EARD,OAUezU,mBAAS,IAVxB,mBAUd0U,EAVc,KAUFC,EAVE,OAWS3U,mBAAS,IAXlB,mBAWd2O,EAXc,KAWLC,EAXK,OAYS5O,oBAAS,GAZlB,mBAYL4U,GAZK,aAc6B5U,mBAAS,IAdtC,mBAcd6U,EAdc,KAcKC,EAdL,OAiBS9U,mBAAS+U,MAAMpB,GAAa,IAAI1R,OAAS+S,KAAK,IAjBvD,mBAiBdC,EAjBc,KAiBLC,EAjBK,OAkBWlV,mBAAS+U,MDnCzB,SAACnB,GACnB,IAAIjK,EAAM,IAAI1H,KAAK2R,GACflK,EAAQ,IAAIzH,KAAK0H,EAAIiI,cAAe,EAAG,GACvCiC,EAAQlK,EAAMD,EAAkE,IAAvDA,EAAMoK,oBAAsBnK,EAAImK,qBAA4B,IAKzF,OAHW7K,KAAKC,MAAM2K,EADR,QC+BmCsB,CAAc,IAAIlT,MAAU,GAAG+S,KAAK,IAlB9D,mBAkBdI,EAlBc,KAkBJC,EAlBI,OAmBarV,mBAAS+U,OAAM,IAAI9S,MAAOqP,WAAa,GAAG0D,KAAK,IAnB5D,mBAmBdM,EAnBc,KAmBHC,EAnBG,OAoBWvV,mBAAS+U,MAAM,GAAGC,KAAK,IApBlC,mBAoBdQ,EApBc,KAoBJC,GApBI,KAuBrB1P,qBAAU,WAENhD,EAAe4I,mBAAmBnG,KAC7BoG,MAAK,SAACnJ,GACHmM,EAAW,gBAAKnM,OACjBqJ,OAAM,SAACC,GAAD,OAAOpM,QAAQC,IAAI,0BACjC,IAEHmG,qBAAU,WACN6J,EAAgB8F,uBAAuB/G,EAAQjM,IAC1CkJ,MAAK,SAACnJ,GACHkS,EAAc,YAAIlS,SAE3B,CAACkM,EAAQjM,KAGZqD,qBAAU,WACN,IAAI4P,EAAM,GACNjB,EAAWvQ,QAAU,GACrBuQ,EAAWrI,SAAQ,SAAAzE,QAEyD9F,IAApE6T,EAAIC,MAAK,SAAAC,GAAE,OAAIA,EAAGnT,KAAOkF,EAASkO,aAAa3N,aAAazF,OAC5DiT,EAAIjL,KAAK9C,EAASkO,aAAa3N,iBAI3CsM,EAAiBkB,GACjBf,GAAW,KACZ,CAACF,EAAYA,EAAWvQ,SAE3B4B,qBAAU,WACNoO,EAAgB,gBAAKK,EAAc,OACpC,CAACA,IAGJzO,qBAAU,WACN,IAAImG,EAASwI,EAAWxI,QAAO,SAACtE,GAC5B,OAAOA,EAASkO,aAAa3N,aAAazF,KAAOyF,EAAazF,MAElEoS,EAAqB5I,KACtB,CAAC/D,EAAazF,GAAIgS,IAErB3O,qBAAU,WACN,IAAIgQ,EAAahB,MAAMpB,GAAa,IAAI1R,OAAS+S,KAAK,GACtDH,EAAkBxI,SAAQ,SAAA2J,GACI,SAAtB7N,EAAaxB,KACboP,EAAWpC,GAAaqC,EAAGC,WAAa,GAAKD,EAAG1N,KAEhDyN,EAAWpC,GAAaqC,EAAGC,WAAa,GAAKD,EAAGxN,MAKxD,IAAI0N,EAAU,YAAOd,GAIrBA,EAAS/I,SAAQ,SAAC8J,EAAG1L,GAIjB,IAHA,IAAI2L,EAAU,EAGLC,EAAQ,EAAJ5L,EAAO4L,GAAU,EAAJ5L,EAPjB,EAOgC4L,IAErCD,GAAYL,EAAWM,GAAMN,EAAWM,GAAK,EAEjDH,EAAWzL,GAAK1B,SAASqN,EAAUvB,EAAkB1Q,QACrDiS,EAAU,KAMd,IAAIE,EAAW,YAAIJ,GAAY1D,MAAM,EAAG0D,EAAW/R,QAC/CoS,EAAW,YAAOjB,GAGtBA,EAAUjJ,SAAQ,SAACmK,EAAG/L,GAKlB,IAFA,IAAIgM,EAAW,EAENJ,EAAQ,EAAJ5L,EAAO4L,GAAU,EAAJ5L,EAPZ,EAOgC4L,IAE1CI,GAAaH,EAASD,GAAMC,EAASD,GAAK,EAG9CE,EAAY9L,GAAK1B,SAAS0N,EAAW5B,EAAkB1Q,QACvDsS,EAAW,KAIf,IAAIC,EAAU,YAAOlB,GAGrBA,EAASnJ,SAAQ,SAACmK,EAAG/L,GAIjB,IAFA,IAAIkM,EAAU,EAELN,EAAI,EAAGA,GAAKE,EAAYpS,OAAQkS,IACrCM,GAAYJ,EAAYF,GAAME,EAAYF,GAAK,EAEnDK,EAAWjM,GAAK1B,SAAS4N,EAAU9B,EAAkB1Q,QACrDwS,EAAU,KAEdhX,QAAQC,IAAI2W,GACZ5W,QAAQC,IAAI8W,GAGZjB,GAAYiB,GACZnB,EAAagB,GACblB,EAAYa,GACZhB,EAAWa,KACZ,CAAClB,IAeJ,OACI,yBAAKrU,UAAU,YAEX,kBAAC0M,GAAA,EAAD,CAAatI,QAAQ,SAASpE,UAAWuD,EAAQgQ,aAC7C,kBAAC6C,GAAA,EAAD,CAAYlU,GAAG,mCAAf,YACA,kBAACmU,GAAA,EAAD,CACIC,QAAQ,kCACRpU,GAAG,4BACHzC,MAAOmU,GAAkC,EAEzChU,SApBK,SAAAC,GAEjBgU,EAAkBhU,EAAM0W,OAAO9W,OAC/BkU,EAAgB,gBAAKK,EAAcnU,EAAM0W,OAAO9W,WAmBnCuU,EAAchI,KAAI,SAACqJ,EAAInT,GACpB,OAAO,kBAACsU,GAAA,EAAD,CAAUrM,IAAKjI,EAAIzC,MAAOyC,GAAKmT,EAAGpS,YAMrD,kBAACyP,GAAD,CAAU9S,SAtBO,SAACuG,GACtB4N,EAAa5N,MAuBc,SAAtBwB,EAAaxB,KACT,kBAACkL,GAAD,CAAOC,UAAWwC,EAAW3G,KAAMxF,EAAa1E,MAAOsO,YAAY,aAAavQ,KAAM,CAAE+P,IAAI,YAAK0D,GAAUxD,KAAK,YAAK2D,GAAW1D,MAAM,YAAK4D,GAAY3D,KAAK,YAAK6D,MAEjK,kBAAC3D,GAAD,CAAOC,UAAWwC,EAAW3G,KAAMxF,EAAa1E,MAAOsO,YAAY,kBAAkBvQ,KAAM,CAAE+P,IAAI,YAAK0D,GAAUxD,KAAK,YAAK2D,GAAW1D,MAAM,YAAK4D,GAAY3D,KAAK,YAAK6D,MAM3K,kBAAC3H,GAAA,EAAD,CAAMC,WAAS,EAACtK,QAAS,GACrB,kBAACqK,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAACjD,GAAD,CAAclK,MAAOsH,EAAa1E,MAAOuC,KAAM6O,EAAkB1Q,OAAS,iB,oBCpMxFhB,GAAY3D,aAAW,SAAA4D,GAAK,MAAK,CACnC3D,KAAM,CACF,uBAAwB,CACpBsQ,OAAQ3M,EAAMI,QAAQ,GACtB9D,MAAO,aAiLJsD,GA5KA,SAAA2C,GAEX,IAAM7B,EAAUkH,cAEVjH,EAAUZ,KAJI,EAKcnD,mBAAS,GALvB,mBAKbiX,EALa,KAKFC,EALE,OAMUlX,oBAAS,GANnB,mBAMbmX,EANa,KAMJC,EANI,OAQsBpX,qBARtB,mBAQbqX,EARa,KAQEC,EARF,OAS8BtX,oBAAS,GATvC,mBASbuX,EATa,KASMC,EATN,OAUIxX,oBAAS,GAVb,mBAUb0I,EAVa,KAUP4D,EAVO,OAYQtM,qBAZR,mBAYbyX,EAZa,KAYLC,EAZK,OAaU1X,qBAbV,6BAepBL,QAAQC,IAAI+F,EAAMnE,KAAK+K,kBAmEvB,OAAK7D,EAqFM,KAlFF6O,EAkCDJ,EAEI,kBAAChR,EAAA,EAAD,CAAM3F,UAAU,4BACZ,yBAAKA,UAAU,kBACX,kBAACqK,GAAD,CAAU7E,KAAK,uCACf,yBAAKxF,UAAU,oBACX,kBAAC,EAAD,CAAQ6D,QAAS,YApFlB,WAEnB,IAAI/C,EAAO,CACPiL,iBAAkB5G,EAAMnE,KAAK+K,iBAC7BoL,KAAMV,EACNtH,UAAWhK,EAAMnE,KAAKmN,QAAQjM,IAElCkV,EAAYC,WAAWvW,GAClBsK,MAAK,SAACnJ,GACH9C,QAAQC,IAAI6C,GACZiV,EAAUjV,EAAIjB,KAAKkB,OACpBoJ,OAAM,SAACC,GAAD,OAAOpM,QAAQC,IAAImM,MAChCyL,GAAqB,GAwEwBM,IAAoB9R,KAAK,QAClD,kBAAC,EAAD,CAAQ3B,QAAS,YAtEpB,WAGjB,IAAI/C,EAAO,CACPiL,iBAAkB5G,EAAMnE,KAAK+K,iBAC7BoL,KAAMV,EACNtH,UAAWhK,EAAMnE,KAAKmN,QAAQjM,IAElCkV,EAAYC,WAAWvW,GAClBsK,MAAK,SAACnJ,GACH9C,QAAQC,IAAI6C,GACZiV,EAAUjV,EAAIjB,KAAKkB,OAEpBoJ,OAAM,SAACC,GAAD,OAAOpM,QAAQC,IAAImM,MAEhClJ,EAAsByJ,QAAQ,CAAEC,iBAAkB5G,EAAMnE,KAAK+K,iBAAkB7D,MAAM,IAChFkD,MAAK,SAACnJ,GACH+U,GAAqB,GACrBlL,GAAQ,MACTR,OAAM,SAACC,GAAD,OAAOpM,QAAQC,IAAImM,MAGhCjI,EAAQ4G,KAAK,KAgDgCqN,IAAkB/R,KAAK,aAAapB,QAAQ,gBAoBjF,kBAACuB,EAAA,EAAD,CAAM3F,UAAU,4BACZ,yBAAKA,UAAU,kBACX,kBAACqK,GAAD,CAAU7E,KAAK,sDACf,yBAAKxF,UAAU,oBACX,kBAACsK,GAAD,CAAW9E,KAAK,gBAChB,kBAACgS,GAAA,EAAD,CACIrK,KAAK,iBACL1N,MAAOgX,EACP7W,SAAU,SAACC,EAAOC,GACd4W,EAAa5W,OAKzB,kBAAC,EAAD,CAAQ+D,QAAS,WAAQ+S,GAAW,IAASpR,KAAK,WAzE1D,kBAACG,EAAA,EAAD,CAAM3F,UAAU,4BACZ,yBAAKA,UAAU,kBACX,kBAACqK,GAAD,CAAU7E,KAAK,6BACf,yBAAKxF,UAAU,kBACX,kBAACwX,GAAA,EAAD,CACIrK,KAAK,iBACL1N,MAAOgX,EACP7W,SAAU,SAACC,EAAOC,GACd4W,EAAa5W,MAGrB,0BAAME,UAAWuD,EAAQtE,KAAMwY,YAAU,EAACC,aAAa,OACnD,6BACI,kBAACC,GAAA,EAAD,CACIC,WAAS,EACT1V,GAAG,8BACH2V,WAAS,EACTC,QAAQ,IACRrY,MAAOoX,EACPjX,SA1Ff,SAAAC,GACjBiX,EAAiBjX,EAAM0W,OAAO9W,aA8Fd,yBAAKO,UAAU,0BACX,kBAAC,EAAD,CAAQ6D,QAAS,YA5FpB,WAEjB,IAAI/C,EAAO,CACPiX,QAASlB,EACTI,OAAQA,EACRlL,iBAAkB5G,EAAMnE,KAAK+K,iBAC7ByE,UAAWrL,EAAMnE,KAAKmN,QAAQwB,QAAQzN,IAG1C8V,EAAgBC,eAAenX,GAC1BsK,MAAK,SAACnJ,GACH9C,QAAQC,IAAI6C,MACbqJ,OAAM,SAACC,GAAD,OAAOpM,QAAQC,IAAImM,MAEhClJ,EAAsByJ,QAAQ,CAAEC,iBAAkB5G,EAAMnE,KAAK+K,iBAAkB7D,MAAM,IAChFkD,MAAK,SAACnJ,GACH9C,QAAQC,IAAI6C,GACZ6J,GAAQ,MACTR,OAAM,SAACC,GAAD,OAAOpM,QAAQC,IAAImM,MA0Ea2M,IAAkB1S,KAAK,aCW7DrC,gBAtIU,SAACgC,GAAW,IAE3BgT,EAAqBxK,cAArBwK,iBAF0B,EA+CF3Y,oBAAS,GA/CP,gCAgDIA,oBAAS,IAhDb,mBAgDzB4Y,EAhDyB,KAgDbC,EAhDa,OAiDE7Y,mBAAS,IAjDX,mBAiDzB8Y,EAjDyB,KAiDdC,EAjDc,OAmDF/Y,mBAAS,IAnDP,mBAmDzB2O,EAnDyB,KAmDhBC,EAnDgB,OAqDsB5O,mBAAS,IArD/B,mBAqDzBgZ,EArDyB,KAqDJC,EArDI,OAsDkBjZ,mBAAS,IAtD3B,mBAsDzBkZ,EAtDyB,KAsDNC,EAtDM,KAiHhC,OAzDApT,qBAAU,WACNhD,EAAe4I,mBAAmBnG,KAC7BoG,MAAK,SAACnJ,GACHmM,EAAWnM,MACZqJ,OAAM,SAACC,GAAD,OAAOpM,QAAQC,IAAI,0BACjC,IAEHmG,qBAAU,WAENpG,QAAQC,IAAI+Y,GACZ7J,EAAoBsK,iCAAiCT,GAChD/M,MAAK,SAACnJ,GACH9C,QAAQC,IAAI6C,GACZsW,EAAa,YAAItW,OAEpBqJ,OAAM,SAACC,GAAD,OAAOpM,QAAQC,IAAImM,QAE/B,CAAC4M,IAMJ5S,qBAAU,WAE6B,IAA/BiT,EAAoB7U,OACpB0U,GAAc,GAEdA,GAAc,KAInB,CAACG,IAGJjT,qBAAU,WAEN,IAAIkG,EAAa6M,EAAU5M,QAAO,SAACmN,GAC/B,OAAyB,IAAlBA,EAAS3Q,QAGhB0D,EAAW0M,EAAU5M,QAAO,SAACmN,GAC7B,OAAyB,IAAlBA,EAAS3Q,QAEpB/I,QAAQC,IAAIqM,GACZgN,EAAuBhN,GACvBkN,EAAqB/M,KACtB,CAAC0M,IAEJ/S,qBAAU,WAEOkJ,SAASC,eAAe,gBAE9BE,eAAe,CAAEC,SAAU,aAEnC,IAGC,yBAAK7O,UAAU,oBAIX,kBAACqK,GAAD,CAAU7E,KAAK,sBACiB,IAA/BgT,EAAoB7U,OAChB6U,EAAoBxM,KAAI,SAAChL,EAAMiJ,GAAP,OAAgBjJ,EAAKkH,KAA+C,KAAvC,kBAACf,GAAD,CAAcgD,IAAKF,EAAGjJ,KAAMA,OAEjF,2CAGJsX,EAAU,IAAMF,IAAeE,EAAU,GAAG1S,eAAesC,MACxD,kBAAC,GAAD,CAAUlH,KAAM,CAAE+K,iBAAkBoM,EAAkBhK,QAASA,KAEnE,kBAAC9D,GAAD,CAAU7E,KAAK,wBACdkT,EAAkB1M,KAAI,SAAChL,EAAMiJ,GAAP,OAAejJ,EAAKkH,KAAQ,kBAACf,GAAD,CAAcgD,IAAKF,EAAGjJ,KAAMA,IAAW,YChEvFmC,gBAjEI,WAAO,IAAD,EAEO3D,mBAAS,IAFhB,mBAEdiL,EAFc,aAIyBjL,mBAAS,KAJlC,mBAIdkL,EAJc,KAIGC,EAJH,OAKiCnL,mBAAS,IAL1C,mBAKdsZ,EALc,KAKOC,EALP,OAM2BvZ,mBAAS,MANpC,mBAMdoL,EANc,KAMIC,EANJ,KAuCrB,OA/BAtF,qBAAU,WACNhD,EAAe4I,mBAAmBnG,KAC7BoG,MAAK,SAACnJ,GACH9C,QAAQC,IAAI6C,GACZ4I,EAAoB5I,EAAIoJ,eAAenJ,OACxCoJ,OAAM,SAACC,GAAD,OAAOpM,QAAQC,IAAI,0BACjC,CAACqL,IAEJlF,qBAAU,WACNlD,EAAsBmJ,mCAAmCZ,GACpDQ,MAAK,SAACnJ,GACH9C,QAAQC,IAAI6C,GACZ0I,EAAmB,YAAI1I,OACxBqJ,OAAM,SAACC,GAAD,OAAOpM,QAAQC,IAAI,2BAEjC,CAACwL,IAIJrF,qBAAU,WACNlD,EAAsB2W,2BACjB5N,MAAK,SAACnJ,GACH9C,QAAQC,IAAI6C,GACZ8W,EAAuB,YAAI9W,OAC5BqJ,OAAM,SAACC,GAAD,OAAOpM,QAAQC,IAAI,gCAEjC,CAACsL,IAMA,yBAAK1K,UAAU,YACX,kBAACqK,GAAD,CAAU7E,KAAK,qCACf,kBAAC4C,GAAD,KACKsC,EAAgBsB,KAAI,SAACpG,EAAgB1D,GAClC,OAAO,kBAACwD,EAAD,CAAayE,IAAKjI,EAAI0D,eAAgBA,OAG3B,OAArBgF,GAEG,gDAIR,kBAACP,GAAD,CAAU7E,KAAK,0BACf,kBAAC4C,GAAD,KAEC0Q,EAAoB9M,KAAI,SAACpG,EAAgB1D,GAClC,OAAO,kBAACwD,EAAD,CAAayE,IAAKjI,EAAI0D,eAAgBA,Y,oBC3DlDqT,GARG,WAEhB,IAAI5X,EAAQF,aAAaU,QAAQ,kBACjC,OAAO+C,EAAIvD,EAAO,CAChBwD,UAAU,KCgBRlC,GAAY3D,aAAW,SAAC4D,GAAD,MAAY,CACrC3D,KAAM,CACF,uBAAwB,CACpBsQ,OAAQ3M,EAAMI,QAAQ,IAE1BuM,OAAQ,CACJA,OAAQ3M,EAAMI,QAAQ,IAE1BkW,aAAc,CACVxF,UAAW9Q,EAAMI,QAAQ,IAE7BmW,UAAW,CACPja,MAAO,aAwJJka,GAlJC,WACZ,IAAM7V,EAAUZ,KACZW,EAAUkH,cAFI,EAGUhL,oBAAS,GAHnB,mBAGX6F,EAHW,aAIU9F,IAAMC,SAAS,CACvC6Z,MAAO,eACPC,OAAQ,GACRC,SAAU,SACV1J,OAAQ,GACR2J,YAAa,GACbC,cAAc,EACdC,OAAO,EACLC,cAAc,KAZF,mBAIXlP,EAJW,KAIHuF,EAJG,KAeZlD,EAAe,SAACoC,GAAD,OAAU,SAACrP,GAC5BmQ,EAAU,gBAAKvF,EAAN,gBAAeyE,EAAOrP,EAAM0W,OAAO9W,WAqBhD8F,qBAAU,WAEFd,IACAnB,EAAQ4G,KAAK,KAEb5F,EAAYC,WAGjB,CAACjB,EAAS+B,IAmBb,OACI,yBAAKrF,UAAU,iBACX,0BAAMA,UAAU,iBACZ,yBAAKA,UAAU,SACX,yBAAKA,UAAU,eACX,yBAAK+O,IAAG,UAAK6K,cAAL,wBAAmD1J,IAAI,GAAG2J,OAAO,MAI7E,0BAAM7Z,UAAWuD,EAAQtE,KAAMwY,YAAU,EAACC,aAAa,OACnD,kBAACC,GAAA,EAAD,CAEIzV,GAAG,sBACH7B,MAAM,SACNyZ,WAA6B,KAAjBrP,EAAO4O,OAAgB5O,EAAOiP,MAAQ,yBAA2B,GAC7E9Z,SAAUkN,EAAa,SACvBrN,MAAOgL,EAAO4O,QAElB,kBAAC3M,GAAA,EAAD,CAAa1M,UAAW+Z,YAAKxW,EAAQgM,OAAQhM,EAAQ4V,YACjD,kBAAC/C,GAAA,EAAD,CAAY4D,QAAQ,+BAApB,YACA,kBAACC,GAAA,EAAD,CACIP,QAA2B,KAApBjP,EAAO8O,WAAmB9O,EAAOiP,OACxCxX,GAAG,8BACHiE,KAAMsE,EAAOgP,aAAe,OAAS,WACrCha,MAAOgL,EAAO8O,SACd3Z,SAAUkN,EAAa,YACvBoN,aACI,kBAACC,GAAA,EAAD,CAAgB1W,SAAS,OACrB,kBAACG,EAAA,EAAD,CACIM,aAAW,6BACXL,QA3ER,WAC5BmM,EAAU,gBAAKvF,EAAN,CAAcgP,cAAehP,EAAOgP,iBA2ETW,YAxER,SAACva,GAC7BA,EAAMyQ,mBAyE+B7F,EAAOgP,aAAe,kBAAC,IAAD,MAAsB,kBAAC,IAAD,WAMjE,uBAAGzZ,UAAU,kDAAkDkC,GAAG,mCAAuD,KAApBuI,EAAO8O,UAAmB9O,EAAOiP,MAAQ,2BAA6B,IAE3K,yBAAK1Z,UAAU,iBACX,kBAACqN,GAAA,EAAD,CAAMC,WAAS,EAAC+M,QAAQ,gBAAgBC,WAAW,SAAStX,QAAS,GACjE,kBAACqK,GAAA,EAAD,CAAME,MAAI,EAACgN,GAAI,IAKf,kBAAClN,GAAA,EAAD,CAAME,MAAI,EAACgN,GAAI,GACX,kBAAC,EAAD,CACInW,QAAQ,YACRH,MAAM,UACNjE,UAAWuD,EAAQiX,OACnBhV,KAAK,UACL3B,QAtEtB,SAAC0H,GACXA,EAAE+E,iBACFhM,EAAYmW,MAAM,CAAEpB,MAAO5O,EAAO4O,MAAOE,SAAU9O,EAAO8O,WACrDnO,MAAK,SAACsP,GACH,GAAyB,YAArBzB,KAAY0B,KAKZ,MADArW,EAAYC,SACN,IAAIqW,MAAM,KAJhBzb,QAAQC,IAAI6Z,MACZ3V,EAAQ4G,KAAK,QAKlBoB,OAAM,SAACC,GAAD,OAhCC,SAAAA,GACdpM,QAAQC,IAAImM,EAAEwM,SACc,MAAxBxP,SAASgD,EAAEwM,SACX/H,EAAU,gBAAKvF,EAAN,CAAciP,OAAO,EAAOC,cAAc,KAEnD3J,EAAU,gBAAKvF,EAAN,CAAciP,OAAO,EAAMC,cAAc,KA2BlCkB,CAAUtP,MAE9BpM,QAAQC,IAAI,mBAgEKqL,EAAOkP,cACJ,kBAACxV,EAAA,EAAD,CACInE,UAAU,QACViE,MAAM,gBACNG,QAAQ,WAHZ,0BAQJ,yBAAKpE,UAAU,0BACX,kBAAC,IAAD,CAAMI,GAAG,kBAAT,wB,sECnJtBuC,GAAY3D,aAAW,SAAC4D,GAAD,MAAY,CACrC3D,KAAM,CACFC,MAAO,QAEX4b,MAAO,CACH7T,gBAAiB,SAErBuT,OAAQ,CACJ9G,UAAW9Q,EAAMI,QAAQ,GACzBD,YAAaH,EAAMI,QAAQ,IAE/B+X,iBAAkB,CACdC,aAAcpY,EAAMI,QAAQ,IAEhCiY,eAAgB,CACZC,QAAStY,EAAMI,QAAQ,QAY/B,IAAMmY,GAAQ,CACVC,QAAS,CACL,CACI3b,MAAO,IACPY,MAAO,UAEX,CACIZ,MAAO,IACPY,MAAO,UAEX,CACIZ,MAAO,IACPY,MAAO,WAGfgb,QAAS,CACL,CACI5b,MAAO,GACPY,MAAO,SAEX,CACIZ,MAAO,IACPY,MAAO,YAmOJib,GA7NI,WAEf,IAAIhY,EAAUkH,cAERjH,EAAUZ,KAJK,EAKenD,mBAAS,GALxB,mBAKd+b,EALc,KAKFC,EALE,KAMfC,EArCC,CAAC,gBAAiB,SAAU,SAAU,OAAQ,WA+BhC,EASWjc,mBAAS,CACrCkc,OAAQ,SACRpV,OAAQ,IACRuJ,OAAQ,GACRD,KAAM,SACNO,SAAU,GACVkJ,MAAO,GACPE,SAAU,GACVoC,IAAK,GACLlC,cAAc,EACdkB,KAAM,UACN3U,UAAW,0BApBM,mBASd4V,EATc,KASJC,EATI,KAuBfC,EAA0B,WAC5BD,EAAY,gBAAKD,EAAN,CAAgBnC,cAAemC,EAASnC,iBAGjDsC,EAA0B,SAAClc,GAC7BA,EAAMyQ,kBAQJxD,EAAe,SAACoC,GAAD,OAAU,SAACrP,EAAOJ,GACnCoc,EAAY,gBAAKD,EAAN,gBAAiB1M,EAAOzP,OAIjCuc,EAAwB,SAACnc,GAC3BV,QAAQC,IAAIS,EAAM0W,OAAO9W,OACzBoc,EAAY,gBAAKD,EAAN,gBAAiB/b,EAAM0W,OAAOpJ,KAAOtN,EAAM0W,OAAO9W,UAI3Dwc,EAAa,WACfT,GAAc,SAACU,GAAD,OAAoBA,EAAiB,MAQjDzO,EAAa,WACf+N,GAAc,SAACU,GAAD,OAAoBA,EAAiB,MAOvD3W,qBAAU,cAEP,CAACjC,IAEJ,IAAM6Y,EAAe,SAAC5Q,GAClBA,EAAE+E,iBAEF8L,EAAYC,WAAWT,GAClBxQ,MAAK,SAACsP,GACHvb,QAAQC,IAAI,UACZkE,EAAQ4G,KAAK,QACdoB,OAAM,SAACC,GAAD,OAAOpM,QAAQC,IAAI,2BAsGpC,OACI,yBAAKY,UAAU,iBACX,kBAAC,EAAD,MACA,0BAAMA,UAAU,iBACZ,yBAAKA,UAAU,YACX,yBAAKA,UAAWuD,EAAQtE,MACpB,kBAACmL,GAAD,CAAO5E,KAAK,+BACZ,kBAAC8W,GAAA,EAAD,CAASf,WAAYA,EAAYgB,YAAY,YAExCd,EAAMzP,KAAI,SAAC3L,EAAOmc,GAAR,OACP,kBAACC,GAAA,EAAD,CAAMtS,IAAK9J,GACP,kBAACqc,GAAA,EAAD,KAAYrc,GACZ,kBAACsc,GAAA,EAAD,KA/GhC,SAAwB3P,GACpB,OAAQA,GACJ,KAAK,EACD,OAAQ,kBAACN,GAAA,EAAD,CAAaxM,UAAU,YAC3B,kBAAC0c,GAAA,EAAD,CAAY1Y,aAAW,SAASiJ,KAAK,SAAS1N,MAAOmc,EAASF,OAAQ9b,SAAUkN,EAAa,WACzF,kBAAC+P,GAAA,EAAD,CAAkBpd,MAAM,SAASqd,QAAS,kBAACC,GAAA,EAAD,MAAW1c,MAAM,WAC3D,kBAACwc,GAAA,EAAD,CAAkBpd,MAAM,OAAOqd,QAAS,kBAACC,GAAA,EAAD,MAAW1c,MAAM,WAGrE,KAAK,EACD,OACI,kBAACqM,GAAA,EAAD,CAAaxM,UAAU,YACnB,kBAACiE,EAAA,EAAD,CAAYjC,GAAG,kBAAkBgE,cAAY,GAA7C,QACU0V,EAAStV,OADnB,aAGA,kBAACqG,GAAA,EAAD,CACIC,aAAc,IAEdhN,SAAUkN,EAAa,UACvBC,kBAAgB,SAChBK,kBAAkB,OAClBJ,KAAM,EACNmO,MAAOA,GAAMC,QACbnO,IAAK,IACLC,IAAK,IACLC,KAAK,YAGrB,KAAK,EACD,OACI,kBAACT,GAAA,EAAD,CAAaxM,UAAU,YACnB,kBAACiE,EAAA,EAAD,CAAYjC,GAAG,kBAAkBgE,cAAY,GAA7C,YACc0V,EAAS/L,OADvB,QAGA,kBAAClD,GAAA,EAAD,CACIC,aAAc,GAEdhN,SAAUkN,EAAa,UACvBC,kBAAgB,SAChBK,kBAAkB,OAClBJ,KAAM,EACNmO,MAAOA,GAAME,QACbpO,IAAK,GACLC,IAAK,IACLC,KAAK,YAIrB,KAAK,EACD,OAAQ,kBAACT,GAAA,EAAD,CAAaxM,UAAU,YAC3B,kBAAC0c,GAAA,EAAD,CAAY1Y,aAAW,OAAOiJ,KAAK,OAAO1N,MAAOmc,EAAShM,KAAMhQ,SAAUkN,EAAa,SACnF,kBAAC+P,GAAA,EAAD,CAAkBpd,MAAM,WAAWqd,QAAS,kBAACC,GAAA,EAAD,MAAW1c,MAAM,mBAC7D,kBAACwc,GAAA,EAAD,CAAkBpd,MAAM,SAASqd,QAAS,kBAACC,GAAA,EAAD,MAAW1c,MAAM,iBAC3D,kBAACwc,GAAA,EAAD,CAAkBpd,MAAM,MAAMqd,QAAS,kBAACC,GAAA,EAAD,MAAW1c,MAAM,aACxD,kBAACwc,GAAA,EAAD,CAAkBpd,MAAM,UAAUqd,QAAS,kBAACC,GAAA,EAAD,MAAW1c,MAAM,sBAGxE,KAAK,EACD,OAAQ,kBAACqM,GAAA,EAAD,CAAaxM,UAAU,YAC3B,kBAACyX,GAAA,EAAD,CACI/X,SAAUoc,EACV9Z,GAAG,sBACH7B,MAAM,YACN8M,KAAK,aAET,kBAACwK,GAAA,EAAD,CACIzV,GAAG,sBACH7B,MAAM,SACN8M,KAAK,QACLvN,SAAUoc,IAGd,kBAACtP,GAAA,EAAD,CAAa1M,UAAW+Z,YAAKxW,EAAQgM,OAAQhM,EAAQ4V,YACjD,kBAAC/C,GAAA,EAAD,CAAY4D,QAAQ,+BAApB,YACA,kBAACC,GAAA,EAAD,CACI/X,GAAG,8BACHiE,KAAMyV,EAASnC,aAAe,OAAS,WACvCha,MAAOmc,EAASrC,SAChB3Z,UA9HMsP,EA8HyB,WA9HhB,SAACrP,GACpCgc,EAAY,gBAAKD,EAAN,gBAAiB1M,EAAOrP,EAAM0W,OAAO9W,WA8H5Bya,aACI,kBAACC,GAAA,EAAD,CAAgB1W,SAAS,OACrB,kBAACG,EAAA,EAAD,CACIM,aAAW,6BACXL,QAASiY,EACT1B,YAAa2B,GAEZH,EAASnC,aAAe,kBAAC,IAAD,MAAsB,kBAAC,IAAD,YAQ3E,QACI,MAAO,eA/IU,IAACvK,EAgKO8N,CAAeR,GAChB,yBAAKxc,UAAWuD,EAAQwX,kBACpB,6BACI,kBAACvW,EAAA,EAAD,CACIyY,SAAyB,IAAf1B,EACV1X,QAAS4J,EACTzN,UAAWuD,EAAQiX,QAHvB,QAOA,kBAAChW,EAAA,EAAD,CACIJ,QAAQ,YACRH,MAAM,UACNJ,QAAU0X,IAAeE,EAAM9X,OAAS,EAAKwY,EAAeF,EAC5Djc,UAAWuD,EAAQiX,QAElBe,IAAeE,EAAM9X,OAAS,EAAI,SAAW,qBCrQ5FhB,GAAY3D,aAAW,SAAC4D,GAAD,MAAY,CACrC3D,KAAM,CACFC,MAAO,QAEX4b,MAAO,CACH7T,gBAAiB,SAErBuT,OAAQ,CACJ9G,UAAW9Q,EAAMI,QAAQ,GACzBD,YAAaH,EAAMI,QAAQ,IAE/B+X,iBAAkB,CACdC,aAAcpY,EAAMI,QAAQ,IAEhCiY,eAAgB,CACZC,QAAStY,EAAMI,QAAQ,QAY/B,IAAMmY,GAAQ,CACVC,QAAS,CACL,CACI3b,MAAO,IACPY,MAAO,UAEX,CACIZ,MAAO,IACPY,MAAO,UAEX,CACIZ,MAAO,IACPY,MAAO,WAGfgb,QAAS,CACL,CACI5b,MAAO,GACPY,MAAO,SAEX,CACIZ,MAAO,IACPY,MAAO,YAmOJ6c,GA7NO,WAElB,IAAI5Z,EAAUkH,cAERjH,EAAUZ,KAJQ,EAKYnD,mBAAS,GALrB,mBAKjB+b,EALiB,KAKLC,EALK,KAMlBC,EArCC,CAAC,gBAAiB,SAAU,SAAU,OAAQ,WA+B7B,EASQjc,mBAAS,CACrCkc,OAAQ,SACRpV,OAAQ,IACRuJ,OAAQ,GACRD,KAAM,SACNO,SAAU,GACVkJ,MAAO,GACPE,SAAU,GACVoC,IAAK,GACLlC,cAAc,EACdkB,KAAM,UACN3U,UAAW,sBApBS,mBASjB4V,EATiB,KASPC,EATO,KAuBlBC,EAA0B,WAC5BD,EAAY,gBAAKD,EAAN,CAAgBnC,cAAemC,EAASnC,iBAGjDsC,EAA0B,SAAClc,GAC7BA,EAAMyQ,kBAQJxD,EAAe,SAACoC,GAAD,OAAU,SAACrP,EAAOJ,GACnCoc,EAAY,gBAAKD,EAAN,gBAAiB1M,EAAOzP,OAIjCuc,EAAwB,SAACnc,GAC3BV,QAAQC,IAAIS,EAAM0W,OAAO9W,OACzBoc,EAAY,gBAAKD,EAAN,gBAAiB/b,EAAM0W,OAAOpJ,KAAOtN,EAAM0W,OAAO9W,UAI3Dwc,EAAa,WACfT,GAAc,SAACU,GAAD,OAAoBA,EAAiB,MAQjDzO,EAAa,WACf+N,GAAc,SAACU,GAAD,OAAoBA,EAAiB,MAOvD3W,qBAAU,cAEP,CAACjC,IAEJ,IAAM6Z,EAAa,SAAC5R,GAChBA,EAAE+E,kBA6GN,OACI,yBAAKtQ,UAAU,iBACX,0BAAMA,UAAU,iBACZ,yBAAKA,UAAU,YACX,yBAAKA,UAAWuD,EAAQtE,MACpB,kBAACmL,GAAD,CAAO5E,KAAK,+BACZ,kBAAC8W,GAAA,EAAD,CAASf,WAAYA,EAAYgB,YAAY,YAExCd,EAAMzP,KAAI,SAAC3L,EAAOmc,GAAR,OACP,kBAACC,GAAA,EAAD,CAAMtS,IAAK9J,GACP,kBAACqc,GAAA,EAAD,KAAYrc,GACZ,kBAACsc,GAAA,EAAD,KA9GhC,SAAwB3P,GACpB,OAAQA,GACJ,KAAK,EACD,OAAQ,kBAACN,GAAA,EAAD,CAAaxM,UAAU,YAC3B,kBAAC0c,GAAA,EAAD,CAAY1Y,aAAW,SAASiJ,KAAK,SAAS1N,MAAOmc,EAASF,OAAQ9b,SAAUkN,EAAa,WACzF,kBAAC+P,GAAA,EAAD,CAAkBpd,MAAM,SAASqd,QAAS,kBAACC,GAAA,EAAD,MAAW1c,MAAM,WAC3D,kBAACwc,GAAA,EAAD,CAAkBpd,MAAM,OAAOqd,QAAS,kBAACC,GAAA,EAAD,MAAW1c,MAAM,WAGrE,KAAK,EACD,OACI,kBAACqM,GAAA,EAAD,CAAaxM,UAAU,YACnB,kBAACiE,EAAA,EAAD,CAAYjC,GAAG,kBAAkBgE,cAAY,GAA7C,QACU0V,EAAStV,OADnB,aAGA,kBAACqG,GAAA,EAAD,CACIC,aAAc,IAEdhN,SAAUkN,EAAa,UACvBC,kBAAgB,SAChBK,kBAAkB,OAClBJ,KAAM,EACNmO,MAAOA,GAAMC,QACbnO,IAAK,IACLC,IAAK,IACLC,KAAK,YAGrB,KAAK,EACD,OACI,kBAACT,GAAA,EAAD,CAAaxM,UAAU,YACnB,kBAACiE,EAAA,EAAD,CAAYjC,GAAG,kBAAkBgE,cAAY,GAA7C,YACc0V,EAAS/L,OADvB,QAGA,kBAAClD,GAAA,EAAD,CACIC,aAAc,GAEdhN,SAAUkN,EAAa,UACvBC,kBAAgB,SAChBK,kBAAkB,OAClBJ,KAAM,EACNmO,MAAOA,GAAME,QACbpO,IAAK,GACLC,IAAK,IACLC,KAAK,YAIrB,KAAK,EACD,OAAQ,kBAACT,GAAA,EAAD,CAAaxM,UAAU,YAC3B,kBAAC0c,GAAA,EAAD,CAAY1Y,aAAW,OAAOiJ,KAAK,OAAO1N,MAAOmc,EAAShM,KAAMhQ,SAAUkN,EAAa,SACnF,kBAAC+P,GAAA,EAAD,CAAkBpd,MAAM,WAAWqd,QAAS,kBAACC,GAAA,EAAD,MAAW1c,MAAM,mBAC7D,kBAACwc,GAAA,EAAD,CAAkBpd,MAAM,SAASqd,QAAS,kBAACC,GAAA,EAAD,MAAW1c,MAAM,iBAC3D,kBAACwc,GAAA,EAAD,CAAkBpd,MAAM,MAAMqd,QAAS,kBAACC,GAAA,EAAD,MAAW1c,MAAM,aACxD,kBAACwc,GAAA,EAAD,CAAkBpd,MAAM,UAAUqd,QAAS,kBAACC,GAAA,EAAD,MAAW1c,MAAM,sBAGxE,KAAK,EACD,OAAQ,kBAACqM,GAAA,EAAD,CAAaxM,UAAU,YAC3B,kBAACyX,GAAA,EAAD,CACI/X,SAAUoc,EACV9Z,GAAG,sBACH7B,MAAM,YACN8M,KAAK,aAET,kBAACwK,GAAA,EAAD,CACIzV,GAAG,sBACH7B,MAAM,SACN8M,KAAK,QACLvN,SAAUoc,IAGd,kBAACtP,GAAA,EAAD,CAAa1M,UAAW+Z,YAAKxW,EAAQgM,OAAQhM,EAAQ4V,YACjD,kBAAC/C,GAAA,EAAD,CAAY4D,QAAQ,+BAApB,YACA,kBAACC,GAAA,EAAD,CACI/X,GAAG,8BACHiE,KAAMyV,EAASnC,aAAe,OAAS,WACvCha,MAAOmc,EAASrC,SAChB3Z,UA/HMsP,EA+HyB,WA/HhB,SAACrP,GACpCgc,EAAY,gBAAKD,EAAN,gBAAiB1M,EAAOrP,EAAM0W,OAAO9W,WA+H5Bya,aACI,kBAACC,GAAA,EAAD,CAAgB1W,SAAS,OACrB,kBAACG,EAAA,EAAD,CACIM,aAAW,6BACXL,QAASiY,EACT1B,YAAa2B,GAEZH,EAASnC,aAAe,kBAAC,IAAD,MAAsB,kBAAC,IAAD,YAQ3E,QACI,MAAO,eAhJU,IAACvK,EAgKO8N,CAAeR,GAChB,yBAAKxc,UAAWuD,EAAQwX,kBACpB,6BACI,kBAACvW,EAAA,EAAD,CACIyY,SAAyB,IAAf1B,EACV1X,QAAS4J,EACTzN,UAAWuD,EAAQiX,QAHvB,QAOA,kBAAChW,EAAA,EAAD,CACIJ,QAAQ,YACRH,MAAM,UACNJ,QAAU0X,IAAeE,EAAM9X,OAAS,EAAKwZ,EAAalB,EAC1Djc,UAAWuD,EAAQiX,QAElBe,IAAeE,EAAM9X,OAAS,EAAI,SAAW,qB,QCzQnFyZ,GArBS,SAAAjY,GAAU,IAChBkY,EAA0ClY,EAAlDmY,OAA2B1T,EAAuBzE,EAAlCjF,UAAyBqd,EADlB,aAC2BpY,EAD3B,wBAG/B,OACE,kBAAC,IAAD,iBACMoY,EADN,CAEEC,OAAQ,SAAAC,GAAU,OAChB,kBAACJ,EAAD,KACE,kBAACzT,EAAc6T,SCwBVC,GApBF,WAET,OACI,kBAAC,IAAD,CAAQC,SAAU/D,eACd,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOgE,OAAK,EAACrd,KAAK,cAAcL,UAAWkZ,KAC3C,kBAAC,IAAD,CAAOwE,OAAK,EAACrd,KAAK,iBAAiBL,UAAWob,KAC9C,kBAAC,GAAD,CAAiB/a,KAAK,IAAIL,UAAW2d,GAAUD,OAAK,EAACN,OAAQpY,IAC7D,kBAAC,GAAD,CAAiB0Y,OAAK,EAACN,OAAQpY,EAAY3E,KAAK,oDAAoDL,UAAW4d,KAE/G,kBAAC,GAAD,CAAiBF,OAAK,EAACN,OAAQpY,EAAY3E,KAAK,2BAA2BL,UAAW6d,KACtF,kBAAC,GAAD,CAAiBH,OAAK,EAACN,OAAQpY,EAAY3E,KAAK,YAAYL,UAAW8d,KACvE,kBAAC,GAAD,CAAiBJ,OAAK,EAACN,OAAQpY,EAAY3E,KAAK,YAAYL,UAAW+d,KACvE,kBAAC,GAAD,CAAiBL,OAAK,EAACN,OAAQpY,EAAY3E,KAAK,WAAWL,UAAWge,KACtE,kBAAC,GAAD,CAAiBN,OAAK,EAACN,OAAQpY,EAAY3E,KAAK,gBAAgBL,UAAWgd,QCnB5EiB,OANf,WACE,OACE,kBAAC,GAAD,OCKgBC,QACW,cAA7Bta,OAAOV,SAASib,UAEe,UAA7Bva,OAAOV,SAASib,UAEhBva,OAAOV,SAASib,SAAShb,MACvB,2DCZNib,IAASd,OAAO,kBAAC,GAAD,MAAS/O,SAASC,eAAe,SD6H3C,kBAAmB6P,WACrBA,UAAUC,cAAcC,MACrBrT,MAAK,SAAAsT,GACJA,EAAaC,gBAEdrT,OAAM,SAAAoO,GACLva,QAAQua,MAAMA,EAAM3B,c","file":"static/js/main.be36ccee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport { Link } from 'react-router-dom'\r\nimport { useLocation } from \"react-router\";\r\nimport { MdHome, MdAccountCircle, MdShowChart, MdFitnessCenter } from \"react-icons/md\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: \"auto\",\r\n    },\r\n});\r\n\r\nlet Nav = () => {\r\n\r\n    console.log(useLocation().pathname)\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    return (\r\n        <BottomNavigation\r\n            value={value}\r\n            onChange={(event, newValue) => {\r\n                setValue(newValue)\r\n            }}\r\n            showLabels\r\n            className=\"bottom__nav\">\r\n            <BottomNavigationAction component={Link} to=\"/\" label=\"Home\" icon={<MdHome />} />\r\n            <BottomNavigationAction component={Link} to=\"/workouts\" label=\"Workout\" icon={<MdFitnessCenter />} />\r\n            <BottomNavigationAction component={Link} to=\"/progress\" label=\"Progress\" icon={<MdShowChart />} />\r\n            <BottomNavigationAction component={Link} to=\"/profile\" label=\"Profile\" icon={<MdAccountCircle />} />\r\n        </BottomNavigation>\r\n    )\r\n}\r\n\r\nexport default Nav","export default (path) => {\r\n    return path.split('/')[1]\r\n}","import axios from 'axios'\r\n\r\n\r\n// Default Axios Instance\r\nexport const axiosInstance = axios.create({\r\n  baseURL: 'https://my-training.herokuapp.com/api'\r\n  //baseURL: 'http://localhost:4000/api'\r\n})\r\n\r\nexport const setAuthorizationHeader = (mtToken) => {\r\n  axiosInstance.defaults.headers.common['Authorization'] = `Bearer ${mtToken}`\r\n}","import jwtDecode from 'jwt-decode'\r\n\r\nimport {\r\n\taxiosInstance\r\n} from './api'\r\n\r\nconst TOKEN_STRING = 'mtTokenSporter'\r\n\r\nclass Auth {\r\n\r\n\tstatic async login(body) {\r\n\t\tconst {\r\n\t\t\tdata\r\n\t\t} = await axiosInstance.post(`/auth/login`, body)\r\n\t\tthis.setToken(data)\r\n\t}\r\n\r\n\tstatic logout() {\r\n\t\tlocalStorage.removeItem(TOKEN_STRING)\r\n\t}\r\n\r\n\tstatic getDecodedToken(token) {\r\n\t\tif (token && token !== null && token !== undefined) {\r\n\t\t\tconst decodedToken = jwtDecode(token)\r\n\t\t\treturn decodedToken\r\n\t\t}\r\n\t}\r\n\r\n\tstatic isAuthenticated() {\r\n\t\treturn this.getToken() !== undefined && this.getToken() !== null\r\n\t}\r\n\r\n\tstatic expiresAt() {\r\n\t\treturn new Date(this.getDecodedToken(this.getToken()).exp * 1000)\r\n\t}\r\n\r\n\tstatic isExpired() {\r\n\t\treturn new Date() > this.expiresAt()\r\n\t}\r\n\r\n\tstatic getToken() {\r\n\t\treturn localStorage.getItem(TOKEN_STRING)\r\n\t}\r\n\r\n\tstatic setToken(token) {\r\n\t\tlocalStorage.setItem(TOKEN_STRING, token)\r\n\t}\r\n}\r\n\r\nexport default Auth\r\n","import {\r\n  axiosInstance\r\n} from './api'\r\n\r\nclass User {\r\n  static async getUsers() {\r\n    const res = await axiosInstance.get('/users')\r\n    const data = await res.data\r\n    return data\r\n  }\r\n\r\n  static async getUserById(id) {\r\n    const res = await axiosInstance.get(`/users/${id}`)\r\n    const data = await res.data\r\n    return data\r\n  }\r\n\r\n  static async createUser(body) {\r\n    console.log(body)\r\n    return axiosInstance.post(`/users`, body)\r\n  }\r\n\r\n  // static async updateUser(id, body) {\r\n  //     return axiosInstance.put(`users/${id}`, body)\r\n  // } \r\n\r\n  static async deleteUser(id) {\r\n    return axiosInstance.delete(`/users/${id}`)\r\n  }\r\n}\r\n\r\nexport default User","import {\r\n  axiosInstance\r\n} from './api'\r\n\r\nclass ExerciseFull {\r\n  static async getExerciseFulls() {\r\n    const res = await axiosInstance.get('/exercisefulls')\r\n    const data = await res.data\r\n    return data\r\n  }\r\n\r\n  static async getExerciseFullById(id) {\r\n    const res = await axiosInstance.get(`/exercisefulls/${id}`)\r\n    const data = await res.data\r\n    return data\r\n  }\r\n\r\n  static async getExerciseFullsByWorkoutSession(id) {\r\n    const res = await axiosInstance.get(`/exercisefulls/workoutsession/${id}`)\r\n    const data = await res.data\r\n    return data\r\n  }\r\n\r\n  static async createExerciseFull(body) {\r\n    return axiosInstance.post(`/exercisefulls`, body)\r\n  }\r\n\r\n  static async setDone(body) {\r\n    return axiosInstance.post(`/exercisefulls/done`, body)\r\n  }\r\n\r\n  // static async updateExerciseFull(id, body) {\r\n  //     return axiosInstance.put(`exercisefulls/${id}`, body)\r\n  // } \r\n\r\n  static async deleteExerciseFull(id) {\r\n    return axiosInstance.delete(`/exercisefulls/${id}`)\r\n  }\r\n}\r\n\r\nexport default ExerciseFull","import {\r\n\taxiosInstance\r\n} from './api'\r\n\r\nclass WorkoutSessionService {\r\n\tstatic async getWorkoutSessions() {\r\n\t\tconst res = await axiosInstance.get('/workoutsessions')\r\n\t\tconst data = await res.data\r\n\t\treturn data\r\n\t}\r\n\r\n\tstatic async getWorkoutSessionById(id) {\r\n\t\tconst res = await axiosInstance.get(`/workoutsessions/${id}`)\r\n\t\tconst data = await res.data\r\n\t\treturn data\r\n\t}\r\n\r\n\r\n\tstatic async getWorkoutSessionsByTrainer(id) {\r\n\t\tconst res = await axiosInstance.get(`/workoutsessions/trainer/${id}`)\r\n\t\tconst data = await res.data\r\n\t\treturn data\r\n\t}\r\n\r\n\tstatic async getWorkoutSessionsByFree() {\r\n\t\tconst res = await axiosInstance.get(`/workoutsessions/all/free`)\r\n\t\tconst data = await res.data\r\n\t\treturn data\r\n\t}\r\n\r\n\r\n\tstatic async getWorkoutSessionsByWorkoutProgram(id) {\r\n\t\tconst res = await axiosInstance.get(`/workoutsessions/workoutprogram/${id}`)\r\n\t\tconst data = await res.data\r\n\t\treturn data\r\n\t}\r\n\r\n\r\n\tstatic async getWorkoutSessionsByAvailable() {\r\n\t\tconst res = await axiosInstance.get(`/workoutsessions/available`)\r\n\t\tconst data = await res.data\r\n\t\treturn data\r\n\t}\r\n\r\n\tstatic async setDone(body) {\r\n    return axiosInstance.post(`/workoutsessions/done`, body)\r\n\t}\r\n\t\r\n\r\n\r\n\tstatic async createWorkoutSession(body) {\r\n\t\tconsole.log(body)\r\n\t\treturn axiosInstance.post(`/workoutsessions`, body)\r\n\t}\r\n\tstatic async updateWorkoutSession(body) {\r\n\t\tconsole.log(body)\r\n\t\treturn axiosInstance.put(`/workoutsessions/update`, body)\r\n\t}\r\n\r\n\t// static async updateWorkoutSession(id, body) {\r\n\t//     return axiosInstance.put(`workoutsessions/${id}`, body)\r\n\t// } \r\n\r\n\tstatic async deleteWorkoutSession(id) {\r\n\t\treturn axiosInstance.delete(`/workoutsessions/${id}`)\r\n\t}\r\n}\r\n\r\nexport default WorkoutSessionService\r\n","import {\r\n\taxiosInstance\r\n} from './api'\r\n\r\nclass SporterService {\r\n\tstatic async getSporters() {\r\n\t\tconst res = await axiosInstance.get('/sporters')\r\n\t\tconst data = await res.data\r\n\t\treturn data\r\n\t}\r\n\r\n\tstatic async getSportersByTrainer(body) {\r\n\t\tconst res = await axiosInstance.post('/sporters/trainer', body)\r\n\t\tconst data = await res.data\r\n\t\treturn data\r\n\t}\r\n\r\n\tstatic async getSporterById(id) {\r\n\t\tconst res = await axiosInstance.get(`/sporters/${id}`)\r\n\t\tconst data = await res.data\r\n\t\treturn data\r\n\t}\r\n\r\n\tstatic async getSporterByUserId(id) {\r\n\t\tconst res = await axiosInstance.get(`/sporters/user/${id}`)\r\n\t\tconst data = await res.data\r\n\t\treturn data\r\n\t}\r\n\r\n\t\r\n\r\n\tstatic async sporterByWorkoutProgramId(body){\r\n\r\n\t\treturn axiosInstance.post(`/sporters/workoutprogram`, body)\r\n\t}\r\n\r\n\tstatic async inviteByTrainer(body) {\r\n\r\n\t\treturn axiosInstance.post(`/sporters/invite`, body)\r\n\t}\r\n\r\n\tstatic async createSporter(body) {\r\n\r\n\t\treturn axiosInstance.post(`/sporters`, body)\r\n\t}\r\n\r\n\tstatic async updateSporter(body) {\r\n\r\n\t\treturn axiosInstance.post(`/users/update`, body)\r\n\t}\r\n\r\n\tstatic async assignWorkoutProgram(body) {\r\n\r\n\t\treturn axiosInstance.post(`/sporters/assign/workoutprogram`, body)\r\n\t}\r\n\r\n\tstatic async updateSporterOnly(body) {\r\n\r\n\t\treturn axiosInstance.post(`/sporters/update`, body)\r\n\t}\r\n\r\n\tstatic async acceptInvite(body) {\r\n\r\n\t\treturn axiosInstance.post(`/sporters/invite/accept`, body)\r\n\t}\r\n\r\n\r\n\tstatic async cancelInvite(body) {\r\n\r\n\t\treturn axiosInstance.post(`/sporters/invite/cancel`, body)\r\n\t}\r\n\t// static async updateSporter(id, body) {\r\n\t//     return axiosInstance.put(`sporters/${id}`, body)\r\n\t// } \r\n\r\n\tstatic async deleteSporter(id) {\r\n\t\treturn axiosInstance.delete(`/sporters/${id}`)\r\n\t}\r\n}\r\n\r\nexport default SporterService\r\n","import {\r\n  axiosInstance\r\n} from './api'\r\n\r\nclass Feedback {\r\n  static async getFeedbacks() {\r\n    const res = await axiosInstance.get('/feedbacks')\r\n    const data = await res.data\r\n    return data\r\n  }\r\n\r\n  static async getFeedbackById(id) {\r\n    const res = await axiosInstance.get(`/feedbacks/${id}`)\r\n    const data = await res.data\r\n    return data\r\n  }\r\n\r\n  static async getFeedbacksByTrainer(id) {\r\n    const res = await axiosInstance.get(`/feedbacks/trainer/${id}`)\r\n    const data = await res.data\r\n    return data\r\n  }\r\n\r\n  static async createFeedback(body) {\r\n    console.log(body)\r\n    return axiosInstance.post(`/feedbacks`, body)\r\n  }\r\n\r\n  // static async updateFeedback(id, body) {\r\n  //     return axiosInstance.put(`feedbacks/${id}`, body)\r\n  // } \r\n\r\n  static async deleteFeedback(id) {\r\n    return axiosInstance.delete(`/feedbacks/${id}`)\r\n  }\r\n}\r\n\r\nexport default Feedback","import {\r\n  axiosInstance\r\n} from './api'\r\n\r\nclass Rate {\r\n  static async getRates() {\r\n    const res = await axiosInstance.get('/rates')\r\n    const data = await res.data\r\n    return data\r\n  }\r\n\r\n  static async getRateById(id) {\r\n    const res = await axiosInstance.get(`/rates/${id}`)\r\n    const data = await res.data\r\n    return data\r\n  }\r\n\r\n  static async getRatesByTrainer(id) {\r\n    const res = await axiosInstance.get(`/rates/trainer/${id}`)\r\n    const data = await res.data\r\n    return data\r\n  }\r\n\r\n  static async createRate(body) {\r\n    console.log(body)\r\n    return axiosInstance.post(`/rates`, body)\r\n  }\r\n\r\n  // static async updateRate(id, body) {\r\n  //     return axiosInstance.put(`rates/${id}`, body)\r\n  // } \r\n\r\n  static async deleteRate(id) {\r\n    return axiosInstance.delete(`/rates/${id}`)\r\n  }\r\n}\r\n\r\nexport default Rate","import {\r\n  axiosInstance\r\n} from './api'\r\n\r\nclass Progress {\r\n  static async getProgresses() {\r\n    const res = await axiosInstance.get('/progresses')\r\n    const data = await res.data\r\n    return data\r\n  }\r\n\r\n  static async getProgressById(id) {\r\n    const res = await axiosInstance.get(`/progresses/${id}`)\r\n    const data = await res.data\r\n    return data\r\n  }\r\n\r\n  static async createProgress(body) {\r\n    console.log(body)\r\n    return axiosInstance.post(`/progresses`, body)\r\n  }\r\n\r\n  static async getProgressesBySporter(id) {\r\n    const res = await axiosInstance.get(`/progresses/sporter/${id}`)\r\n    const data = await res.data\r\n    return data\r\n  }\r\n\r\n  // static async updateProgress(id, body) {\r\n  //     return axiosInstance.put(`progresses/${id}`, body)\r\n  // } \r\n\r\n  static async deleteProgress(id) {\r\n    return axiosInstance.delete(`/progresses/${id}`)\r\n  }\r\n}\r\n\r\nexport default Progress","import React, { useEffect, useState } from 'react'\r\nimport { FiLogOut } from 'react-icons/fi';\r\nimport { Redirect } from 'react-router-dom'\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { CardMedia } from '@material-ui/core';\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { MdNavigateBefore, } from \"react-icons/md\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport getPageName from '../utils/getPageName'\r\n\r\n//api\r\nimport { AuthService, UserService } from '../api'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        textTransform: 'capitalize'\r\n    },\r\n}));\r\n\r\nlet Header = ({ location, match, history }) => {\r\n\r\n    const [token] = useState(localStorage.getItem('myTraining_token'))\r\n    const [user, setUser] = useState(\"Nawang\")\r\n    const classes = useStyles();\r\n\r\n\r\n    let logout = () => {\r\n        AuthService.logout()\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar className=\"header\" id=\"main__header\" position=\"static\">\r\n                <Toolbar>\r\n                    {(match.path.split('/').length >= 3) &&\r\n                        <IconButton onClick={() => window.history.back()} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                            <MdNavigateBefore />\r\n                        </IconButton>\r\n                    }\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        {(getPageName(match.path) === \"\") ? \"My Training\" : getPageName(match.path)}\r\n                    </Typography>\r\n\r\n                    <Link to=\"/auth/login\" onClick={logout}>\r\n                        <Button color=\"inherit\">Log out</Button>\r\n                    </Link>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Header)","import * as jwt from 'jwt-decode';\r\n//api\r\n//api\r\n\r\n\r\nconst TOKEN_STRING = 'mtTokenSporter'\r\nlet isJWTValid = () => {\r\n\r\n\tlet isValid = false\r\n\tconst token = localStorage.getItem(TOKEN_STRING)\r\n\r\n\tif (token !== 'undefined' && token !== null) {\r\n\t\tlet decodedToken = jwt(token, {\r\n\t\t\tcomplete: true\r\n\t\t})\r\n\t\tlet dateNow = new Date()\r\n\r\n\t\t//console.log(decodedToken)\r\n\t\t// divided by 1000 cuz getTime() is in milisecond and .exp is in seconds\r\n\t\tif (decodedToken.exp > dateNow.getTime() / 1000) {\r\n\t\t\tisValid = true\r\n\t\t} else {\r\n\t\t\tisValid = false\r\n\t\t}\r\n\t}\r\n\tconsole.log(isValid)\r\n\treturn isValid\r\n}\r\n\r\nlet getUserIdFromJWT = () => {\r\n\r\n\tconst token = localStorage.getItem(TOKEN_STRING)\r\n\r\n\tlet userId = 0\r\n\tif (token !== 'undefined' && token !== null) {\r\n\t\tlet decodedToken = jwt(token, {\r\n\t\t\tcomplete: true\r\n\t\t})\r\n\t\tuserId = decodedToken.userId\r\n\t}\r\n\r\n\r\n\r\n\treturn userId\r\n}\r\n\r\nexport {\r\n\tisJWTValid,\r\n\tgetUserIdFromJWT\r\n}","import React, { useEffect, useState } from 'react';\r\nimport Nav from '../components/Nav'\r\nimport Header from '../components/Header'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n//jwt authen\r\nimport { isJWTValid } from '../utils/jwt'\r\n\r\n\r\nconst BaseLayout = props => {\r\n\r\n    const { children } = props\r\n    const [isAuth, setIsAuth] = useState(true)\r\n\r\n    useEffect(() => {\r\n        setIsAuth(isJWTValid())\r\n    }, [isAuth])\r\n\r\n\r\n    if (!isAuth) {\r\n        return (\r\n            <Redirect to='/auth/login' />\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"App main__app\">\r\n                <Header />\r\n                <main className=\"main__content\">\r\n                    {children}\r\n                </main>\r\n                <Nav />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nBaseLayout.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default BaseLayout","import React from 'react'\r\nimport MDButton from '@material-ui/core/Button';\r\n\r\nexport default function Button(props, { variant = \"contained\", text = \"just a button\", color = \"primary\", onClick = () => { console.log('btn clicked') } }) {\r\n    return (\r\n        <MDButton fullWidth onClick={props.onClick} variant={props.variant || variant} color={props.color || color}>\r\n            {props.text || text}\r\n        </MDButton>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function WorkoutCard(props) {\r\n    return (\r\n        <Card component={Link} to={`/today/${props.workoutSession.id}`} className=\"card__workout\">\r\n            <CardActionArea className=\"card__workout__ActionArea\">\r\n                <CardMedia\r\n                    className=\"card__workout__media\"\r\n                    image={`http://res.cloudinary.com/filesmytraining/image/upload/f_auto,q_auto/v1/${props.workoutSession.imageName}`}\r\n                    title=\"bag squad\"\r\n                />\r\n                <CardContent className=\"card__workout__content\">\r\n                    <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                        {props.workoutSession.title}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" component=\"p\">\r\n                        {props.workoutSession.type}\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n            {/* <CardActions>\r\n                <Button size=\"small\" color=\"primary\">\r\n                    Share\r\n            </Button>\r\n                <Button size=\"small\" color=\"primary\">\r\n                    Learn More\r\n            </Button>\r\n            </CardActions> */}\r\n        </Card>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport Button from '../components/Button'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        maxWidth: 345,\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n}));\r\n\r\nexport default function ExerciseCard(props) {\r\n\r\n\r\n    const [completed, setCompleted] = React.useState(0);\r\n\r\n\r\n    // useEffect(() => {\r\n\r\n    //     let progress = () => {\r\n    //         setCompleted(prevCompleted => (prevCompleted >= 100 ? 0 : prevCompleted + 10));\r\n    //     }\r\n\r\n    //     const timer = setInterval(progress, 1000);\r\n    //     return () => {\r\n    //         clearInterval(timer);\r\n    //     };\r\n    // }, [])\r\n\r\n\r\n    const [progress, setProgress] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const tick = () => {\r\n            // reset when reaching 100%\r\n            if (progress !== props.data.performance) {\r\n                setProgress((oldProgress) => (oldProgress >= props.data.performance ? props.data.performance : oldProgress + 2));\r\n            }\r\n        }\r\n\r\n        const timer = setInterval(tick, 20);\r\n        return () => {\r\n            clearInterval(timer);\r\n        };\r\n    }, [progress, props.data.performance]);\r\n\r\n\r\n    return (\r\n        <Card className=\"card__exercise\">\r\n            <Link to={`/exercisedetail/${props.data.workoutSession.id}/${props.data.id}`} className=\"card__exercise__main\">\r\n                <CardMedia\r\n                    className=\"card__exercise--image\"\r\n                    image={`http://res.cloudinary.com/filesmytraining/image/upload/f_auto,q_auto/v1/${props.data.exerciseBase.imageName}`}\r\n                    title={props.data.title}\r\n                />\r\n                <CardHeader\r\n                    className=\"card__exercise--title\"\r\n                    title={props.data.exerciseBase.title}\r\n                    subheader={(props.data.exerciseBase.type === \"time\") ? `${props.data.time} min` :\r\n                        (<div>\r\n                            <div className=\"subHeader\">{`${props.data.reps} reps`}</div>\r\n                            <div className=\"subHeader\">{`${props.data.kg} kg`}</div>\r\n                            <div className=\"subHeader\">{`${props.data.sets} sets`}</div>\r\n                        </div>)}\r\n                >\r\n\r\n                </CardHeader>\r\n            </Link>\r\n            <div className=\"card__exercise__expand\">\r\n                {props.data.done &&\r\n                    <CircularProgress className=\"exercise__progress\" variant=\"static\" value={progress} />\r\n                }\r\n                {/* <CircularProgress className=\"exercise__progress\" variant=\"static\" value={80} /> */}\r\n                {/* <CardActions className=\"card__exercise--expand\" disableSpacing>\r\n                    <IconButton\r\n                        className={clsx(classes.expand, {\r\n                            [classes.expandOpen]: expanded,\r\n                        })}\r\n                        onClick={handleExpandClick}\r\n                        aria-expanded={expanded}\r\n                        aria-label=\"show more\"\r\n                    >\r\n                        <MdExpandMore />\r\n                    </IconButton>\r\n\r\n                </CardActions> */}\r\n                {!props.data.done &&\r\n                    <Link to={`/exercisedetail/${props.data.workoutSession.id}/${props.data.id}`} className=\"card__exercise__main\">\r\n                        <Button text=\"START\" />\r\n                    </Link>\r\n                }\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport WorkoutCard from './WorkoutCard'\r\n\r\nexport default function HorizontalContainer(props) {\r\n    return (\r\n        <div className=\"scrolling-wrapper\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n","let msToTime = (ms) => {\r\n\r\n\r\n    let milliseconds = parseInt((ms % 1000) / 100),\r\n        seconds = Math.floor((ms / 1000) % 60),\r\n        minutes = Math.floor((ms / (1000 * 60)) % 60),\r\n        hours = Math.floor((ms / (1000 * 60 * 60)) % 24);\r\n\r\n    hours = (hours < 10) ? \"0\" + hours : hours;\r\n    minutes = (minutes < 10) ? \"0\" + minutes : minutes;\r\n    seconds = (seconds < 10) ? \"0\" + seconds : seconds;\r\n\r\n    return hours + \":\" + minutes + \":\" + seconds;\r\n\r\n}\r\n\r\nlet msToMinutes = (ms) => {\r\n    let milliseconds = parseInt((ms % 1000) / 100),\r\n        seconds = Math.floor((ms / 1000) % 60),\r\n        minutes = Math.floor((ms / (1000 * 60)) % 60)\r\n\r\n    minutes = (minutes < 10) ? minutes : minutes;\r\n    seconds = (seconds < 10) ? seconds : seconds;\r\n\r\n    return minutes\r\n\r\n}\r\nexport {\r\n    msToTime,\r\n    msToMinutes\r\n}","import React, { useState, useEffect } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport { msToTime, msToMinutes } from '../utils/msToTime'\r\nclass Timer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            time: 0,\r\n            start: 0,\r\n            displayTime: \"00:00:00\",\r\n            isOn: false,\r\n        }\r\n    }\r\n\r\n    startTimer = () => {\r\n        this.setState({\r\n            time: this.state.time,\r\n            start: Date.now() - this.state.time,\r\n            isOn: true\r\n        })\r\n        this.timer = setInterval(() => {\r\n            this.setState({\r\n                time: Date.now() - this.state.start,\r\n                displayTime: msToTime(Date.now() - this.state.start),\r\n            })\r\n\r\n            this.props.handleTimer(this.state.time)\r\n        }, 1);\r\n    }\r\n    stopTimer = () => {\r\n        this.setState({ isOn: false })\r\n        clearInterval(this.timer)\r\n    }\r\n    resetTimer = () => {\r\n        this.setState({ time: 0, displayTime: \"00:00:00\" })\r\n    }\r\n    render() {\r\n        let start = (this.state.time === 0) ?\r\n            <Button variant=\"outlined\" className=\"timer__button timer__start\" onClick={this.startTimer}>start</Button> :\r\n            null\r\n        let stop = (this.state.isOn) ?\r\n            <Button variant=\"outlined\" className=\"timer__button timer__stop\" onClick={this.stopTimer}>stop</Button> :\r\n            null\r\n        let reset = (this.state.time !== 0 && !this.state.isOn) ?\r\n            <Button variant=\"outlined\" className=\"timer__button timer__reset\" onClick={this.resetTimer}>reset</Button> :\r\n            null\r\n        let resume = (this.state.time !== 0 && !this.state.isOn) ?\r\n            <Button variant=\"outlined\" className=\"timer__button timer__resume\" onClick={this.startTimer}>resume</Button> :\r\n            null\r\n        return (\r\n            <div className=\"timer\">\r\n                <h2>{this.state.displayTime}</h2>\r\n                {start}\r\n                {resume}\r\n                {stop}\r\n                {reset}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Timer","import React from 'react'\r\n\r\nexport default function Bars({ maxBar = 7, coveredBar = 5, label = \"Label\" }) {\r\n\r\n    let bars = []\r\n\r\n    for (let i = 0; i < maxBar; i++) {\r\n        if (i >= 0 && i < coveredBar) {\r\n            bars.push(<div key={i} className=\"bar bar__covered\"></div>)\r\n        } else {\r\n            bars.push(<div key={i} className=\"bar\"></div>)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"bars\">\r\n            <div className=\"bars__label\">\r\n                {label}\r\n            </div>\r\n            <div className=\"bars__bars\">\r\n                {bars}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Title({ text = \"Title\" }) {\r\n    return (\r\n        <div className=\"title\">\r\n            {text}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function SubTitle({ text = \"Sub Title\" }) {\r\n    return (\r\n        <div className=\"sub__title\">\r\n            {text}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Paragraph({ text = \"Para text\" }) {\r\n    return (\r\n        <div className=\"paragraph\">\r\n            {text}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function TextAndLabel({ text = \"text\", label = \"labe text\" }) {\r\n  return (\r\n    <div className=\"textAndLabel\">\r\n      <div className=\"textAndLabel__label\">{label}</div>\r\n      <div className=\"textAndLabel__text\">{text}</div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport BaseLayout from '../layouts/base';\r\n\r\n\r\nimport Button from '../components/Button'\r\nimport WorkoutCard from '../components/WorkoutCard'\r\nimport ExerciseCard from '../components/ExerciseCard'\r\nimport HorizontalContainer from '../components/HorizontalContainer'\r\nimport { Paper, List } from '@material-ui/core'\r\nimport Timer from '../components/Timer'\r\nimport Bars from '../components/Bars'\r\nimport { Title, SubTitle } from '../components/texts'\r\nimport { withRouter, useHistory, Redirect } from 'react-router-dom';\r\n//api\r\nimport { SporterService, WorkoutSessionService } from '../api'\r\nimport { getUserIdFromJWT } from '../utils/jwt'\r\n\r\nlet HomePage = (props) => {\r\n\r\n    const history = useHistory()\r\n    const [sporter, setSporter] = useState()\r\n    const [values, setValues] = useState({})\r\n    const [workoutSessions, setWorkoutSessions] = useState([])\r\n    const [workoutProgramId, setWorkoutProgramId] = useState()\r\n    const [finishedWSs, setFinishedWSs] = useState([])\r\n    const [unfinishedWSs, setUnfinishedWSs] = useState([])\r\n    const [reset, setReset] = useState(false)\r\n\r\n    useEffect(() => {\r\n        SporterService.getSporterByUserId(getUserIdFromJWT())\r\n            .then((res) => {\r\n                console.log(res)\r\n                if (res.workoutProgram !== null) {\r\n\r\n                    setWorkoutProgramId(res.workoutProgram.id)\r\n                } else {\r\n                    setWorkoutProgramId(null)\r\n                }\r\n            }).catch((e) => console.log('sporter not found'))\r\n    }, [values])\r\n\r\n    useEffect(() => {\r\n        WorkoutSessionService.getWorkoutSessionsByWorkoutProgram(workoutProgramId)\r\n            .then((res) => {\r\n                console.log(res)\r\n                setWorkoutSessions([...res])\r\n            }).catch((e) => console.log('sessions not found'))\r\n\r\n    }, [workoutProgramId, reset])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        let unfinished = workoutSessions.filter((ws) => {\r\n            return ws.done === false\r\n        })\r\n\r\n        let finished = workoutSessions.filter((ws) => {\r\n            return ws.done === true\r\n        })\r\n        console.log(unfinished)\r\n        setUnfinishedWSs(unfinished)\r\n        setFinishedWSs(finished)\r\n    }, [workoutSessions])\r\n\r\n    let resetWSs = () => {\r\n\r\n        workoutSessions.forEach(ws => {\r\n\r\n            WorkoutSessionService.setDone({ workoutSessionId: ws.id, done: false })\r\n                .then((res) => {\r\n                    setReset(true)\r\n                })\r\n        })\r\n\r\n\r\n    }\r\n\r\n    if (workoutProgramId === null) {\r\n\r\n        return <Redirect to=\"/workouts\" />\r\n    } else {\r\n\r\n\r\n        return (\r\n            <div className=\"home\">\r\n\r\n                <SubTitle text=\"Choose today's session\" />\r\n\r\n                {(unfinishedWSs.length === 0 && workoutProgramId !== null) ? (\r\n\r\n                    <div className=\"reset\">\r\n                        <div className=\"reset__text\"> You have all done, please reset\r\n                        </div>\r\n                        <Button onClick={() => { resetWSs() }} text=\"RESET\" />\r\n                    </div>\r\n                )\r\n                    :\r\n                    (\r\n                        <HorizontalContainer>\r\n                            {unfinishedWSs.map((workoutSession, id) => {\r\n                                return <WorkoutCard key={id} workoutSession={workoutSession} />\r\n                            })}\r\n                        </HorizontalContainer>\r\n                    )\r\n                }\r\n\r\n\r\n\r\n\r\n                <SubTitle text=\"Completed sessions\" />\r\n                <HorizontalContainer>\r\n                    {finishedWSs.map((workoutSession, id) => {\r\n                        return <WorkoutCard key={id} workoutSession={workoutSession} />\r\n                    })\r\n                    }\r\n                </HorizontalContainer>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(HomePage)","import React from 'react'\r\nimport Bars from './Bars'\r\n\r\nexport default function ExerciseMainInfo({ mainInfo }) {\r\n    return (\r\n        <div>\r\n            <div className=\"exercise__main__info\">\r\n\r\n                {(mainInfo.exerciseBase.type !== \"time\") ? (\r\n                    <div className=\"type__reps\">\r\n\r\n                        <div>\r\n                            <div className=\"type__reps__title\">Instructions</div>\r\n                            <li className=\"subHeader\">{`${mainInfo.reps - 2} - ${mainInfo.reps} reps`}</li>\r\n                            <li className=\"subHeader\">{`${mainInfo.kg - 4} - ${mainInfo.kg} kg`}</li>\r\n                            <li className=\"subHeader\">{`${mainInfo.sets - 1} - ${mainInfo.sets}  sets`}</li>\r\n                        </div>\r\n                        <hr/>\r\n                        <Bars label=\"Cardio\" maxBar={5} coveredBar={mainInfo.exerciseBase.cardioLevel} />\r\n                        <Bars label=\"Muscle\" maxBar={5} coveredBar={mainInfo.exerciseBase.muscleLevel} />\r\n                    </div>\r\n                )\r\n                    : (\r\n                        <div className=\"type__time\">\r\n                            <div className=\"exercise__main__info--time\">\r\n                                <div className=\"exercise__main__info--time--label\">Time</div>\r\n                                <div className=\"exercise__main__info--time--value\">{mainInfo.time} Minutes</div>\r\n                            </div>\r\n                            <Bars label=\"Cardio\" maxBar={5} coveredBar={mainInfo.cardioLevel} />\r\n                            <Bars label=\"Muscle\" maxBar={5} coveredBar={mainInfo.muscleLevel} />\r\n                        </div>\r\n\r\n                    )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport BaseLayout from '../../layouts/base';\r\nimport Button from '../Button'\r\nimport ExerciseMainInfo from '../ExerciseMainInfo'\r\nimport Nav from '../Nav'\r\nimport Return from '../Return'\r\nimport Timer from '../Timer'\r\nimport Grid from '@material-ui/core/Grid';\r\n//slider\r\nimport Slider from '@material-ui/core/Slider';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst marks = {\r\n  sets: [\r\n    {\r\n      value: 1,\r\n      label: '1 sets',\r\n    },\r\n    {\r\n      value: 5,\r\n      label: '5 sets',\r\n    },\r\n    {\r\n      value: 10,\r\n      label: '10 sets',\r\n    }\r\n  ],\r\n  reps: [\r\n    {\r\n      value: 1,\r\n      label: '1 reps',\r\n    },\r\n    {\r\n      value: 30,\r\n      label: '30 reps',\r\n    }\r\n  ],\r\n  kg: [\r\n    {\r\n      value: 1,\r\n      label: '1 kg',\r\n    },\r\n    {\r\n      value: 190,\r\n      label: '190 kg',\r\n    }\r\n  ]\r\n};\r\n\r\n\r\nexport default function ExerciseDone(props) {\r\n  let testDatas = [{\r\n    title: \"1 0titltes\",\r\n    imagePath: \"/images/test.jpg\",\r\n    videoPath: \"/videos/test.mp4\",\r\n    cardioLevel: \"1\",\r\n    muscleLevel: \"4\",\r\n    type: \"reps\",\r\n    mainInfo: { sets: 3, reps: 8, kg: 16 },\r\n    description: \"ttest descirption is fun but leuk lksdflk sdn dlsknfl ksdlfkj j jds flis  klmlk\"\r\n  }\r\n    , {\r\n    title: \"2 Title\",\r\n    imagePath: \"/images/test.jpg\",\r\n    videoPath: \"/videos/test.mp4\",\r\n    cardioLevel: \"4\",\r\n    muscleLevel: \"2\",\r\n    type: \"time\",\r\n    mainInfo: { time: 20 },\r\n    description: \"ttest descirption is fun but leuk lksdflk sdn dlsknfl ksdlfkj j jds flis  klmlk\"\r\n  }, {\r\n    title: \"2 Title\",\r\n    imagePath: \"/images/test.jpg\",\r\n    videoPath: \"/videos/test.mp4\",\r\n    cardioLevel: \"4\",\r\n    muscleLevel: \"2\", type: \"time\",\r\n    mainInfo: { time: 20 },\r\n    description: \"ttest descirption is fun but leuk lksdflk sdn dlsknfl ksdlfkj j jds flis  klmlk\"\r\n  }]\r\n  const [exerciseInfo, setExerciseInfo] = useState(testDatas[1])\r\n  const [results, setResults] = useState({\r\n    time: props.mainInfo.time\r\n    , sets: props.mainInfo.sets\r\n    , reps: props.mainInfo.reps\r\n    , kg: props.mainInfo.kg\r\n  })\r\n\r\n\r\n  return (\r\n    <div className=\"exercise__done\">\r\n\r\n      <div className=\"exercise__done--title\">Great Job!\r\n      <span> Fill In Your  Performance</span>\r\n      </div>\r\n\r\n      {props.mainInfo.exerciseBase.type === \"time\" ? (\r\n\r\n        <div className=\"exercise__done--subtitle\">Time: {results.time}\r\n          <FormControl component=\"fieldset\">\r\n            <Slider\r\n              defaultValue={props.elapseTime}\r\n              //getAriaValueText={valuetext}\r\n              onChange={props.handleChange('time')}\r\n              //onChangeCommitted={handleChange('sets')}\r\n              aria-labelledby=\"time\"\r\n              step={1}\r\n              //marks={marks.sets}\r\n              min={1}\r\n              max={60}\r\n              name='time'\r\n              valueLabelDisplay='on'\r\n            />\r\n          </FormControl>\r\n        </div>\r\n      ) :\r\n        (\r\n          <div>\r\n\r\n            <div className=\"exercise__done--subtitle\">Sets: {results.sets}\r\n              <FormControl component=\"fieldset\">\r\n                <Slider\r\n                  defaultValue={props.mainInfo.sets}\r\n                  //getAriaValueText={valuetext}\r\n                  onChange={props.handleChange('sets')}\r\n                  //onChangeCommitted={handleChange('sets')}\r\n                  aria-labelledby=\"sets\"\r\n                  step={1}\r\n                  //marks={marks.sets}\r\n                  min={1}\r\n                  max={12}\r\n                  name='sets'\r\n                  valueLabelDisplay='on'\r\n                />\r\n              </FormControl>\r\n            </div>\r\n\r\n            <div className=\"exercise__done--subtitle\">Repetitions: {results.reps}\r\n              <FormControl component=\"fieldset\">\r\n\r\n                <Slider\r\n                  defaultValue={props.mainInfo.reps}\r\n                  //getAriaValueText={valuetext}\r\n                  onChange={props.handleChange('reps')}\r\n                  //onChangeCommitted={handleChange('reps')}\r\n                  aria-labelledby=\"reps\"\r\n                  step={1}\r\n                  //marks={marks.reps}\r\n                  min={1}\r\n                  max={30}\r\n                  name='reps'\r\n                  valueLabelDisplay='on'\r\n                />\r\n              </FormControl>\r\n            </div>\r\n            <div className=\"exercise__done--subtitle\">Kilogram: {results.kg}\r\n              <FormControl component=\"fieldset\">\r\n                <Slider\r\n                  defaultValue={props.mainInfo.kg}\r\n                  //getAriaValueText={valuetext}\r\n                  onChange={props.handleChange('kg')}\r\n                  //onChangeCommitted={handleChange('kg')}\r\n                  aria-labelledby=\"kg\"\r\n                  step={1}\r\n                  //marks={marks.kg}\r\n                  min={1}\r\n                  max={200}\r\n                  name='kg'\r\n                  valueLabelDisplay='on'\r\n                />\r\n              </FormControl>\r\n            </div>\r\n          </div>\r\n        )}\r\n      <div className=\"exercise__done--actions\">\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={6} >\r\n            <Button onClick={props.handleBack} variant=\"outlined\" text=\"back\" />\r\n          </Grid>\r\n          <Grid id=\"exercise__finish\" item xs={6} >\r\n            <Button onClick={props.handleFinished} text=\"Finish\" />\r\n          </Grid>\r\n        </Grid>\r\n      </div >\r\n    </div >\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport BaseLayout from '../layouts/base';\r\nimport Button from '../components/Button'\r\nimport ExerciseMainInfo from '../components/ExerciseMainInfo'\r\nimport Nav from '../components/Nav'\r\nimport Return from '../components/Return'\r\nimport Timer from '../components/Timer'\r\nimport ExerciseDone from '../components/exercise/Done'\r\nimport { withRouter, useHistory, useParams } from 'react-router-dom';\r\nimport { ExerciseFullService, ProgressService, SporterService } from '../api'\r\nimport { getUserIdFromJWT } from '../utils/jwt'\r\nimport { msToTime, msToMinutes } from '../utils/msToTime'\r\n\r\nlet ExerciseDetailPage = () => {\r\n\r\n\r\n    let testDatas = [{\r\n        title: \"1 0titltes\",\r\n        imagePath: \"/images/test.jpg\",\r\n        videoPath: \"/videos/test.mp4\",\r\n        cardioLevel: \"1\",\r\n        muscleLevel: \"4\",\r\n        type: \"reps\",\r\n        mainInfo: { sets: 4, reps: 8, kg: 16 },\r\n        description: \"ttest descirption is fun but leuk lksdflk sdn dlsknfl ksdlfkj j jds flis  klmlk\"\r\n    }\r\n        , {\r\n        title: \"2 Title\",\r\n        imagePath: \"/images/test.jpg\",\r\n        videoPath: \"/videos/test.mp4\",\r\n        cardioLevel: \"4\",\r\n        muscleLevel: \"2\",\r\n        type: \"time\",\r\n        mainInfo: { time: 20 },\r\n        description: \"ttest descirption is fun but leuk lksdflk sdn dlsknfl ksdlfkj j jds flis  klmlk\"\r\n    }, {\r\n        title: \"2 Title\",\r\n        imagePath: \"/images/test.jpg\",\r\n        videoPath: \"/videos/test.mp4\",\r\n        cardioLevel: \"4\",\r\n        muscleLevel: \"2\", type: \"time\",\r\n        mainInfo: { time: 20 },\r\n        description: \"ttest descirption is fun but leuk lksdflk sdn dlsknfl ksdlfkj j jds flis  klmlk\"\r\n    }]\r\n\r\n    const history = useHistory()\r\n    const { workoutSessionId, exerciseFullId } = useParams()\r\n\r\n    const [exerciseInfo, setExerciseInfo] = useState({ workoutSession: {}, exerciseBase: {} })\r\n\r\n    const [isDone, setIsDone] = useState(false)\r\n    const [finished, setFinished] = useState(false)\r\n    const [elapseTime, setElapseTime] = useState(0)\r\n    const [sporter, setSporter] = useState()\r\n    const [results, setResults] = useState({ time: 0, sets: 0, reps: 0, kg: 0 })\r\n\r\n    const handleChange = (prop) => (event, value) => {\r\n        setResults({ ...results, [prop]: value })\r\n    }\r\n\r\n    useEffect(() => {\r\n        SporterService.getSporterByUserId(getUserIdFromJWT())\r\n            .then((res) => {\r\n                setSporter(res)\r\n            }).catch((e) => console.log('sporter not found'))\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        setResults({ time: exerciseInfo.time, sets: exerciseInfo.sets, reps: exerciseInfo.reps, kg: exerciseInfo.kg })\r\n    }, [exerciseInfo.kg, exerciseInfo.reps, exerciseInfo.sets, exerciseInfo.time])\r\n\r\n    const handleDone = () => {\r\n        console.log('done is cliekd ')\r\n\r\n\r\n        setIsDone(true)\r\n    }\r\n\r\n    const handleBack = () => {\r\n        console.log('back is cliekd ')\r\n        setIsDone(false)\r\n    }\r\n\r\n    const handleFinished = () => {\r\n        console.log('fisnihed is cliekd ')\r\n        //TODO save result to db\r\n\r\n        let performance = 0\r\n\r\n        if (exerciseInfo.exerciseBase.type === \"time\") {\r\n            performance = results.time / exerciseInfo.time\r\n\r\n        } else {\r\n\r\n            performance = ((results.reps / exerciseInfo.reps)\r\n                + (results.sets / exerciseInfo.sets)\r\n                + (results.kg / exerciseInfo.kg)) / 3\r\n        }\r\n\r\n\r\n        let body = {\r\n            sporterId: sporter.id,\r\n            exerciseFullId: exerciseInfo.id,\r\n            sets: results.sets,\r\n            reps: results.reps,\r\n            kg: results.kg,\r\n            time: results.time,\r\n            performance: (performance * 100 >= 100) ? 100 : performance * 100\r\n        }\r\n\r\n\r\n        ProgressService.createProgress(body)\r\n            .then((res) => {\r\n                console.log(res)\r\n            })\r\n            .catch((e) => console.log(e))\r\n\r\n\r\n        console.log(performance)\r\n\r\n        ExerciseFullService.setDone({ exerciseFullId: exerciseFullId, done: true, performance: (performance * 100 >= 100) ? 100 : performance * 100 })\r\n            .then((res) => {\r\n                console.log(res)\r\n                setFinished(true)\r\n                history.push('/today/' + workoutSessionId)\r\n            })\r\n\r\n\r\n    }\r\n\r\n    const handleTimer = (value) => {\r\n        setElapseTime(value)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(exerciseFullId)\r\n        ExerciseFullService.getExerciseFullById(exerciseFullId)\r\n            .then((res) => {\r\n                console.log(res)\r\n                setExerciseInfo({ ...res })\r\n            })\r\n            .catch((e) => console.log(e))\r\n\r\n    }, [exerciseFullId])\r\n\r\n\r\n    useEffect(() => {\r\n        let btnFinish = document.getElementById('exercise__finish')\r\n        let header = document.getElementById('main__header')\r\n        if (btnFinish) {\r\n            btnFinish.scrollIntoView({ behavior: \"smooth\" })\r\n            console.log(\"scoorrll\")\r\n        } else {\r\n            header.scrollIntoView({ behavior: \"smooth\" })\r\n        }\r\n    }, [isDone])\r\n\r\n    return (\r\n\r\n        <div className=\"exercise__detail\">\r\n            <div className=\"exercise__detail__media\" id=\"exercise__video\">\r\n                <CardMedia\r\n                    component=\"video\"\r\n                    controls\r\n                    className=\"exercise__detail__media--video\"\r\n                    src={`http://res.cloudinary.com/filesmytraining/video/upload/v1/${exerciseInfo.exerciseBase.videoName}`}\r\n                    title=\"Exercise Video\"\r\n                    aspectratio=\"wide\"\r\n                />\r\n            </div>\r\n\r\n            {isDone ? <ExerciseDone handleChange={handleChange} mainInfo={exerciseInfo} handleBack={handleBack} handleFinished={handleFinished} elapseTime={msToMinutes(elapseTime)} /> :\r\n                (<div className=\"exercise__detail__info\">\r\n                    <div className=\"exercise__detail__info__header\">\r\n                        <div className=\"exercise__detail__info__header--title\">{exerciseInfo.exerciseBase.title}</div>\r\n                        <div className=\"exercise__detail__info__header--button\" >\r\n                            <Button onClick={handleDone} text=\"DONE\" />\r\n                        </div>\r\n                    </div>\r\n                    {exerciseInfo.exerciseBase.type === \"time\" &&\r\n                        <div className=\"detail__timer\">\r\n                            <Timer handleTimer={handleTimer} />\r\n                        </div>\r\n                    }\r\n\r\n                    <ExerciseMainInfo mainInfo={exerciseInfo} />\r\n                    <div className=\"exercise__detail__info__description\">\r\n                        {exerciseInfo.exerciseBase.description}\r\n                    </div>\r\n\r\n                </div>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(ExerciseDetailPage)","import React, { useEffect, useState } from 'react'\r\nimport BaseLayout from '../layouts/base';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles, Divider, Grid } from '@material-ui/core';\r\nimport { Title, SubTitle, TextAndLabel } from '../components/texts'\r\nimport Button from '../components/Button'\r\n\r\n//api\r\nimport { SporterService } from '../api'\r\nimport { getUserIdFromJWT } from '../utils/jwt'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n        width: '100%'\r\n    },\r\n    small: {\r\n        width: theme.spacing(6),\r\n        height: theme.spacing(6),\r\n    },\r\n    large: {\r\n        width: theme.spacing(12),\r\n        height: theme.spacing(12),\r\n    },\r\n}));\r\n\r\nlet ProfilePage = () => {\r\n    const classes = useStyles();\r\n\r\n    const history = useHistory()\r\n    const [values, setValues] = useState({\r\n        user: {},\r\n        trainer: { user: {} },\r\n        goal: \"\",\r\n        height: \"\",\r\n        weight: \"\",\r\n        daysTrained: 0\r\n        , daysTrainedStreak: 1\r\n    })\r\n\r\n    const [sporterId, setSporterId] = useState(null)\r\n\r\n    useEffect(() => {\r\n        SporterService.getSporterByUserId(getUserIdFromJWT())\r\n            .then((res) => {\r\n                setValues({ ...values, ...res })\r\n            }).catch((e) => console.log('sporter not found'))\r\n    }, [values])\r\n\r\n    const cancelInvite = (e) => {\r\n        e.preventDefault()\r\n        console.log('gtfo')\r\n        SporterService.cancelInvite({ sporterId: values.id, trainerId: values.trainer.id, acceptTrainer: false })\r\n            .then(res => {\r\n                setValues({ ...values, acceptInvite: false, trainer: null })\r\n            })\r\n            .catch((e) => console.log(e))\r\n    }\r\n\r\n    const acceptInvite = (e) => {\r\n        e.preventDefault()\r\n        //console.log('come again')\r\n        SporterService.acceptInvite({ sporterId: values.id, trainerId: values.trainer.id, acceptTrainer: true })\r\n            .then(res => {\r\n                setValues({ ...values, acceptInvite: true })\r\n            })\r\n            .catch((e) => console.log(e))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"profile\">\r\n            <div className=\"action__edit\">\r\n                <Button text=\"edit\" variant=\"text\" onClick={() => history.push(\"/profile/edit\")} />\r\n            </div>\r\n            <div className=\"profile__detail--avatar\">\r\n                <Avatar alt={values.user.fullName} src={`http://res.cloudinary.com/filesmytraining/image/upload/f_auto,q_auto/v1/${values.user.imageName}`} className={classes.large} />\r\n                <Title text={values.user.fullName} />\r\n            </div>\r\n            <Divider variant=\"middle\" />\r\n            <div className=\"profile__detail\">\r\n\r\n                {values.acceptTrainer !== true && values.trainer !== null &&\r\n                    <div className=\"profile__detail--trainer\">\r\n                        <div className=\"profile__detail--trainer--request\"  >\r\n                            <TextAndLabel label=\"Trainer\" text={\"Invite from: \" + values.trainer.user.fullName} />\r\n                            <Avatar alt={values.trainer.user.fullName} src={`http://res.cloudinary.com/filesmytraining/image/upload/f_auto,q_auto/v1/${values.trainer.user.imageName}`} className={classes.small} />\r\n                        </div>\r\n                        <div className=\"profile__detail--trainer--action\" >\r\n                            <Button text=\"Accept\" variant=\"contained\" onClick={(e) => acceptInvite(e)} /> <Button text=\"Cancel\" variant=\"text\" onClick={cancelInvite} />\r\n                        </div>\r\n                    </div>\r\n\r\n                }\r\n\r\n                {values.acceptTrainer === true && values.trainer !== null &&\r\n                    <div className=\"profile__detail--trainer\">\r\n                        <div className=\"profile__detail--trainer--request\"  >\r\n                            <TextAndLabel label=\"Trainer\" text={values.trainer.user.fullName + \": \" + values.trainer.focus} />\r\n                            <Avatar alt={values.trainer.user.fullName} src={`http://res.cloudinary.com/filesmytraining/image/upload/f_auto,q_auto/v1/${values.trainer.user.imageName}`} className={classes.small} />\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                {values.trainer === null &&\r\n                    <div className=\"profile__detail--trainer\">\r\n                        <div className=\"profile__detail--trainer--request\"  >\r\n                            <TextAndLabel label=\"Trainer\" text={\"No Trainer \"} />\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n\r\n                <Divider variant=\"middle\" />\r\n\r\n                <Grid container spacing={2} >\r\n                    <Grid item xs={12}>\r\n                        <TextAndLabel label=\"Goal\" text={values.goal} />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <TextAndLabel label=\"Height\" text={values.height + \" cm\"} />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                        <TextAndLabel label=\"Weight\" text={values.weight + \" kg\"} />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <TextAndLabel label=\"Days trained\" text={values.daysTrained} />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <TextAndLabel label=\"Days trained streak\" text={values.daysTrainedStreak} />\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(ProfilePage)\r\n","\r\n\r\nlet getLabels = () => {\r\n\r\n\r\n    let days = ['Sun', 'Mon', 'Tues', 'Wed', 'Thur', 'Fri', 'Sat'];\r\n    let months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n    let d = new Date();\r\n    let dayName = days[d.getMonth()];\r\n\r\n    return {\r\n        day: [\r\n\r\n            (days[d.getDay() - 6]) ? days[d.getDay() - 6] : days[days.length - (6 - d.getDay())],\r\n            (days[d.getDay() - 5]) ? days[d.getDay() - 5] : days[days.length - (5 - d.getDay())],\r\n            (days[d.getDay() - 4]) ? days[d.getDay() - 4] : days[days.length - (4 - d.getDay())],\r\n            (days[d.getDay() - 3]) ? days[d.getDay() - 3] : days[days.length - (3 - d.getDay())],\r\n            (days[d.getDay() - 2]) ? days[d.getDay() - 2] : days[days.length - (2 - d.getDay())],\r\n            (days[d.getDay() - 1]) ? days[d.getDay() - 1] : days[days.length - (1 - d.getDay())],\r\n            days[d.getDay()]\r\n        ],\r\n        week: [\"Week 1\", \"Week 2\", \"Week 3\", \"Week 4\"],\r\n        // month: [\r\n        //     (months[d.getMonth() - 11]) ? months[(d.getMonth() - 11)] : months[months.length - (11 - d.getMonth())],\r\n        //     (months[d.getMonth() - 10]) ? months[(d.getMonth() - 10)] : months[months.length - (10 - d.getMonth())],\r\n        //     (months[d.getMonth() - 9]) ? months[(d.getMonth() - 9)] : months[months.length - (9 - d.getMonth())],\r\n        //     (months[d.getMonth() - 8]) ? months[(d.getMonth() - 8)] : months[months.length - (8 - d.getMonth())],\r\n        //     (months[d.getMonth() - 7]) ? months[(d.getMonth() - 7)] : months[months.length - (7 - d.getMonth())],\r\n        //     (months[d.getMonth() - 6]) ? months[(d.getMonth() - 6)] : months[months.length - (6 - d.getMonth())],\r\n        //     (months[d.getMonth() - 5]) ? months[(d.getMonth() - 5)] : months[months.length - (5 - d.getMonth())],\r\n        //     (months[d.getMonth() - 4]) ? months[(d.getMonth() - 4)] : months[months.length - (4 - d.getMonth())],\r\n        //     (months[d.getMonth() - 3]) ? months[(d.getMonth() - 3)] : months[months.length - (3 - d.getMonth())],\r\n        //     (months[d.getMonth() - 2]) ? months[(d.getMonth() - 2)] : months[months.length - (2 - d.getMonth())],\r\n        //     (months[d.getMonth() - 1]) ? months[(d.getMonth() - 1)] : months[months.length - (1 - d.getMonth())],\r\n        //     months[d.getMonth()]],\r\n        month: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n        year: [d.getFullYear() - 4, d.getFullYear() - 3, d.getFullYear() - 2, d.getFullYear() - 1, d.getFullYear()]\r\n    }\r\n}\r\nexport default getLabels","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react'\r\n//chart\r\nimport { Bar } from 'react-chartjs-2'\r\nimport getLabels from '../utils/labels'\r\n\r\nexport default function Chart({ labelType = \"day\", data = [], name = \"Label\", averageName = \"average name\", type = \"reps\", color = \"#FF772E\" }) {\r\n    let getStepSize = (values) => {\r\n\r\n        const max = Math.max(...values)\r\n        const min = Math.min(...values)\r\n\r\n        return parseInt(max / 2) + 20\r\n\r\n    }\r\n\r\n\r\n    const scope = {\r\n        day: 7,\r\n        week: 4,\r\n        month: 12,\r\n        year: 5\r\n    }\r\n\r\n\r\n    const [labels, setLabels] = useState(getLabels()[labelType])\r\n\r\n    const [mainScope, setMainScope] = useState({\r\n        day: {\r\n            start: data.day.length,\r\n            end: data.day.length - 7\r\n        },\r\n        week: {\r\n            start: data.week.length,\r\n            end: data.week.length - 4\r\n        },\r\n        month: {\r\n            start: data.month.length,\r\n            end: 0\r\n        },\r\n        year: {\r\n            start: data.day.length,\r\n            end: data.day.length - 5\r\n        }\r\n    })\r\n    const [chartData, setChartData] = useState([])\r\n    const [stepSize, setStepSize] = useState(getStepSize(data.day))\r\n\r\n\r\n    useEffect(() => {\r\n        if (labelType === \"day\") {\r\n            //console.log(data.day)\r\n            setChartData(data.day.slice(mainScope.day.end, mainScope.day.start))\r\n        }\r\n\r\n        if (labelType === \"week\") {\r\n            //console.log(data.day)\r\n            setChartData(data.week.slice(mainScope.week.end, mainScope.week.start))\r\n        }\r\n        if (labelType === \"month\") {\r\n            //console.log(data.day)\r\n            setChartData(data.month.slice(mainScope.month.end, mainScope.month.start))\r\n        }\r\n\r\n        console.log(getLabels())\r\n        if (labelType === \"year\") {\r\n            //console.log(data.day)\r\n            setChartData(data.year)\r\n        }\r\n    }, [data])\r\n\r\n\r\n    useEffect(() => {\r\n        setLabels(getLabels()[labelType])\r\n    }, [labelType])\r\n\r\n    let data2 = {\r\n        labels: labels,\r\n        datasets: [{\r\n            label: averageName,\r\n            backgroundColor: color,\r\n            borderColor: color,\r\n            data: chartData,\r\n        }],\r\n        options: {\r\n            curvature: 1,\r\n            title: {\r\n                display: true,\r\n                text: name,\r\n\r\n            },\r\n            legend: {\r\n                display: true,\r\n                position: 'bottom'\r\n            },\r\n            scales: {\r\n                yAxes: [{\r\n                    ticks: {\r\n                        stepSize: stepSize,\r\n                    },\r\n                }]\r\n            },\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        < Bar\r\n            data={data2}\r\n            options={data2.options}\r\n            height={500}\r\n            width={700}\r\n        />\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { makeStyles, createMuiTheme } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nexport default function TabsMenu(props) {\r\n\r\n    const [value, setValue] = useState(0);\r\n    const [type, setType] = useState('day')\r\n\r\n    const types = ['day', 'week', 'month', 'year']\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setType(types[newValue])\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleTabs = () => {\r\n        return type\r\n    }\r\n\r\n\r\n    return (\r\n        <Paper className=\"tabs\">\r\n            <Tabs\r\n                value={value}\r\n                onChange={(event, newValue) => {\r\n                    handleChange(event, newValue)\r\n                    props.onChange(types[newValue])\r\n                }}\r\n                indicatorColor=\"secondary\"\r\n                textColor=\"primary\"\r\n                centered\r\n            >\r\n                \r\n                <Tab label=\"WEEK\" />\r\n                <Tab label=\"MONTH\" />\r\n                <Tab label=\"YEAR\" />\r\n            </Tabs>\r\n        </Paper>\r\n    )\r\n}\r\n","let getDayNumber = (date) => {\n  let now = new Date(date);\n  let start = new Date(now.getFullYear(), 0, 0);\n  let diff = (now - start) + ((start.getTimezoneOffset() - now.getTimezoneOffset()) * 60 * 1000);\n  let oneDay = 1000 * 60 * 60 * 24;\n  let day = Math.floor(diff / oneDay);\n  //console.log('Day of year: ' + day);\n\n  return day\n}\n\n\nlet getWeekNumber = (date) => {\n  let now = new Date(date);\n  let start = new Date(now.getFullYear(), 0, 0);\n  let diff = (now - start) + ((start.getTimezoneOffset() - now.getTimezoneOffset()) * 60 * 1000);\n  let oneWeek = 1000 * 60 * 60 * 24 * 7;\n  let week = Math.floor(diff / oneWeek);\n  //console.log('Day of year: ' + day);\n\n  return week\n}\n\n\n\nexport {\n  getDayNumber, getWeekNumber\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Grid } from '@material-ui/core';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { ProgressService, SporterService } from '../api';\r\n//chart\r\nimport Chart from '../components/Chart';\r\nimport TabsMenu from '../components/Tabs';\r\nimport { TextAndLabel } from '../components/texts';\r\nimport { getDayNumber, getWeekNumber } from '../utils/getDayNumber';\r\nimport { getUserIdFromJWT } from '../utils/jwt';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nlet ProgressPage = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [exerciseBase, setExerciseBase] = useState({})\r\n    const [exerciseBaseId, setExerciseBaseId] = useState(0)\r\n    const [chartType, setChartType] = useState(\"day\")\r\n\r\n    const [exerciseBases, setExerciseBases] = useState([])\r\n\r\n    const [progresses, setProgresses] = useState([])\r\n    const [sporter, setSporter] = useState({})\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const [currentProgresses, setCurrentProgresses] = useState([])\r\n\r\n    //datas\r\n    const [dayData, setDayData] = useState(Array(getDayNumber(new Date())).fill(0))\r\n    const [weekData, setWeekData] = useState(Array(getWeekNumber(new Date()) + 1).fill(0))\r\n    const [monthData, setMonthData] = useState(Array(new Date().getMonth() + 1).fill(0))\r\n    const [yearData, setYearData] = useState(Array(5).fill(0))\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        SporterService.getSporterByUserId(getUserIdFromJWT())\r\n            .then((res) => {\r\n                setSporter({ ...res })\r\n            }).catch((e) => console.log('sporter not found'))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        ProgressService.getProgressesBySporter(sporter.id)\r\n            .then((res) => {\r\n                setProgresses([...res])\r\n            })\r\n    }, [sporter.id])\r\n\r\n\r\n    useEffect(() => {\r\n        let EBs = []\r\n        if (progresses.length >= 1) {\r\n            progresses.forEach(progress => {\r\n                //push unique\r\n                if (EBs.find(eb => eb.id === progress.exerciseFull.exerciseBase.id) === undefined) {\r\n                    EBs.push(progress.exerciseFull.exerciseBase)\r\n                }\r\n            });\r\n        }\r\n        setExerciseBases(EBs)\r\n        setLoading(false)\r\n    }, [progresses, progresses.length])\r\n\r\n    useEffect(() => {\r\n        setExerciseBase({ ...exerciseBases[0] })\r\n    }, [exerciseBases])\r\n\r\n\r\n    useEffect(() => {\r\n        let filter = progresses.filter((progress) => {\r\n            return progress.exerciseFull.exerciseBase.id === exerciseBase.id\r\n        })\r\n        setCurrentProgresses(filter)\r\n    }, [exerciseBase.id, progresses])\r\n\r\n    useEffect(() => {\r\n        let updateDays = Array(getDayNumber(new Date())).fill(0)\r\n        currentProgresses.forEach(cp => {\r\n            if (exerciseBase.type === \"time\") {\r\n                updateDays[getDayNumber(cp.createdAt) - 1] = cp.time\r\n            } else {\r\n                updateDays[getDayNumber(cp.createdAt) - 1] = cp.kg\r\n            }\r\n        })\r\n\r\n        //let updatedDays = [...dayData]\r\n        let updateWeek = [...weekData]\r\n        const step = 6\r\n\r\n\r\n        weekData.forEach((w, i) => {\r\n            let weekTot = 0\r\n            //     console.log(\"Week\", i)\r\n            //    console.log(i * 7 + \" - \" + (i * 7 + step))\r\n            for (let n = i * 7; n <= (i * 7 + step); n++) {\r\n\r\n                weekTot += (updateDays[n]) ? updateDays[n] : 0\r\n            }\r\n            updateWeek[i] = parseInt(weekTot / currentProgresses.length)\r\n            weekTot = 0\r\n        })\r\n\r\n        //console.log(updateWeek)\r\n\r\n\r\n        let goodWeek = [...updateWeek].slice(1, updateWeek.length)\r\n        let updateMonth = [...monthData]\r\n        const monthStep = 3\r\n\r\n        monthData.forEach((m, i) => {\r\n\r\n            //console.log(\"month\", i)\r\n            let monthTot = 0\r\n            //console.log(i * 4 + \" - \" + (i * 4 + monthStep))\r\n            for (let n = i * 4; n <= (i * 4 + monthStep); n++) {\r\n\r\n                monthTot += (goodWeek[n]) ? goodWeek[n] : 0\r\n            }\r\n\r\n            updateMonth[i] = parseInt(monthTot / currentProgresses.length)\r\n            monthTot = 0\r\n\r\n        })\r\n\r\n        let updateYear = [...yearData]\r\n\r\n\r\n        yearData.forEach((m, i) => {\r\n            //console.log(\"month\", i)\r\n            let yearTot = 0\r\n            //console.log(i * 4 + \" - \" + (i * 4 + monthStep))\r\n            for (let n = 0; n <= updateMonth.length; n++) {\r\n                yearTot += (updateMonth[n]) ? updateMonth[n] : 0\r\n            }\r\n            updateYear[i] = parseInt(yearTot / currentProgresses.length)\r\n            yearTot = 0\r\n        })\r\n        console.log(updateMonth)\r\n        console.log(updateYear)\r\n\r\n\r\n        setYearData(updateYear)\r\n        setMonthData(updateMonth)\r\n        setWeekData(updateWeek)\r\n        setDayData(updateDays)\r\n    }, [currentProgresses])\r\n\r\n\r\n\r\n\r\n    const handleChange = event => {\r\n\r\n        setExerciseBaseId(event.target.value)\r\n        setExerciseBase({ ...exerciseBases[event.target.value] })\r\n    };\r\n\r\n\r\n    const handleTabsChange = (type) => {\r\n        setChartType(type)\r\n    }\r\n    return (\r\n        <div className=\"progress\">\r\n\r\n            <FormControl variant=\"filled\" className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-filled-label\">Exercise</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-filled-label\"\r\n                    id=\"demo-simple-select-filled\"\r\n                    value={exerciseBaseId ? exerciseBaseId : 0}\r\n\r\n                    onChange={handleChange}\r\n                >\r\n                    {exerciseBases.map((eb, id) => {\r\n                        return <MenuItem key={id} value={id}>{eb.title}</MenuItem>\r\n                    })\r\n                    }\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <TabsMenu onChange={handleTabsChange} />\r\n\r\n            {exerciseBase.type !== \"time\" ?\r\n                (<Chart labelType={chartType} name={exerciseBase.title} averageName=\"Average Kg\" data={{ day: [...dayData], week: [...weekData], month: [...monthData], year: [...yearData] }} />)\r\n                :\r\n                (<Chart labelType={chartType} name={exerciseBase.title} averageName=\"Average Minutes\" data={{ day: [...dayData], week: [...weekData], month: [...monthData], year: [...yearData] }} />)\r\n            }\r\n\r\n\r\n            {/* <Chart labelType={chartType} name={exerciseBase.title} averageName=\"Average performance\" color=\"#0F4C75\" data={[2, 10, 5, 2, 20, 30, 55, 70, 24.2, 63, 49, 10]} /> */}\r\n\r\n            <Grid container spacing={2} >\r\n                <Grid item xs={12}>\r\n                    <TextAndLabel label={exerciseBase.title} text={currentProgresses.length + \" times\"} />\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(ProgressPage)\r\n","import React, { useState } from 'react'\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport { Link, useHistory, useParams } from 'react-router-dom'\r\nimport { Title, SubTitle, Paragraph } from '../components/texts/index'\r\nimport Button from '../components/Button'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { FeedbackService, RateService, WorkoutSessionService } from '../api'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n}));\r\n\r\nlet Feedback = props => {\r\n\r\n    const history = useHistory()\r\n\r\n    const classes = useStyles();\r\n    const [rateValue, setRateValue] = useState(4)\r\n    const [isRated, setIsRated] = useState(false)\r\n\r\n    const [feedbackValue, setFeedbackValue] = useState()\r\n    const [isFeedbackSkipped, setIsFeedbackSkipped] = useState(true)\r\n    const [done, setDone] = useState(false)\r\n\r\n    const [rateId, setRateId] = useState()\r\n    const [message, setMessage] = useState()\r\n\r\n    console.log(props.data.workoutSessionId)\r\n    const handleChange = event => {\r\n        setFeedbackValue(event.target.value);\r\n    };\r\n\r\n    const sendFeedback = () => {\r\n        //TODO-> send feedback to DB\r\n        let body = {\r\n            message: feedbackValue,\r\n            rateId: rateId,\r\n            workoutSessionId: props.data.workoutSessionId,\r\n            trainerId: props.data.sporter.trainer.id\r\n        }\r\n\r\n        FeedbackService.createFeedback(body)\r\n            .then((res) => {\r\n                console.log(res)\r\n            }).catch((e) => console.log(e))\r\n\r\n        WorkoutSessionService.setDone({ workoutSessionId: props.data.workoutSessionId, done: true })\r\n            .then((res) => {\r\n                console.log(res)\r\n                setDone(true)\r\n            }).catch((e) => console.log(e))\r\n    }\r\n\r\n    const acceptFeedback = () => {\r\n        //finally store rate\r\n        let body = {\r\n            workoutSessionId: props.data.workoutSessionId,\r\n            rate: rateValue,\r\n            sporterId: props.data.sporter.id\r\n        }\r\n        RateService.createRate(body)\r\n            .then((res) => {\r\n                console.log(res)\r\n                setRateId(res.data.id)\r\n            }).catch((e) => console.log(e))\r\n        setIsFeedbackSkipped(false)\r\n    }\r\n\r\n    const skipFeedback = () => {\r\n\r\n        //finally store rate\r\n        let body = {\r\n            workoutSessionId: props.data.workoutSessionId,\r\n            rate: rateValue,\r\n            sporterId: props.data.sporter.id\r\n        }\r\n        RateService.createRate(body)\r\n            .then((res) => {\r\n                console.log(res)\r\n                setRateId(res.data.id)\r\n\r\n            }).catch((e) => console.log(e))\r\n\r\n        WorkoutSessionService.setDone({ workoutSessionId: props.data.workoutSessionId, done: true })\r\n            .then((res) => {\r\n                setIsFeedbackSkipped(true)\r\n                setDone(true)\r\n            }).catch((e) => console.log(e))\r\n\r\n\r\n        history.push('/')\r\n\r\n\r\n    }\r\n    if (!done) {\r\n\r\n\r\n        if (!isFeedbackSkipped) {\r\n            return (\r\n                <Card className=\"feedback__workoutSession\">\r\n                    <div className=\"feedback__main\">\r\n                        <SubTitle text=\"Write your feedback here\" />\r\n                        <div className=\"feedback__text\">\r\n                            <Rating\r\n                                name=\"workout-rating\"\r\n                                value={rateValue}\r\n                                onChange={(event, newValue) => {\r\n                                    setRateValue(newValue);\r\n                                }}\r\n                            />\r\n                            <form className={classes.root} noValidate autoComplete=\"off\">\r\n                                <div>\r\n                                    <TextField\r\n                                        autoFocus\r\n                                        id=\"standard-multiline-flexible\"\r\n                                        multiline\r\n                                        rowsMax=\"5\"\r\n                                        value={feedbackValue}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"feedback__send--button\">\r\n                            <Button onClick={() => { sendFeedback() }} text=\"SEND\" />\r\n                        </div>\r\n                    </div>\r\n                </Card>\r\n            )\r\n        }\r\n\r\n        if (isRated) {\r\n            return (\r\n                <Card className=\"feedback__workoutSession\">\r\n                    <div className=\"feedback__main\">\r\n                        <SubTitle text=\"Would you like to give a feedback?\" />\r\n                        <div className=\"feedback__choice\">\r\n                            <Button onClick={() => { acceptFeedback() }} text=\"YES\" />\r\n                            <Button onClick={() => { skipFeedback() }} text=\"NO, THANKS\" variant=\"outlined\" />\r\n                        </div>\r\n                    </div>\r\n                </Card>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                // <div>\r\n                //     <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n                //         <Typography component=\"legend\">Rate here</Typography>\r\n                //         <Rating\r\n                //             name=\"simple-controlled\"\r\n                //             rateValue={rateValue}\r\n                //             onChange={(event, newValue) => {\r\n                //                 setValue(newValue);\r\n                //             }}\r\n                //         />\r\n                //     </Box>\r\n                // </div>\r\n                <Card className=\"feedback__workoutSession\">\r\n                    <div className=\"feedback__main\">\r\n                        <SubTitle text=\"How great do you feel after this workout session?\" />\r\n                        <div className=\"feedback__rating\">\r\n                            <Paragraph text=\"Tap to Rate\" />\r\n                            <Rating\r\n                                name=\"workout-rating\"\r\n                                value={rateValue}\r\n                                onChange={(event, newValue) => {\r\n                                    setRateValue(newValue);\r\n                                }}\r\n                            />\r\n                        </div>\r\n\r\n                        <Button onClick={() => { setIsRated(true) }} text=\"SEND\" />\r\n                    </div>\r\n                </Card>\r\n            );\r\n        }\r\n    } else {\r\n        //TODO message: today end\r\n        return null\r\n    }\r\n}\r\n\r\n\r\nexport default Feedback","import React, { useEffect, useState } from 'react'\r\nimport BaseLayout from '../layouts/base';\r\nimport ExerciseCard from '../components/ExerciseCard'\r\nimport Timer from '../components/Timer'\r\nimport { Title, SubTitle } from '../components/texts'\r\nimport Return from '../components/Return'\r\nimport Feedback from '../components/Feedback'\r\nimport { withRouter, useHistory, useParams } from 'react-router-dom';\r\n\r\n\r\nimport { ExerciseFullService, SporterService } from '../api'\r\nimport { getUserIdFromJWT } from '../utils/jwt'\r\n\r\nlet TodayExercisesPage = (props) => {\r\n\r\n    let { workoutsessionId } = useParams()\r\n\r\n    let exercisesV2 = [{\r\n        title: \"1 0titltes\",\r\n        imagePath: \"/images/test.jpg\",\r\n        videoPath: \"/videos/test.mp4\",\r\n        cardioLevel: \"1\",\r\n        muscleLevel: \"4\",\r\n        type: \"reps\",\r\n        mainInfo: { sets: 3, reps: 8, kg: 16 },\r\n        done: false,\r\n        description: \"ttest descirption is fun but leuk lksdflk sdn dlsknfl ksdlfkj j jds flis  klmlk\"\r\n    }\r\n        , {\r\n        trainerId: 1,\r\n        title: \"Stair Run\",\r\n        type: \"time\",\r\n        muscleLevel: 2,\r\n        cardioLevel: 4,\r\n        imagePath: 'test.jpg',\r\n        videoPath: 'test.mp4',\r\n        description: 'Description lorem ipsom lk lkj lkf nI here  odn nneren len nwang tnedar tnaw isc ocool',\r\n        mainInfo: {\r\n            time: 22\r\n        }\r\n    }, {\r\n        title: \"2 Title\",\r\n        imagePath: \"/images/test.jpg\",\r\n        videoPath: \"/videos/test.mp4\",\r\n        cardioLevel: \"4\",\r\n        muscleLevel: \"2\", type: \"time\",\r\n        mainInfo: { time: 20 },\r\n        description: \"ttest descirption is fun but leuk lksdflk sdn dlsknfl ksdlfkj j jds flis  klmlk\",\r\n        done: false,\r\n    }, {\r\n        title: \"Running\",\r\n        done: true,\r\n        imagePath: \"/images/test.jpg\",\r\n        videoPath: \"/videos/test.mp4\",\r\n        cardioLevel: \"4\",\r\n        muscleLevel: \"2\", type: \"time\",\r\n        mainInfo: { time: 20 },\r\n        description: \"ttest descirption is fun but leuk lksdflk sdn dlsknfl ksdlfkj j jds flis  klmlk\"\r\n    }]\r\n\r\n    const [isRated, setIsRated] = useState(false)\r\n    const [almostDone, setAlmostDone] = useState(false)\r\n    const [exercises, setExercises] = useState([])\r\n\r\n    const [sporter, setSporter] = useState({})\r\n\r\n    const [unfinishedExercises, setUnfinishedExercises] = useState([])\r\n    const [finishedExercises, setFinishedExercises] = useState([])\r\n\r\n    useEffect(() => {\r\n        SporterService.getSporterByUserId(getUserIdFromJWT())\r\n            .then((res) => {\r\n                setSporter(res)\r\n            }).catch((e) => console.log('sporter not found'))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(workoutsessionId)\r\n        ExerciseFullService.getExerciseFullsByWorkoutSession(workoutsessionId)\r\n            .then((res) => {\r\n                console.log(res)\r\n                setExercises([...res])\r\n            })\r\n            .catch((e) => console.log(e))\r\n\r\n    }, [workoutsessionId])\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (unfinishedExercises.length === 0) {\r\n            setAlmostDone(true)\r\n        } else {\r\n            setAlmostDone(false)\r\n        }\r\n\r\n\r\n    }, [unfinishedExercises])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        let unfinished = exercises.filter((exercise) => {\r\n            return exercise.done === false\r\n        })\r\n\r\n        let finished = exercises.filter((exercise) => {\r\n            return exercise.done === true\r\n        })\r\n        console.log(unfinished)\r\n        setUnfinishedExercises(unfinished)\r\n        setFinishedExercises(finished)\r\n    }, [exercises])\r\n\r\n    useEffect(() => {\r\n\r\n        let header = document.getElementById('main__header')\r\n\r\n        header.scrollIntoView({ behavior: \"smooth\" })\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"today__exercises\">\r\n            {/* <div className=\"today__timer\">\r\n                <Timer />\r\n            </div> */}\r\n            <SubTitle text=\"Today's exercises\" />\r\n            {unfinishedExercises.length !== 0 ?\r\n                (unfinishedExercises.map((data, i) => ((!data.done) ? <ExerciseCard key={i} data={data} /> : null)))\r\n                :\r\n                (\"Nicely done, you are all done for today!\")\r\n            }\r\n\r\n            {exercises[0] && almostDone && !exercises[0].workoutSession.done &&\r\n                <Feedback data={{ workoutSessionId: workoutsessionId, sporter: sporter }} />\r\n            }\r\n            <SubTitle text=\"Completed exercises\" />\r\n            {finishedExercises.map((data, i) => ((data.done) ? <ExerciseCard key={i} data={data} /> : null))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(TodayExercisesPage)\r\n","import React, { useEffect, useState } from 'react'\r\nimport BaseLayout from '../layouts/base';\r\n\r\nimport WorkoutCard from '../components/WorkoutCard'\r\nimport HorizontalContainer from '../components/HorizontalContainer'\r\nimport { SubTitle } from '../components/texts'\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\n\r\n//api\r\nimport { SporterService, WorkoutSessionService } from '../api'\r\nimport { getUserIdFromJWT } from '../utils/jwt'\r\n\r\n\r\nlet WorkoutsPage = () => {\r\n\r\n    const [values, setValues] = useState({})\r\n\r\n    const [workoutSessions, setWorkoutSessions] = useState([])\r\n    const [freeWorkoutSessions, setFreeWorkoutSessions] = useState([])\r\n    const [workoutProgramId, setWorkoutProgramId] = useState(null)\r\n\r\n    useEffect(() => {\r\n        SporterService.getSporterByUserId(getUserIdFromJWT())\r\n            .then((res) => {\r\n                console.log(res)\r\n                setWorkoutProgramId(res.workoutProgram.id)\r\n            }).catch((e) => console.log('sporter not found'))\r\n    }, [values])\r\n\r\n    useEffect(() => {\r\n        WorkoutSessionService.getWorkoutSessionsByWorkoutProgram(workoutProgramId)\r\n            .then((res) => {\r\n                console.log(res)\r\n                setWorkoutSessions([...res])\r\n            }).catch((e) => console.log('sessions not found'))\r\n\r\n    }, [workoutProgramId])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        WorkoutSessionService.getWorkoutSessionsByFree()\r\n            .then((res) => {\r\n                console.log(res)\r\n                setFreeWorkoutSessions([...res])\r\n            }).catch((e) => console.log('free sessions not found'))\r\n\r\n    }, [workoutSessions])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"workouts\">\r\n            <SubTitle text=\"Yours trainer's workout programs\" />\r\n            <HorizontalContainer>\r\n                {workoutSessions.map((workoutSession, id) => {\r\n                    return <WorkoutCard key={id} workoutSession={workoutSession} />\r\n                })\r\n                }\r\n                {workoutProgramId === null &&\r\n                \r\n                    \"You are not assigned to any workout program!\"\r\n                }\r\n            </HorizontalContainer>\r\n\r\n            <SubTitle text=\"Free workout programs\" />\r\n            <HorizontalContainer>\r\n\r\n            {freeWorkoutSessions.map((workoutSession, id) => {\r\n                    return <WorkoutCard key={id} workoutSession={workoutSession} />\r\n                })\r\n                }\r\n            </HorizontalContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(WorkoutsPage)\r\n","import * as jwt from 'jwt-decode';\r\n\r\n\r\nconst checkRole = () => {\r\n\r\n  let token = localStorage.getItem('mtTokenSporter')\r\n  return jwt(token, {\r\n    complete: true\r\n  })\r\n}\r\n\r\nexport default checkRole","import React, { useState, useEffect } from 'react'\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles, Typography } from '@material-ui/core';\r\nimport Button from '../components/Button'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport clsx from 'clsx'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport { MdVisibility, MdVisibilityOff } from \"react-icons/md\";\r\n\r\n\r\n//api\r\nimport { AuthService, UserService } from '../api'\r\nimport checkRole from '../utils/checkRole'\r\n//jwt authen\r\nimport { isJWTValid } from '../utils/jwt'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n        },\r\n        margin: {\r\n            margin: theme.spacing(1),\r\n        },\r\n        withoutLabel: {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n        textField: {\r\n            width: '25ch',\r\n        }\r\n    }\r\n}\r\n));\r\n\r\nlet LoginPage = () => {\r\n    const classes = useStyles()\r\n    let history = useHistory();\r\n    const [isAuth, setIsAuth] = useState(true)\r\n    const [values, setValues] = React.useState({\r\n        email: 'jc@gmail.com',\r\n        amount: '',\r\n        password: '123456',\r\n        weight: '',\r\n        weightRange: '',\r\n        showPassword: false,\r\n        error: false\r\n        , accessDenied: false\r\n    })\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value })\r\n    }\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword })\r\n    }\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault()\r\n    }\r\n\r\n    const showError = e => {\r\n        console.log(e.message)\r\n        if (parseInt(e.message) === 401) {\r\n            setValues({ ...values, error: false, accessDenied: true })\r\n        } else {\r\n            setValues({ ...values, error: true, accessDenied: false })\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (isJWTValid()) {\r\n            history.push(\"/\")\r\n        } else {\r\n            AuthService.logout()\r\n\r\n        }\r\n    }, [history, isAuth])\r\n\r\n\r\n    const login = (e) => {\r\n        e.preventDefault()\r\n        AuthService.login({ email: values.email, password: values.password })\r\n            .then((response) => {\r\n                if (checkRole().role === \"sporter\") {\r\n                    console.log(checkRole())\r\n                    history.push(\"/\")\r\n                } else {\r\n                    AuthService.logout()\r\n                    throw new Error(401)\r\n                }\r\n            }).catch((e) => showError(e))\r\n\r\n        console.log(\"logged in\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"App main__app\">\r\n            <main className=\"main__content\">\r\n                <div className=\"login\">\r\n                    <div className=\"login__icon\">\r\n                        <img src={`${process.env.PUBLIC_URL}/svgs/start_logo.svg`} alt=\"\" srcSet=\"\" />\r\n\r\n                    </div>\r\n                    \r\n                    <form className={classes.root} noValidate autoComplete=\"off\">\r\n                        <TextField\r\n                            //error={values.email === '' || values.error ? true : false}\r\n                            id=\"standard-helperText\"\r\n                            label=\"E-mail\"\r\n                            helperText={values.email === '' || values.error ? \"Fill in correct e-mail\" : ''}\r\n                            onChange={handleChange('email')}\r\n                            value={values.email}\r\n                        />\r\n                        <FormControl className={clsx(classes.margin, classes.textField)}>\r\n                            <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\r\n                            <Input\r\n                                error={values.password === '' && values.error ? true : false}\r\n                                id=\"standard-adornment-password\"\r\n                                type={values.showPassword ? 'text' : 'password'}\r\n                                value={values.password}\r\n                                onChange={handleChange('password')}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                        >\r\n                                            {values.showPassword ? <MdVisibilityOff /> : <MdVisibility />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                            />\r\n                        </FormControl>\r\n                        <p className=\"MuiFormHelperText-root MuiFormHelperText-filled\" id=\"standard-helperText-helper-text\">{values.password === '' || values.error ? \"Fill in correct password\" : ''}</p>\r\n\r\n                        <div className=\"form__actions\">\r\n                            <Grid container justify=\"space-between\" alignItems=\"center\" spacing={2}>\r\n                                <Grid item sm={6}>\r\n                                    {/* <Link to=\"/\">\r\n                                        Forgot Your Password?\r\n                        </Link> */}\r\n                                </Grid>\r\n                                <Grid item sm={6}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        text=\"Sign in\"\r\n                                        onClick={login}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n\r\n                        </div>\r\n                        {values.accessDenied &&\r\n                            <Typography\r\n                                className=\"error\"\r\n                                color=\"textSecondary\"\r\n                                variant=\"caption\"\r\n                            >\r\n                                Access Denied Trainer!\r\n                </Typography>\r\n                        }\r\n                        <div className=\"form__action--register\">\r\n                            <Link to=\"/auth/register\">\r\n                                Create Account\r\n                        </Link>\r\n                        </div>\r\n                    </form >\r\n                </div>\r\n            </main>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default LoginPage","import Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n//form\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\n//slider\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport clsx from 'clsx';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { MdVisibility, MdVisibilityOff } from \"react-icons/md\";\r\nimport { useHistory } from 'react-router-dom';\r\n//api\r\nimport { UserService } from '../api';\r\nimport Header from '../components/Header';\r\nimport { Title } from '../components/texts';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    paper: {\r\n        backgroundColor: 'white'\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    actionsContainer: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    resetContainer: {\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nfunction valuetext(value) {\r\n    return `${value} cm`;\r\n}\r\n\r\nfunction getSteps() {\r\n    return ['Select Gender', 'Height', 'Weight', 'Goal', \"Profile\"];\r\n}\r\n\r\nconst marks = {\r\n    heights: [\r\n        {\r\n            value: 130,\r\n            label: '130 cm',\r\n        },\r\n        {\r\n            value: 168,\r\n            label: '168 cm',\r\n        },\r\n        {\r\n            value: 228,\r\n            label: '228 cm',\r\n        }\r\n    ],\r\n    weights: [\r\n        {\r\n            value: 50,\r\n            label: '50 kg',\r\n        },\r\n        {\r\n            value: 190,\r\n            label: '190 kg',\r\n        }\r\n    ]\r\n};\r\n\r\n\r\nlet RegisterPage = () => {\r\n\r\n    let history = useHistory();\r\n\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const steps = getSteps();\r\n\r\n    //user informations\r\n    const [userInfo, setUserInfo] = useState({\r\n        gender: \"female\",\r\n        height: 168,\r\n        weight: 50,\r\n        goal: 'muscle',\r\n        fullName: '',\r\n        email: '',\r\n        password: '',\r\n        age: 20,\r\n        showPassword: false,\r\n        role: \"sporter\",\r\n        imageName: \"images/profile_a49yr7\"\r\n    })\r\n\r\n    const handleClickShowPassword = () => {\r\n        setUserInfo({ ...userInfo, showPassword: !userInfo.showPassword })\r\n    }\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault()\r\n    }\r\n    const handlePasswordChange = (prop) => (event) => {\r\n        setUserInfo({ ...userInfo, [prop]: event.target.value })\r\n    }\r\n    //end  password\r\n\r\n\r\n    const handleChange = (prop) => (event, value) => {\r\n        setUserInfo({ ...userInfo, [prop]: value })\r\n    }\r\n\r\n\r\n    const handleTextFieldChange = (event) => {\r\n        console.log(event.target.value)\r\n        setUserInfo({ ...userInfo, [event.target.name]: event.target.value })\r\n    }\r\n\r\n\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n\r\n    const handleFinish = () => {\r\n        history.push(\"/\")\r\n\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    const handleReset = () => {\r\n        setActiveStep(0);\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n    }, [history])\r\n\r\n    const registerUser = (e) => {\r\n        e.preventDefault()\r\n\r\n        UserService.createUser(userInfo)\r\n            .then((response) => {\r\n                console.log(\"pushed\")\r\n                history.push(\"/\")\r\n            }).catch((e) => console.log('failed registration'))\r\n    }\r\n\r\n    function getStepContent(step) {\r\n        switch (step) {\r\n            case 0:\r\n                return (<FormControl component=\"fieldset\">\r\n                    <RadioGroup aria-label=\"gender\" name=\"gender\" value={userInfo.gender} onChange={handleChange('gender')}>\r\n                        <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\r\n                        <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\r\n                    </RadioGroup>\r\n                </FormControl>)\r\n            case 1:\r\n                return (\r\n                    <FormControl component=\"fieldset\">\r\n                        <Typography id=\"discrete-slider\" gutterBottom>\r\n                            I am {userInfo.height} cm tall.\r\n                        </Typography>\r\n                        <Slider\r\n                            defaultValue={168}\r\n                            //getAriaValueText={valuetext}\r\n                            onChange={handleChange('height')}\r\n                            aria-labelledby=\"height\"\r\n                            valueLabelDisplay=\"auto\"\r\n                            step={1}\r\n                            marks={marks.heights}\r\n                            min={120}\r\n                            max={228}\r\n                            name='height'\r\n                        />\r\n                    </FormControl>)\r\n            case 2:\r\n                return (\r\n                    <FormControl component=\"fieldset\">\r\n                        <Typography id=\"discrete-slider\" gutterBottom>\r\n                            I weight {userInfo.weight} kg.\r\n                        </Typography>\r\n                        <Slider\r\n                            defaultValue={50}\r\n                            //getAriaValueText={valuetext}\r\n                            onChange={handleChange('weight')}\r\n                            aria-labelledby=\"weight\"\r\n                            valueLabelDisplay=\"auto\"\r\n                            step={1}\r\n                            marks={marks.weights}\r\n                            min={40}\r\n                            max={190}\r\n                            name='weight'\r\n                        />\r\n                    </FormControl>)\r\n\r\n            case 3:\r\n                return (<FormControl component=\"fieldset\">\r\n                    <RadioGroup aria-label=\"goal\" name=\"goal\" value={userInfo.goal} onChange={handleChange('goal')}>\r\n                        <FormControlLabel value=\"strength\" control={<Radio />} label=\"Build Strength\" />\r\n                        <FormControlLabel value=\"muscle\" control={<Radio />} label=\"Build Muscle\" />\r\n                        <FormControlLabel value=\"fat\" control={<Radio />} label=\"Lose Fat\" />\r\n                        <FormControlLabel value=\"stamina\" control={<Radio />} label=\"Improve Stamina\" />\r\n                    </RadioGroup>\r\n                </FormControl>)\r\n            case 4:\r\n                return (<FormControl component=\"fieldset\">\r\n                    <TextField\r\n                        onChange={handleTextFieldChange}\r\n                        id=\"standard-helperText\"\r\n                        label=\"Full name\"\r\n                        name='fullName'\r\n                    />\r\n                    <TextField\r\n                        id=\"standard-helperText\"\r\n                        label=\"E-mail\"\r\n                        name='email'\r\n                        onChange={handleTextFieldChange}\r\n                    />\r\n\r\n                    <FormControl className={clsx(classes.margin, classes.textField)}>\r\n                        <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\r\n                        <Input\r\n                            id=\"standard-adornment-password\"\r\n                            type={userInfo.showPassword ? 'text' : 'password'}\r\n                            value={userInfo.password}\r\n                            onChange={handlePasswordChange('password')}\r\n                            endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={handleClickShowPassword}\r\n                                        onMouseDown={handleMouseDownPassword}\r\n                                    >\r\n                                        {userInfo.showPassword ? <MdVisibilityOff /> : <MdVisibility />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n\r\n                </FormControl >)\r\n            default:\r\n                return 'Unknown step';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"App main__app\">\r\n            <Header />\r\n            <main className=\"main__content\">\r\n                <div className=\"register\">\r\n                    <div className={classes.root}>\r\n                        <Title text=\"Let's fill in informations\" />\r\n                        <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n\r\n                            {steps.map((label, index) => (\r\n                                <Step key={label}>\r\n                                    <StepLabel>{label}</StepLabel>\r\n                                    <StepContent>\r\n                                        {getStepContent(index)}\r\n                                        <div className={classes.actionsContainer}>\r\n                                            <div>\r\n                                                <Button\r\n                                                    disabled={activeStep === 0}\r\n                                                    onClick={handleBack}\r\n                                                    className={classes.button}\r\n                                                >\r\n                                                    Back\r\n                                            </Button>\r\n                                                <Button\r\n                                                    variant=\"contained\"\r\n                                                    color=\"primary\"\r\n                                                    onClick={(activeStep === steps.length - 1) ? registerUser : handleNext}\r\n                                                    className={classes.button}\r\n                                                >\r\n                                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                                                </Button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </StepContent>\r\n                                </Step>\r\n                            ))}\r\n                        </Stepper>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default RegisterPage","import Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport InputLabel from '@material-ui/core/InputLabel';\n//form\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n//slider\nimport Slider from '@material-ui/core/Slider';\nimport Step from '@material-ui/core/Step';\nimport StepContent from '@material-ui/core/StepContent';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Stepper from '@material-ui/core/Stepper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport clsx from 'clsx';\nimport React, { useEffect, useState } from 'react';\nimport { MdVisibility, MdVisibilityOff } from \"react-icons/md\";\nimport { useHistory } from 'react-router-dom';\n//api\nimport { UserService } from '../api';\nimport Header from '../components/Header';\nimport { Title } from '../components/texts';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        backgroundColor: 'white'\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n        marginBottom: theme.spacing(2),\n    },\n    resetContainer: {\n        padding: theme.spacing(3),\n    },\n}));\n\nfunction valuetext(value) {\n    return `${value} cm`;\n}\n\nfunction getSteps() {\n    return ['Select Gender', 'Height', 'Weight', 'Goal', \"Profile\"];\n}\n\nconst marks = {\n    heights: [\n        {\n            value: 130,\n            label: '130 cm',\n        },\n        {\n            value: 168,\n            label: '168 cm',\n        },\n        {\n            value: 228,\n            label: '228 cm',\n        }\n    ],\n    weights: [\n        {\n            value: 50,\n            label: '50 kg',\n        },\n        {\n            value: 190,\n            label: '190 kg',\n        }\n    ]\n};\n\n\nlet EditProfilePage = () => {\n\n    let history = useHistory();\n\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = useState(0);\n    const steps = getSteps();\n\n    //user informations\n    const [userInfo, setUserInfo] = useState({\n        gender: \"female\",\n        height: 168,\n        weight: 50,\n        goal: 'muscle',\n        fullName: '',\n        email: '',\n        password: '',\n        age: 20,\n        showPassword: false,\n        role: \"sporter\",\n        imageName: \"images/skr_wcjk4w\"\n    })\n\n    const handleClickShowPassword = () => {\n        setUserInfo({ ...userInfo, showPassword: !userInfo.showPassword })\n    }\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault()\n    }\n    const handlePasswordChange = (prop) => (event) => {\n        setUserInfo({ ...userInfo, [prop]: event.target.value })\n    }\n    //end  password\n\n\n    const handleChange = (prop) => (event, value) => {\n        setUserInfo({ ...userInfo, [prop]: value })\n    }\n\n\n    const handleTextFieldChange = (event) => {\n        console.log(event.target.value)\n        setUserInfo({ ...userInfo, [event.target.name]: event.target.value })\n    }\n\n\n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n\n    const handleFinish = () => {\n        history.push(\"/\")\n\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n    useEffect(() => {\n\n    }, [history])\n\n    const updateUser = (e) => {\n        e.preventDefault()\n\n        //TODO update user\n        // UserService.createUser(userInfo)\n        //     .then((response) => {\n        //         console.log(\"pushed\")\n        //         history.push(\"/\")\n        //     }).catch((e) => console.log('failed registration'))\n    }\n\n    function getStepContent(step) {\n        switch (step) {\n            case 0:\n                return (<FormControl component=\"fieldset\">\n                    <RadioGroup aria-label=\"gender\" name=\"gender\" value={userInfo.gender} onChange={handleChange('gender')}>\n                        <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\n                        <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n                    </RadioGroup>\n                </FormControl>)\n            case 1:\n                return (\n                    <FormControl component=\"fieldset\">\n                        <Typography id=\"discrete-slider\" gutterBottom>\n                            I am {userInfo.height} cm tall.\n                        </Typography>\n                        <Slider\n                            defaultValue={168}\n                            //getAriaValueText={valuetext}\n                            onChange={handleChange('height')}\n                            aria-labelledby=\"height\"\n                            valueLabelDisplay=\"auto\"\n                            step={1}\n                            marks={marks.heights}\n                            min={120}\n                            max={228}\n                            name='height'\n                        />\n                    </FormControl>)\n            case 2:\n                return (\n                    <FormControl component=\"fieldset\">\n                        <Typography id=\"discrete-slider\" gutterBottom>\n                            I weight {userInfo.weight} kg.\n                        </Typography>\n                        <Slider\n                            defaultValue={50}\n                            //getAriaValueText={valuetext}\n                            onChange={handleChange('weight')}\n                            aria-labelledby=\"weight\"\n                            valueLabelDisplay=\"auto\"\n                            step={1}\n                            marks={marks.weights}\n                            min={40}\n                            max={190}\n                            name='weight'\n                        />\n                    </FormControl>)\n\n            case 3:\n                return (<FormControl component=\"fieldset\">\n                    <RadioGroup aria-label=\"goal\" name=\"goal\" value={userInfo.goal} onChange={handleChange('goal')}>\n                        <FormControlLabel value=\"strength\" control={<Radio />} label=\"Build Strength\" />\n                        <FormControlLabel value=\"muscle\" control={<Radio />} label=\"Build Muscle\" />\n                        <FormControlLabel value=\"fat\" control={<Radio />} label=\"Lose Fat\" />\n                        <FormControlLabel value=\"stamina\" control={<Radio />} label=\"Improve Stamina\" />\n                    </RadioGroup>\n                </FormControl>)\n            case 4:\n                return (<FormControl component=\"fieldset\">\n                    <TextField\n                        onChange={handleTextFieldChange}\n                        id=\"standard-helperText\"\n                        label=\"Full name\"\n                        name='fullName'\n                    />\n                    <TextField\n                        id=\"standard-helperText\"\n                        label=\"E-mail\"\n                        name='email'\n                        onChange={handleTextFieldChange}\n                    />\n\n                    <FormControl className={clsx(classes.margin, classes.textField)}>\n                        <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\n                        <Input\n                            id=\"standard-adornment-password\"\n                            type={userInfo.showPassword ? 'text' : 'password'}\n                            value={userInfo.password}\n                            onChange={handlePasswordChange('password')}\n                            endAdornment={\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                        aria-label=\"toggle password visibility\"\n                                        onClick={handleClickShowPassword}\n                                        onMouseDown={handleMouseDownPassword}\n                                    >\n                                        {userInfo.showPassword ? <MdVisibilityOff /> : <MdVisibility />}\n                                    </IconButton>\n                                </InputAdornment>\n                            }\n                        />\n                    </FormControl>\n\n                </FormControl >)\n            default:\n                return 'Unknown step';\n        }\n    }\n\n    return (\n        <div className=\"App main__app\">\n            <main className=\"main__content\">\n                <div className=\"register\">\n                    <div className={classes.root}>\n                        <Title text=\"Let's fill in informations\" />\n                        <Stepper activeStep={activeStep} orientation=\"vertical\">\n\n                            {steps.map((label, index) => (\n                                <Step key={label}>\n                                    <StepLabel>{label}</StepLabel>\n                                    <StepContent>\n                                        {getStepContent(index)}\n                                        <div className={classes.actionsContainer}>\n                                            <div>\n                                                <Button\n                                                    disabled={activeStep === 0}\n                                                    onClick={handleBack}\n                                                    className={classes.button}\n                                                >\n                                                    Back\n                                            </Button>\n                                                <Button\n                                                    variant=\"contained\"\n                                                    color=\"primary\"\n                                                    onClick={(activeStep === steps.length - 1) ? updateUser : handleNext}\n                                                    className={classes.button}\n                                                >\n                                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                                </Button>\n                                            </div>\n                                        </div>\n                                    </StepContent>\n                                </Step>\n                            ))}\n                        </Stepper>\n                    </div>\n                </div>\n            </main>\n        </div>\n\n    )\n}\nexport default EditProfilePage","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst RouteWithLayout = props => {\r\n  const { layout: Layout, component: Component, ...rest } = props;\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={matchProps => (\r\n        <Layout>\r\n          <Component {...matchProps} />\r\n        </Layout>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nRouteWithLayout.propTypes = {\r\n  component: PropTypes.any.isRequired,\r\n  layout: PropTypes.any.isRequired,\r\n  path: PropTypes.string\r\n};\r\n\r\nexport default RouteWithLayout;\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport HomePage from '../pages/index'\r\nimport ExerciseDetailPage from '../pages/ExerciseDetailPage'\r\nimport ProfilePage from '../pages/ProfilePage'\r\nimport ProgressPage from '../pages/ProgressPage'\r\nimport TodayExercisesPage from '../pages/TodayExercisesPage'\r\nimport WorkoutsPage from '../pages/WorkoutsPage'\r\nimport LoginPage from '../pages/Login'\r\nimport RegisterPage from '../pages/Register';\r\nimport EditProfilePage from '../pages/EditProfile';\r\n\r\nimport BaseLayout from '../layouts/base';\r\nimport { default as RouteWithLayout } from '../components/RouteWithLayout';\r\n\r\nlet router = () => {\r\n\r\n    return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n            <Switch>\r\n                <Route exact path=\"/auth/login\" component={LoginPage} />\r\n                <Route exact path=\"/auth/register\" component={RegisterPage} />\r\n                <RouteWithLayout path=\"/\" component={HomePage} exact layout={BaseLayout} />\r\n                <RouteWithLayout exact layout={BaseLayout} path=\"/exercisedetail/:workoutSessionId/:exerciseFullId\" component={ExerciseDetailPage} />\r\n\r\n                <RouteWithLayout exact layout={BaseLayout} path=\"/today/:workoutsessionId\" component={TodayExercisesPage} />\r\n                <RouteWithLayout exact layout={BaseLayout} path=\"/workouts\" component={WorkoutsPage} />\r\n                <RouteWithLayout exact layout={BaseLayout} path=\"/progress\" component={ProgressPage} />\r\n                <RouteWithLayout exact layout={BaseLayout} path=\"/profile\" component={ProfilePage} />\r\n                <RouteWithLayout exact layout={BaseLayout} path=\"/profile/edit\" component={EditProfilePage} />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default router","import React from 'react';\nimport logo from './logo.svg';\nimport './App.sass';\nimport ATPRouter from './router'\n\nfunction App() {\n  return (\n    <ATPRouter />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}